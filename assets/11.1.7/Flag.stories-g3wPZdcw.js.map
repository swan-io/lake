{"version":3,"mappings":"0nBAOA,MAAMA,EAAiB,OAEvB,IAAIC,EAEJ,MAAMC,EAAeC,EAAK,SAAY,CACpC,KAAM,CAAE,QAASC,GAAU,MAAMC,EAAA,wBAAAD,CAAA,eAAO,qBAA4B,yBAC3D,OAAAH,EAAAG,EACFA,CACT,CAAC,EASYE,EAAQC,GAAiB,CAC9B,MAAE,KAAAC,CAAS,EAAAD,EACXE,EAAQF,EAAM,OAAS,GAEvB,CAACG,EAAKC,CAAM,EAAIC,WAASX,CAAM,EAErCY,YAAU,IAAM,CACVZ,GAAU,MACPC,EAAa,MAAM,KAAKS,CAAM,CAEvC,EAAG,CAAE,GAEC,MAAAG,EAAOC,UAAQ,IACZC,EAAMR,CAAI,EACd,KAAK,KAAM,IAAMS,EAAiB,MAAM,CAAC,EACzC,UAAU,IACF,IAAIjB,EAAiBQ,EAAK,WAAW,CAAC,GAAG,SAAS,EAAE,CAAC,KAAKR,EAAiBQ,EAAK,WAAW,CAAC,GAAG,SAAS,EAAE,CAAC,EACnH,EACF,CAACA,CAAI,CAAC,EAGP,OAAAU,EAAA,IAACC,GAAI,QAAQ,YAAY,MAAO,CAAE,OAAQV,EAAO,MAAAA,CAAA,EAC9C,SAAAC,GAAO,MAAQI,GAAQ,KAAQI,MAAAE,EAAA,CAAI,UAAW,GAAGV,CAAG,IAAII,CAAI,EAAI,GAAK,IACxE,EAEJ,4SCvCA,MAAMO,EAASC,EAAWC,OAAO,CAC/BC,UAAW,CACTC,SAAU,MACZ,EACAX,KAAM,CACJY,UAAW,KACXC,SAAU,EACVC,SAAU,IACVC,QAAS,EACX,CACF,CAAC,EAEcC,EAAA,CACbC,MAAO,oBACPC,UAAW1B,CACb,EAEa2B,EAAUA,IAAM,CACrBC,QAAQnB,EACZ,YAAM,CACJ,CAAEoB,KAAM,iBAAkB3B,KAAM,MAChC,GAAG4B,EAAUC,IAAI,CAAC,CAAEC,OAAMH,WAAY,CAAEA,OAAM3B,KAAM8B,GAAO,CAAC,EAE9D,EACF,EAGE,OAAApB,EAAA,IAACqB,GAAW,MAAM,OAChB,eAACC,EAAI,WAAU,MAAM,MAAOnB,EAAOG,UAChCU,SAAMG,SACJI,EAAA,KAAAD,EAAA,CAAI,WAAW,SAAS,MAAOnB,EAAOP,KACrC,UAAAI,EAAA,IAACZ,EAAK,MAAMoC,EAAQlC,KAAM,MAAO,GAAG,EACpCU,MAACyB,EAAM,QAAQ,CAAE,GAEjBzB,MAAC0B,GAAS,MAAM,SAAS,QAAQ,cAAc,cAAe,EAC3DF,WAAQP,IACX,IACF,CACD,EACH,CACF,EAEJ","names":["UNICODE_OFFSET","svgUrl","svgUrlGetter","Lazy","value","__vitePreload","Flag","props","code","width","url","setUrl","useState","useEffect","flag","useMemo","match","getFlagGlyphName","jsx","Svg","Use","styles","StyleSheet","create","container","flexWrap","flexBasis","flexGrow","minWidth","padding","Flag_stories","title","component","Default","items","name","countries","map","cca2","StoryBlock","Box","jsxs","country","Space","LakeText"],"ignoreList":[],"sources":["../../../packages/shared-business/src/components/Flag.tsx","../../../packages/shared-business/__stories__/Flag.stories.tsx"],"sourcesContent":["import { Lazy } from \"@swan-io/boxed\";\nimport { Svg, Use } from \"@swan-io/lake/src/components/Svg\";\nimport { getFlagGlyphName } from \"@swan-io/lake/src/utils/string\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { match } from \"ts-pattern\";\nimport { CountryCCA2 } from \"../constants/countries\";\n\nconst UNICODE_OFFSET = 127462 - 65;\n\nlet svgUrl: string | undefined;\n\nconst svgUrlGetter = Lazy(async () => {\n  const { default: value } = await import(\"../assets/images/flags.svg\");\n  svgUrl = value;\n  return value;\n});\n\nexport type FlagCode = CountryCCA2 | \"EU\";\n\ntype Props = {\n  code: FlagCode;\n  width?: number;\n};\n\nexport const Flag = (props: Props) => {\n  const { code } = props;\n  const width = props.width ?? 18;\n\n  const [url, setUrl] = useState(svgUrl);\n\n  useEffect(() => {\n    if (svgUrl == null) {\n      void svgUrlGetter.get().then(setUrl);\n    }\n  }, []);\n\n  const flag = useMemo(() => {\n    return match(code)\n      .with(\"EU\", () => getFlagGlyphName(\"ðŸ‡ªðŸ‡º\"))\n      .otherwise(() => {\n        return `${(UNICODE_OFFSET + code.charCodeAt(0)).toString(16)}-${(UNICODE_OFFSET + code.charCodeAt(1)).toString(16)}`;\n      });\n  }, [code]);\n\n  return (\n    <Svg viewBox=\"0 0 18 18\" style={{ height: width, width }}>\n      {url != null && flag != null ? <Use xlinkHref={`${url}#${flag}`} /> : null}\n    </Svg>\n  );\n};\n","import { Meta } from \"@storybook/react\";\nimport { Box } from \"@swan-io/lake/src/components/Box\";\nimport { LakeText } from \"@swan-io/lake/src/components/LakeText\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport { useMemo } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Flag } from \"../src/components/Flag\";\nimport { countries } from \"../src/constants/countries\";\nimport { StoryBlock } from \"./_StoriesComponents\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexWrap: \"wrap\",\n  },\n  flag: {\n    flexBasis: \"0%\",\n    flexGrow: 1,\n    minWidth: 250,\n    padding: 16,\n  },\n});\n\nexport default {\n  title: \"Informations/Flag\",\n  component: Flag,\n} as Meta<typeof Flag>;\n\nexport const Default = () => {\n  const items = useMemo(\n    () => [\n      { name: \"European Union\", code: \"EU\" as const },\n      ...countries.map(({ cca2, name }) => ({ name, code: cca2 })),\n    ],\n    [],\n  );\n\n  return (\n    <StoryBlock title=\"Flag\">\n      <Box direction=\"row\" style={styles.container}>\n        {items.map(country => (\n          <Box alignItems=\"center\" style={styles.flag}>\n            <Flag code={country.code} width={18} />\n            <Space height={4} />\n\n            <LakeText align=\"center\" variant=\"smallMedium\" numberOfLines={1}>\n              {country.name}\n            </LakeText>\n          </Box>\n        ))}\n      </Box>\n    </StoryBlock>\n  );\n};\n"],"file":"assets/11.1.7/Flag.stories-g3wPZdcw.js"}