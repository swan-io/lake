{"version":3,"file":"Avatar.stories-Dg7Lnv30.js","sources":["../../../packages/lake/src/components/Avatar.tsx","../../../packages/lake/__stories__/Avatar.stories.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { match, P } from \"ts-pattern\";\nimport { commonStyles } from \"../constants/commonStyles\";\nimport { colors, ColorVariants } from \"../constants/design\";\nimport { identity } from \"../utils/function\";\nimport { Icon } from \"./Icon\";\nimport { LakeText } from \"./LakeText\";\n\nconst styles = StyleSheet.create({\n  text: {\n    userSelect: \"none\",\n  },\n  container: {\n    borderWidth: 1,\n  },\n});\n\ntype User = {\n  firstName?: string | null;\n  lastName?: string | null;\n  preferredLastName?: string | null;\n};\n\ntype Props =\n  | { size: number; user: User | null | undefined }\n  /**\n   * @deprecated\n   */\n  | { size: number; initials?: string };\n\nconst initialsToVariant = (initials: string): ColorVariants => {\n  const value = (initials.charCodeAt(0) + initials.charCodeAt(1)) % 3;\n\n  switch (value) {\n    case 2:\n      return \"darkPink\";\n    case 1:\n      return \"live\";\n    default:\n      return \"shakespear\";\n  }\n};\n\nexport const Avatar = memo<Props>(props => {\n  const { size } = props;\n\n  const initials = match(props)\n    .with(\n      { user: P.select(P.nonNullable) },\n      user =>\n        (user.firstName?.charAt(0) ?? \"\") +\n        ((user.preferredLastName ?? user.lastName)?.charAt(0) ?? \"\"),\n    )\n    .with({ initials: P.select(P.nonNullable) }, identity)\n    .otherwise(() => \"\");\n\n  const variant = initialsToVariant(initials);\n\n  return (\n    <View\n      role=\"img\"\n      style={[\n        commonStyles.center,\n        styles.container,\n        {\n          backgroundColor: colors[variant][100],\n          borderColor: colors[variant][200],\n          height: size,\n          width: size,\n          borderRadius: size / 2,\n        },\n      ]}\n    >\n      {initials !== \"\" ? (\n        <LakeText\n          variant=\"semibold\"\n          align=\"center\"\n          style={[styles.text, { color: colors[variant][500], fontSize: size * 0.4 }]}\n        >\n          {initials}\n        </LakeText>\n      ) : (\n        <Icon name=\"person-filled\" size={size - 8} color={colors[variant][50]} />\n      )}\n    </View>\n  );\n});\n","import { Meta } from \"@storybook/react\";\nimport dedent from \"ts-dedent\";\nimport { Avatar } from \"../src/components/Avatar\";\nimport { Box } from \"../src/components/Box\";\nimport { Space } from \"../src/components/Space\";\nimport { StoryBlock, StoryCodePart, StoryPart } from \"./_StoriesComponents\";\n\nexport default {\n  title: \"Informations/Avatar\",\n  component: Avatar,\n} as Meta<typeof Avatar>;\n\nexport const Variants = () => {\n  return (\n    <StoryBlock title=\"Avatar\">\n      <StoryPart title=\"Sizes\">\n        <Box direction=\"row\">\n          <Avatar initials=\"AA\" size={32} />\n          <Space width={16} />\n          <Avatar initials=\"AA\" size={48} />\n          <Space width={16} />\n          <Avatar initials=\"AA\" size={64} />\n        </Box>\n      </StoryPart>\n\n      <StoryPart title=\"Colors\">\n        <Box direction=\"row\">\n          <Avatar initials=\"AA\" size={32} />\n          <Space width={16} />\n          <Avatar initials=\"BA\" size={32} />\n          <Space width={16} />\n          <Avatar initials=\"CA\" size={32} />\n        </Box>\n      </StoryPart>\n\n      <StoryCodePart title=\"Code example\">\n        {dedent`\n          <Box direction=\"row\">\n            <Avatar initials=\"AA\" size={32} />\n            <Space width={16} />\n            <Avatar initials=\"BA\" size={32} />\n            <Space width={16} />\n            <Avatar initials=\"CA\" size={32} />\n          </Box>`}\n      </StoryCodePart>\n    </StoryBlock>\n  );\n};\n"],"names":["styles","StyleSheet","initialsToVariant","initials","Avatar","memo","props","size","match","P","user","_a","_b","identity","variant","jsx","View","commonStyles","colors","LakeText","Icon","Avatar_stories","title","component","Variants","jsxs","StoryBlock","StoryPart","Box","Space","StoryCodePart","dedent"],"mappings":"meASA,MAAMA,EAASC,EAAW,OAAO,CAC/B,KAAM,CACJ,WAAY,MACd,EACA,UAAW,CACT,YAAa,CACf,CACF,CAAC,EAeKC,EAAqBC,GAAoC,CAG7D,QAFeA,EAAS,WAAW,CAAC,EAAIA,EAAS,WAAW,CAAC,GAAK,EAEnD,CACb,IAAK,GACI,MAAA,WACT,IAAK,GACI,MAAA,OACT,QACS,MAAA,YACX,CACF,EAEaC,EAASC,EAAAA,KAAqBC,GAAA,CACnC,KAAA,CAAE,KAAAC,CAAS,EAAAD,EAEXH,EAAWK,EAAMF,CAAK,EACzB,KACC,CAAE,KAAMG,EAAE,OAAOA,EAAE,WAAW,CAAE,EAE7BC,GAAA,SAAA,SAAAC,EAAAD,EAAK,YAAL,YAAAC,EAAgB,OAAO,KAAM,OAC5BC,EAAAF,EAAK,mBAAqBA,EAAK,WAA/B,YAAAE,EAA0C,OAAO,KAAM,IAE5D,EAAA,KAAK,CAAE,SAAUH,EAAE,OAAOA,EAAE,WAAW,CAAA,EAAKI,CAAQ,EACpD,UAAU,IAAM,EAAE,EAEfC,EAAUZ,EAAkBC,CAAQ,EAGxC,OAAAY,EAAA,IAACC,EAAA,CACC,KAAK,MACL,MAAO,CACLC,EAAa,OACbjB,EAAO,UACP,CACE,gBAAiBkB,EAAOJ,CAAO,EAAE,GAAG,EACpC,YAAaI,EAAOJ,CAAO,EAAE,GAAG,EAChC,OAAQP,EACR,MAAOA,EACP,aAAcA,EAAO,CACvB,CACF,EAEC,aAAa,GACZQ,EAAA,IAACI,EAAA,CACC,QAAQ,WACR,MAAM,SACN,MAAO,CAACnB,EAAO,KAAM,CAAE,MAAOkB,EAAOJ,CAAO,EAAE,GAAG,EAAG,SAAUP,EAAO,GAAK,EAEzE,SAAAJ,CAAA,CAGH,EAAAY,EAAA,IAACK,EAAK,CAAA,KAAK,gBAAgB,KAAMb,EAAO,EAAG,MAAOW,EAAOJ,CAAO,EAAE,EAAE,CAAG,CAAA,CAAA,CAAA,CAI/E,CAAC,kEChFD,MAAeO,EAAA,CACbC,MAAO,sBACPC,UAAWnB,CACb,EAEaoB,EAAWA,IAEpBC,EAAA,KAACC,EAAW,CAAA,MAAM,SAChB,SAAA,CAAAX,EAAAA,IAACY,GAAU,MAAM,QACf,SAACF,EAAA,KAAAG,EAAA,CAAI,UAAU,MACb,SAAA,CAAAb,EAAA,IAACX,EAAO,CAAA,SAAS,KAAK,KAAM,GAAG,EAC/BW,EAAAA,IAACc,EAAM,CAAA,MAAO,EAAG,CAAA,EAChBd,EAAA,IAAAX,EAAA,CAAO,SAAS,KAAK,KAAM,GAAG,EAC/BW,EAAAA,IAACc,EAAM,CAAA,MAAO,EAAG,CAAA,EAChBd,EAAA,IAAAX,EAAA,CAAO,SAAS,KAAK,KAAM,GAAG,CAAA,CAAA,CACjC,CACF,CAAA,QAECuB,EAAU,CAAA,MAAM,SACf,SAACF,EAAA,KAAAG,EAAA,CAAI,UAAU,MACb,SAAA,CAAAb,EAAA,IAACX,EAAO,CAAA,SAAS,KAAK,KAAM,GAAG,EAC/BW,EAAAA,IAACc,EAAM,CAAA,MAAO,EAAG,CAAA,EAChBd,EAAA,IAAAX,EAAA,CAAO,SAAS,KAAK,KAAM,GAAG,EAC/BW,EAAAA,IAACc,EAAM,CAAA,MAAO,EAAG,CAAA,EAChBd,EAAA,IAAAX,EAAA,CAAO,SAAS,KAAK,KAAM,GAAG,CAAA,CAAA,CACjC,CACF,CAAA,EAEAW,EAAA,IAACe,EAAc,CAAA,MAAM,eAClBC,SAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,kBAQH,CACF,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}