{"version":3,"file":"index-da7d3046.js","sources":["../../../node_modules/react-native-web/dist/modules/usePressEvents/PressResponder.js","../../../node_modules/react-native-web/dist/modules/usePressEvents/index.js","../../../node_modules/react-native-web/dist/modules/createEventHandle/index.js","../../../node_modules/react-native-web/dist/modules/modality/index.js","../../../node_modules/react-native-web/dist/modules/useEvent/index.js","../../../node_modules/react-native-web/dist/modules/useHover/index.js","../../../node_modules/react-native-web/dist/exports/Pressable/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nvar DELAY = 'DELAY';\nvar ERROR = 'ERROR';\nvar LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\nvar NOT_RESPONDER = 'NOT_RESPONDER';\nvar RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\nvar RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\nvar RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\nvar RESPONDER_GRANT = 'RESPONDER_GRANT';\nvar RESPONDER_RELEASE = 'RESPONDER_RELEASE';\nvar RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: ERROR,\n    RESPONDER_TERMINATED: ERROR,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_START: {\n    DELAY: RESPONDER_ACTIVE_PRESS_START,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  ERROR: {\n    DELAY: NOT_RESPONDER,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: NOT_RESPONDER\n  }\n});\nvar isActiveSignal = signal => signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\nvar isButtonRole = element => element.getAttribute('role') === 'button';\nvar isPressStartSignal = signal => signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\nvar isTerminalSignal = signal => signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\nvar isValidKeyPress = event => {\n  var key = event.key,\n    target = event.target;\n  var role = target.getAttribute('role');\n  var isSpacebar = key === ' ' || key === 'Spacebar';\n  return key === 'Enter' || isSpacebar && role === 'button';\n};\nvar DEFAULT_LONG_PRESS_DELAY_MS = 450; // 500 - 50\nvar DEFAULT_PRESS_DELAY_MS = 50;\n\n/**\n * =========================== PressResponder Tutorial ===========================\n *\n * The `PressResponder` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press sould trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * In order to use `PressResponder`, do the following:\n *\n *     const pressResponder = new PressResponder(config);\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressResponder.getEventHandlers()} />\n *    );\n *\n * 3. Reset `PressResponder` when your component unmounts.\n *\n *    componentWillUnmount() {\n *      this.state.pressResponder.reset();\n *    }\n *\n * ==================== Implementation Details ====================\n *\n * `PressResponder` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`.\n *  │  │  ┌────────────┐  │  │\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates.\n *  │  └──────────────────┘  │\n *  │       Out Region   o   │\n *  └────────────────────│───┘\n *                       └────── When the press is released outside the `HitRect`,\n *                               the responder is NOT eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_START         ├────────▶ │ PRESS_START       ├────────────▶ │ LONG_PRESS_START  │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onLongPress`. Only when the browser produces a\n * `click` event is `onPress` invoked.\n */\nexport default class PressResponder {\n  constructor(config) {\n    this._eventHandlers = null;\n    this._isPointerTouch = false;\n    this._longPressDelayTimeout = null;\n    this._longPressDispatched = false;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._touchState = NOT_RESPONDER;\n    this.configure(config);\n  }\n  configure(config) {\n    this._config = config;\n  }\n\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n  reset() {\n    this._cancelLongPressDelayTimeout();\n    this._cancelPressDelayTimeout();\n    this._cancelPressOutDelayTimeout();\n  }\n\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n  getEventHandlers() {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n    return this._eventHandlers;\n  }\n  _createEventHandlers() {\n    var start = (event, shouldDelay) => {\n      event.persist();\n      this._cancelPressOutDelayTimeout();\n      this._longPressDispatched = false;\n      this._selectionTerminated = false;\n      this._touchState = NOT_RESPONDER;\n      this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n      this._receiveSignal(RESPONDER_GRANT, event);\n      var delayPressStart = normalizeDelay(this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n      if (shouldDelay !== false && delayPressStart > 0) {\n        this._pressDelayTimeout = setTimeout(() => {\n          this._receiveSignal(DELAY, event);\n        }, delayPressStart);\n      } else {\n        this._receiveSignal(DELAY, event);\n      }\n      var delayLongPress = normalizeDelay(this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n      this._longPressDelayTimeout = setTimeout(() => {\n        this._handleLongPress(event);\n      }, delayLongPress + delayPressStart);\n    };\n    var end = event => {\n      this._receiveSignal(RESPONDER_RELEASE, event);\n    };\n    var keyupHandler = event => {\n      var onPress = this._config.onPress;\n      var target = event.target;\n      if (this._touchState !== NOT_RESPONDER && isValidKeyPress(event)) {\n        end(event);\n        document.removeEventListener('keyup', keyupHandler);\n        var role = target.getAttribute('role');\n        var elementType = target.tagName.toLowerCase();\n        var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea';\n        if (onPress != null && !isNativeInteractiveElement) {\n          onPress(event);\n        }\n      }\n    };\n    return {\n      onStartShouldSetResponder: event => {\n        var disabled = this._config.disabled;\n        if (disabled && isButtonRole(event.currentTarget)) {\n          event.stopPropagation();\n        }\n        if (disabled == null) {\n          return true;\n        }\n        return !disabled;\n      },\n      onKeyDown: event => {\n        var disabled = this._config.disabled;\n        var key = event.key,\n          target = event.target;\n        if (!disabled && isValidKeyPress(event)) {\n          if (this._touchState === NOT_RESPONDER) {\n            start(event, false);\n            // Listen to 'keyup' on document to account for situations where\n            // focus is moved to another element during 'keydown'.\n            document.addEventListener('keyup', keyupHandler);\n          }\n          var role = target.getAttribute('role');\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n          var _isButtonRole = role === 'button' || role === 'menuitem';\n          if (isSpacebarKey && _isButtonRole) {\n            // Prevent spacebar scrolling the window\n            event.preventDefault();\n          }\n          event.stopPropagation();\n        }\n      },\n      onResponderGrant: event => start(event),\n      onResponderMove: event => {\n        if (this._config.onPressMove != null) {\n          this._config.onPressMove(event);\n        }\n        var touch = getTouchFromResponderEvent(event);\n        if (this._touchActivatePosition != null) {\n          var deltaX = this._touchActivatePosition.pageX - touch.pageX;\n          var deltaY = this._touchActivatePosition.pageY - touch.pageY;\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            this._cancelLongPressDelayTimeout();\n          }\n        }\n      },\n      onResponderRelease: event => end(event),\n      onResponderTerminate: event => {\n        if (event.nativeEvent.type === 'selectionchange') {\n          this._selectionTerminated = true;\n        }\n        this._receiveSignal(RESPONDER_TERMINATED, event);\n      },\n      onResponderTerminationRequest: event => {\n        var _this$_config = this._config,\n          cancelable = _this$_config.cancelable,\n          disabled = _this$_config.disabled,\n          onLongPress = _this$_config.onLongPress;\n        // If `onLongPress` is provided, don't terminate on `contextmenu` as default\n        // behavior will be prevented for non-mouse pointers.\n        if (!disabled && onLongPress != null && this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n          return false;\n        }\n        if (cancelable == null) {\n          return true;\n        }\n        return cancelable;\n      },\n      // NOTE: this diverges from react-native in 3 significant ways:\n      // * The `onPress` callback is not connected to the responder system (the native\n      //  `click` event must be used but is dispatched in many scenarios where no pointers\n      //   are on the screen.) Therefore, it's possible for `onPress` to be called without\n      //   `onPress{Start,End}` being called first.\n      // * The `onPress` callback is only be called on the first ancestor of the native\n      //   `click` target that is using the PressResponder.\n      // * The event's `nativeEvent` is a `MouseEvent` not a `TouchEvent`.\n      onClick: event => {\n        var _this$_config2 = this._config,\n          disabled = _this$_config2.disabled,\n          onPress = _this$_config2.onPress;\n        if (!disabled) {\n          // If long press dispatched, cancel default click behavior.\n          // If the responder terminated because text was selected during the gesture,\n          // cancel the default click behavior.\n          event.stopPropagation();\n          if (this._longPressDispatched || this._selectionTerminated) {\n            event.preventDefault();\n          } else if (onPress != null && event.altKey === false) {\n            onPress(event);\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      },\n      // If `onLongPress` is provided and a touch pointer is being used, prevent the\n      // default context menu from opening.\n      onContextMenu: event => {\n        var _this$_config3 = this._config,\n          disabled = _this$_config3.disabled,\n          onLongPress = _this$_config3.onLongPress;\n        if (!disabled) {\n          if (onLongPress != null && this._isPointerTouch && !event.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n  _receiveSignal(signal, event) {\n    var prevState = this._touchState;\n    var nextState = null;\n    if (Transitions[prevState] != null) {\n      nextState = Transitions[prevState][signal];\n    }\n    if (this._touchState === NOT_RESPONDER && signal === RESPONDER_RELEASE) {\n      return;\n    }\n    if (nextState == null || nextState === ERROR) {\n      console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n    } else if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n      this._touchState = nextState;\n    }\n  }\n\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n  _performTransitionSideEffects(prevState, nextState, signal, event) {\n    if (isTerminalSignal(signal)) {\n      // Pressable suppression of contextmenu on windows.\n      // On Windows, the contextmenu is displayed after pointerup.\n      // https://github.com/necolas/react-native-web/issues/2296\n      setTimeout(() => {\n        this._isPointerTouch = false;\n      }, 0);\n      this._touchActivatePosition = null;\n      this._cancelLongPressDelayTimeout();\n    }\n    if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n      var onLongPress = this._config.onLongPress;\n      // Long press is not supported for keyboards because 'click' can be dispatched\n      // immediately (and multiple times) after 'keydown'.\n      if (onLongPress != null && event.nativeEvent.key == null) {\n        onLongPress(event);\n        this._longPressDispatched = true;\n      }\n    }\n    var isPrevActive = isActiveSignal(prevState);\n    var isNextActive = isActiveSignal(nextState);\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n    if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n      var _this$_config4 = this._config,\n        _onLongPress = _this$_config4.onLongPress,\n        onPress = _this$_config4.onPress;\n      if (onPress != null) {\n        var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n        if (!isPressCanceledByLongPress) {\n          // If we never activated (due to delays), activate and deactivate now.\n          if (!isNextActive && !isPrevActive) {\n            this._activate(event);\n            this._deactivate(event);\n          }\n        }\n      }\n    }\n    this._cancelPressDelayTimeout();\n  }\n  _activate(event) {\n    var _this$_config5 = this._config,\n      onPressChange = _this$_config5.onPressChange,\n      onPressStart = _this$_config5.onPressStart;\n    var touch = getTouchFromResponderEvent(event);\n    this._touchActivatePosition = {\n      pageX: touch.pageX,\n      pageY: touch.pageY\n    };\n    if (onPressStart != null) {\n      onPressStart(event);\n    }\n    if (onPressChange != null) {\n      onPressChange(true);\n    }\n  }\n  _deactivate(event) {\n    var _this$_config6 = this._config,\n      onPressChange = _this$_config6.onPressChange,\n      onPressEnd = _this$_config6.onPressEnd;\n    function end() {\n      if (onPressEnd != null) {\n        onPressEnd(event);\n      }\n      if (onPressChange != null) {\n        onPressChange(false);\n      }\n    }\n    var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n    if (delayPressEnd > 0) {\n      this._pressOutDelayTimeout = setTimeout(() => {\n        end();\n      }, delayPressEnd);\n    } else {\n      end();\n    }\n  }\n  _handleLongPress(event) {\n    if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n      this._receiveSignal(LONG_PRESS_DETECTED, event);\n    }\n  }\n  _cancelLongPressDelayTimeout() {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  }\n  _cancelPressDelayTimeout() {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  }\n  _cancelPressOutDelayTimeout() {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  }\n}\nfunction normalizeDelay(delay, min, fallback) {\n  if (min === void 0) {\n    min = 0;\n  }\n  if (fallback === void 0) {\n    fallback = 0;\n  }\n  return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n}\nfunction getTouchFromResponderEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n    changedTouches = _event$nativeEvent.changedTouches,\n    touches = _event$nativeEvent.touches;\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n  return event.nativeEvent;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport PressResponder from './PressResponder';\nimport { useDebugValue, useEffect, useRef } from 'react';\nexport default function usePressEvents(hostRef, config) {\n  var pressResponderRef = useRef(null);\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new PressResponder(config);\n  }\n  var pressResponder = pressResponderRef.current;\n\n  // Re-configure to use the current node and configuration.\n  useEffect(() => {\n    pressResponder.configure(config);\n  }, [config, pressResponder]);\n\n  // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n  useEffect(() => {\n    return () => {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  useDebugValue(config);\n  return pressResponder.getEventHandlers();\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nimport canUseDOM from '../canUseDom';\nvar emptyFunction = () => {};\nfunction supportsPassiveEvents() {\n  var supported = false;\n  // Check if browser supports event with passive listeners\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n  if (canUseDOM) {\n    try {\n      var options = {};\n      Object.defineProperty(options, 'passive', {\n        get() {\n          supported = true;\n          return false;\n        }\n      });\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n  }\n  return supported;\n}\nvar canUsePassiveEvents = supportsPassiveEvents();\nfunction getOptions(options) {\n  if (options == null) {\n    return false;\n  }\n  return canUsePassiveEvents ? options : Boolean(options.capture);\n}\n\n/**\n * Shim generic API compatibility with ReactDOM's synthetic events, without needing the\n * large amount of code ReactDOM uses to do this. Ideally we wouldn't use a synthetic\n * event wrapper at all.\n */\nfunction isPropagationStopped() {\n  return this.cancelBubble;\n}\nfunction isDefaultPrevented() {\n  return this.defaultPrevented;\n}\nfunction normalizeEvent(event) {\n  event.nativeEvent = event;\n  event.persist = emptyFunction;\n  event.isDefaultPrevented = isDefaultPrevented;\n  event.isPropagationStopped = isPropagationStopped;\n  return event;\n}\n\n/**\n *\n */\nexport default function createEventHandle(type, options) {\n  var opts = getOptions(options);\n  return function (target, listener) {\n    if (target == null || typeof target.addEventListener !== 'function') {\n      throw new Error('createEventHandle: called on an invalid target.');\n    }\n    var element = target;\n    if (listener != null) {\n      var compatListener = e => listener(normalizeEvent(e));\n      element.addEventListener(type, compatListener, opts);\n      return function removeListener() {\n        if (element != null) {\n          element.removeEventListener(type, compatListener, opts);\n        }\n      };\n    } else {\n      return emptyFunction;\n    }\n  };\n}","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport createEventHandle from '../createEventHandle';\nimport canUseDOM from '../canUseDom';\nvar supportsPointerEvent = () => !!(typeof window !== 'undefined' && window.PointerEvent != null);\nvar activeModality = 'keyboard';\nvar modality = 'keyboard';\nvar previousModality;\nvar previousActiveModality;\nvar isEmulatingMouseEvents = false;\nvar listeners = new Set();\nvar KEYBOARD = 'keyboard';\nvar MOUSE = 'mouse';\nvar TOUCH = 'touch';\nvar BLUR = 'blur';\nvar CONTEXTMENU = 'contextmenu';\nvar FOCUS = 'focus';\nvar KEYDOWN = 'keydown';\nvar MOUSEDOWN = 'mousedown';\nvar MOUSEMOVE = 'mousemove';\nvar MOUSEUP = 'mouseup';\nvar POINTERDOWN = 'pointerdown';\nvar POINTERMOVE = 'pointermove';\nvar SCROLL = 'scroll';\nvar SELECTIONCHANGE = 'selectionchange';\nvar TOUCHCANCEL = 'touchcancel';\nvar TOUCHMOVE = 'touchmove';\nvar TOUCHSTART = 'touchstart';\nvar VISIBILITYCHANGE = 'visibilitychange';\nvar bubbleOptions = {\n  passive: true\n};\nvar captureOptions = {\n  capture: true,\n  passive: true\n};\n\n// Window events\nvar addBlurListener = createEventHandle(BLUR, bubbleOptions);\nvar addFocusListener = createEventHandle(FOCUS, bubbleOptions);\n// Must be capture phase because 'stopPropagation' might prevent these\n// events bubbling to the document.\nvar addVisibilityChangeListener = createEventHandle(VISIBILITYCHANGE, captureOptions);\nvar addKeyDownListener = createEventHandle(KEYDOWN, captureOptions);\nvar addPointerDownListener = createEventHandle(POINTERDOWN, captureOptions);\nvar addPointerMoveListener = createEventHandle(POINTERMOVE, captureOptions);\n// Fallback events\nvar addContextMenuListener = createEventHandle(CONTEXTMENU, captureOptions);\nvar addMouseDownListener = createEventHandle(MOUSEDOWN, captureOptions);\nvar addMouseMoveListener = createEventHandle(MOUSEMOVE, captureOptions);\nvar addMouseUpListener = createEventHandle(MOUSEUP, captureOptions);\nvar addScrollListener = createEventHandle(SCROLL, captureOptions);\nvar addSelectiomChangeListener = createEventHandle(SELECTIONCHANGE, captureOptions);\nvar addTouchCancelListener = createEventHandle(TOUCHCANCEL, captureOptions);\nvar addTouchMoveListener = createEventHandle(TOUCHMOVE, captureOptions);\nvar addTouchStartListener = createEventHandle(TOUCHSTART, captureOptions);\nfunction restoreModality() {\n  if (previousModality != null || previousActiveModality != null) {\n    if (previousModality != null) {\n      modality = previousModality;\n      previousModality = null;\n    }\n    if (previousActiveModality != null) {\n      activeModality = previousActiveModality;\n      previousActiveModality = null;\n    }\n    callListeners();\n  }\n}\nfunction onBlurWindow() {\n  previousModality = modality;\n  previousActiveModality = activeModality;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n  callListeners();\n  // for fallback events\n  isEmulatingMouseEvents = false;\n}\nfunction onFocusWindow() {\n  restoreModality();\n}\nfunction onKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n  if (modality !== KEYBOARD) {\n    modality = KEYBOARD;\n    activeModality = KEYBOARD;\n    callListeners();\n  }\n}\nfunction onVisibilityChange() {\n  if (document.visibilityState !== 'hidden') {\n    restoreModality();\n  }\n}\nfunction onPointerish(event) {\n  var eventType = event.type;\n  if (supportsPointerEvent()) {\n    if (eventType === POINTERDOWN) {\n      if (activeModality !== event.pointerType) {\n        modality = event.pointerType;\n        activeModality = event.pointerType;\n        callListeners();\n      }\n      return;\n    }\n    if (eventType === POINTERMOVE) {\n      if (modality !== event.pointerType) {\n        modality = event.pointerType;\n        callListeners();\n      }\n      return;\n    }\n  }\n  // Fallback for non-PointerEvent environment\n  else {\n    if (!isEmulatingMouseEvents) {\n      if (eventType === MOUSEDOWN) {\n        if (activeModality !== MOUSE) {\n          modality = MOUSE;\n          activeModality = MOUSE;\n          callListeners();\n        }\n      }\n      if (eventType === MOUSEMOVE) {\n        if (modality !== MOUSE) {\n          modality = MOUSE;\n          callListeners();\n        }\n      }\n    }\n\n    // Flag when browser may produce emulated events\n    if (eventType === TOUCHSTART) {\n      isEmulatingMouseEvents = true;\n      if (event.touches && event.touches.length > 1) {\n        isEmulatingMouseEvents = false;\n      }\n      if (activeModality !== TOUCH) {\n        modality = TOUCH;\n        activeModality = TOUCH;\n        callListeners();\n      }\n      return;\n    }\n\n    // Remove flag after emulated events are finished or cancelled, and if an\n    // event occurs that cuts short a touch event sequence.\n    if (eventType === CONTEXTMENU || eventType === MOUSEUP || eventType === SELECTIONCHANGE || eventType === SCROLL || eventType === TOUCHCANCEL || eventType === TOUCHMOVE) {\n      isEmulatingMouseEvents = false;\n    }\n  }\n}\nif (canUseDOM) {\n  addBlurListener(window, onBlurWindow);\n  addFocusListener(window, onFocusWindow);\n  addKeyDownListener(document, onKeyDown);\n  addPointerDownListener(document, onPointerish);\n  addPointerMoveListener(document, onPointerish);\n  addVisibilityChangeListener(document, onVisibilityChange);\n  // fallbacks\n  addContextMenuListener(document, onPointerish);\n  addMouseDownListener(document, onPointerish);\n  addMouseMoveListener(document, onPointerish);\n  addMouseUpListener(document, onPointerish);\n  addTouchCancelListener(document, onPointerish);\n  addTouchMoveListener(document, onPointerish);\n  addTouchStartListener(document, onPointerish);\n  addSelectiomChangeListener(document, onPointerish);\n  addScrollListener(document, onPointerish);\n}\nfunction callListeners() {\n  var value = {\n    activeModality,\n    modality\n  };\n  listeners.forEach(listener => {\n    listener(value);\n  });\n}\nexport function getActiveModality() {\n  return activeModality;\n}\nexport function getModality() {\n  return modality;\n}\nexport function addModalityListener(listener) {\n  listeners.add(listener);\n  return () => {\n    listeners.delete(listener);\n  };\n}\nexport function testOnly_resetActiveModality() {\n  isEmulatingMouseEvents = false;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport createEventHandle from '../createEventHandle';\nimport useLayoutEffect from '../useLayoutEffect';\nimport useStable from '../useStable';\n/**\n * This can be used with any event type include custom events.\n *\n * const click = useEvent('click', options);\n * useEffect(() => {\n *   click.setListener(target, onClick);\n *   return () => click.clear();\n * }).\n */\nexport default function useEvent(event, options) {\n  var targetListeners = useStable(() => new Map());\n  var addListener = useStable(() => {\n    var addEventListener = createEventHandle(event, options);\n    return (target, callback) => {\n      var removeTargetListener = targetListeners.get(target);\n      if (removeTargetListener != null) {\n        removeTargetListener();\n      }\n      if (callback == null) {\n        targetListeners.delete(target);\n      }\n      var removeEventListener = addEventListener(target, callback);\n      targetListeners.set(target, removeEventListener);\n      return removeEventListener;\n    };\n  });\n  useLayoutEffect(() => {\n    return () => {\n      targetListeners.forEach(removeListener => {\n        removeListener();\n      });\n      targetListeners.clear();\n    };\n  }, [targetListeners]);\n  return addListener;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { getModality } from '../modality';\nimport useEvent from '../useEvent';\nimport useLayoutEffect from '../useLayoutEffect';\n\n/**\n * Types\n */\n\n/**\n * Implementation\n */\n\nvar emptyObject = {};\nvar opts = {\n  passive: true\n};\nvar lockEventType = 'react-gui:hover:lock';\nvar unlockEventType = 'react-gui:hover:unlock';\nvar supportsPointerEvent = () => !!(typeof window !== 'undefined' && window.PointerEvent != null);\nfunction dispatchCustomEvent(target, type, payload) {\n  var event = document.createEvent('CustomEvent');\n  var _ref = payload || emptyObject,\n    _ref$bubbles = _ref.bubbles,\n    bubbles = _ref$bubbles === void 0 ? true : _ref$bubbles,\n    _ref$cancelable = _ref.cancelable,\n    cancelable = _ref$cancelable === void 0 ? true : _ref$cancelable,\n    detail = _ref.detail;\n  event.initCustomEvent(type, bubbles, cancelable, detail);\n  target.dispatchEvent(event);\n}\n\n// This accounts for the non-PointerEvent fallback events.\nfunction getPointerType(event) {\n  var pointerType = event.pointerType;\n  return pointerType != null ? pointerType : getModality();\n}\nexport default function useHover(targetRef, config) {\n  var contain = config.contain,\n    disabled = config.disabled,\n    onHoverStart = config.onHoverStart,\n    onHoverChange = config.onHoverChange,\n    onHoverUpdate = config.onHoverUpdate,\n    onHoverEnd = config.onHoverEnd;\n  var canUsePE = supportsPointerEvent();\n  var addMoveListener = useEvent(canUsePE ? 'pointermove' : 'mousemove', opts);\n  var addEnterListener = useEvent(canUsePE ? 'pointerenter' : 'mouseenter', opts);\n  var addLeaveListener = useEvent(canUsePE ? 'pointerleave' : 'mouseleave', opts);\n  // These custom events are used to implement the \"contain\" prop.\n  var addLockListener = useEvent(lockEventType, opts);\n  var addUnlockListener = useEvent(unlockEventType, opts);\n  useLayoutEffect(() => {\n    var target = targetRef.current;\n    if (target !== null) {\n      /**\n       * End the hover gesture\n       */\n      var hoverEnd = function hoverEnd(e) {\n        if (onHoverEnd != null) {\n          onHoverEnd(e);\n        }\n        if (onHoverChange != null) {\n          onHoverChange(false);\n        }\n        // Remove the listeners once finished.\n        addMoveListener(target, null);\n        addLeaveListener(target, null);\n      };\n\n      /**\n       * Leave element\n       */\n      var leaveListener = function leaveListener(e) {\n        var target = targetRef.current;\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, unlockEventType);\n          }\n          hoverEnd(e);\n        }\n      };\n\n      /**\n       * Move within element\n       */\n      var moveListener = function moveListener(e) {\n        if (getPointerType(e) !== 'touch') {\n          if (onHoverUpdate != null) {\n            // Not all browsers have these properties\n            if (e.x == null) {\n              e.x = e.clientX;\n            }\n            if (e.y == null) {\n              e.y = e.clientY;\n            }\n            onHoverUpdate(e);\n          }\n        }\n      };\n\n      /**\n       * Start the hover gesture\n       */\n      var hoverStart = function hoverStart(e) {\n        if (onHoverStart != null) {\n          onHoverStart(e);\n        }\n        if (onHoverChange != null) {\n          onHoverChange(true);\n        }\n        // Set the listeners needed for the rest of the hover gesture.\n        if (onHoverUpdate != null) {\n          addMoveListener(target, !disabled ? moveListener : null);\n        }\n        addLeaveListener(target, !disabled ? leaveListener : null);\n      };\n\n      /**\n       * Enter element\n       */\n      var enterListener = function enterListener(e) {\n        var target = targetRef.current;\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, lockEventType);\n          }\n          hoverStart(e);\n          var lockListener = function lockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverEnd(e);\n            }\n          };\n          var unlockListener = function unlockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverStart(e);\n            }\n          };\n          addLockListener(target, !disabled ? lockListener : null);\n          addUnlockListener(target, !disabled ? unlockListener : null);\n        }\n      };\n      addEnterListener(target, !disabled ? enterListener : null);\n    }\n  }, [addEnterListener, addMoveListener, addLeaveListener, addLockListener, addUnlockListener, contain, disabled, onHoverStart, onHoverChange, onHoverUpdate, onHoverEnd, targetRef]);\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"delayLongPress\", \"delayPressIn\", \"delayPressOut\", \"disabled\", \"onBlur\", \"onContextMenu\", \"onFocus\", \"onHoverIn\", \"onHoverOut\", \"onKeyDown\", \"onLongPress\", \"onPress\", \"onPressMove\", \"onPressIn\", \"onPressOut\", \"style\", \"tabIndex\", \"testOnly_hovered\", \"testOnly_pressed\"];\nimport * as React from 'react';\nimport { forwardRef, memo, useMemo, useState, useRef } from 'react';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport useHover from '../../modules/useHover';\nimport usePressEvents from '../../modules/usePressEvents';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n/**\n * Component used to build display components that should respond to whether the\n * component is currently pressed or not.\n */\nfunction Pressable(props, forwardedRef) {\n  var children = props.children,\n    delayLongPress = props.delayLongPress,\n    delayPressIn = props.delayPressIn,\n    delayPressOut = props.delayPressOut,\n    disabled = props.disabled,\n    onBlur = props.onBlur,\n    onContextMenu = props.onContextMenu,\n    onFocus = props.onFocus,\n    onHoverIn = props.onHoverIn,\n    onHoverOut = props.onHoverOut,\n    onKeyDown = props.onKeyDown,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    onPressMove = props.onPressMove,\n    onPressIn = props.onPressIn,\n    onPressOut = props.onPressOut,\n    style = props.style,\n    tabIndex = props.tabIndex,\n    testOnly_hovered = props.testOnly_hovered,\n    testOnly_pressed = props.testOnly_pressed,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useForceableState = useForceableState(testOnly_hovered === true),\n    hovered = _useForceableState[0],\n    setHovered = _useForceableState[1];\n  var _useForceableState2 = useForceableState(false),\n    focused = _useForceableState2[0],\n    setFocused = _useForceableState2[1];\n  var _useForceableState3 = useForceableState(testOnly_pressed === true),\n    pressed = _useForceableState3[0],\n    setPressed = _useForceableState3[1];\n  var hostRef = useRef(null);\n  var setRef = useMergeRefs(forwardedRef, hostRef);\n  var pressConfig = useMemo(() => ({\n    delayLongPress,\n    delayPressStart: delayPressIn,\n    delayPressEnd: delayPressOut,\n    disabled,\n    onLongPress,\n    onPress,\n    onPressChange: setPressed,\n    onPressStart: onPressIn,\n    onPressMove,\n    onPressEnd: onPressOut\n  }), [delayLongPress, delayPressIn, delayPressOut, disabled, onLongPress, onPress, onPressIn, onPressMove, onPressOut, setPressed]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var onContextMenuPress = pressEventHandlers.onContextMenu,\n    onKeyDownPress = pressEventHandlers.onKeyDown;\n  useHover(hostRef, {\n    contain: true,\n    disabled,\n    onHoverChange: setHovered,\n    onHoverStart: onHoverIn,\n    onHoverEnd: onHoverOut\n  });\n  var interactionState = {\n    hovered,\n    focused,\n    pressed\n  };\n  var blurHandler = React.useCallback(e => {\n    if (e.nativeEvent.target === hostRef.current) {\n      setFocused(false);\n      if (onBlur != null) {\n        onBlur(e);\n      }\n    }\n  }, [hostRef, setFocused, onBlur]);\n  var focusHandler = React.useCallback(e => {\n    if (e.nativeEvent.target === hostRef.current) {\n      setFocused(true);\n      if (onFocus != null) {\n        onFocus(e);\n      }\n    }\n  }, [hostRef, setFocused, onFocus]);\n  var contextMenuHandler = React.useCallback(e => {\n    if (onContextMenuPress != null) {\n      onContextMenuPress(e);\n    }\n    if (onContextMenu != null) {\n      onContextMenu(e);\n    }\n  }, [onContextMenu, onContextMenuPress]);\n  var keyDownHandler = React.useCallback(e => {\n    if (onKeyDownPress != null) {\n      onKeyDownPress(e);\n    }\n    if (onKeyDown != null) {\n      onKeyDown(e);\n    }\n  }, [onKeyDown, onKeyDownPress]);\n  var _tabIndex;\n  if (tabIndex !== undefined) {\n    _tabIndex = tabIndex;\n  } else {\n    _tabIndex = disabled ? -1 : 0;\n  }\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, pressEventHandlers, {\n    \"aria-disabled\": disabled,\n    onBlur: blurHandler,\n    onContextMenu: contextMenuHandler,\n    onFocus: focusHandler,\n    onKeyDown: keyDownHandler,\n    ref: setRef,\n    style: [disabled ? styles.disabled : styles.active, typeof style === 'function' ? style(interactionState) : style],\n    tabIndex: _tabIndex\n  }), typeof children === 'function' ? children(interactionState) : children);\n}\nfunction useForceableState(forced) {\n  var _useState = useState(false),\n    bool = _useState[0],\n    setBool = _useState[1];\n  return [bool || forced, setBool];\n}\nvar styles = StyleSheet.create({\n  active: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  },\n  disabled: {\n    pointerEvents: 'none'\n  }\n});\nvar MemoedPressable = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Pressable));\nMemoedPressable.displayName = 'Pressable';\nexport default MemoedPressable;"],"names":["DELAY","ERROR","LONG_PRESS_DETECTED","NOT_RESPONDER","RESPONDER_ACTIVE_LONG_PRESS_START","RESPONDER_ACTIVE_PRESS_START","RESPONDER_INACTIVE_PRESS_START","RESPONDER_GRANT","RESPONDER_RELEASE","RESPONDER_TERMINATED","Transitions","isActiveSignal","signal","isButtonRole","element","isPressStartSignal","isTerminalSignal","isValidKeyPress","event","key","target","role","isSpacebar","DEFAULT_LONG_PRESS_DELAY_MS","DEFAULT_PRESS_DELAY_MS","PressResponder","config","start","shouldDelay","delayPressStart","normalizeDelay","delayLongPress","end","keyupHandler","onPress","elementType","isNativeInteractiveElement","disabled","isSpacebarKey","_isButtonRole","touch","getTouchFromResponderEvent","deltaX","deltaY","_this$_config","cancelable","onLongPress","_this$_config2","_this$_config3","prevState","nextState","isPrevActive","isNextActive","_this$_config4","_onLongPress","isPressCanceledByLongPress","_this$_config5","onPressChange","onPressStart","_this$_config6","onPressEnd","delayPressEnd","delay","min","fallback","_event$nativeEvent","changedTouches","touches","usePressEvents","hostRef","pressResponderRef","useRef","pressResponder","useEffect","useDebugValue","emptyFunction","supportsPassiveEvents","supported","canUseDOM","options","canUsePassiveEvents","getOptions","isPropagationStopped","isDefaultPrevented","normalizeEvent","createEventHandle","type","opts","listener","compatListener","e","supportsPointerEvent","activeModality","modality","previousModality","previousActiveModality","isEmulatingMouseEvents","listeners","KEYBOARD","MOUSE","TOUCH","BLUR","CONTEXTMENU","FOCUS","KEYDOWN","MOUSEDOWN","MOUSEMOVE","MOUSEUP","POINTERDOWN","POINTERMOVE","SCROLL","SELECTIONCHANGE","TOUCHCANCEL","TOUCHMOVE","TOUCHSTART","VISIBILITYCHANGE","bubbleOptions","captureOptions","addBlurListener","addFocusListener","addVisibilityChangeListener","addKeyDownListener","addPointerDownListener","addPointerMoveListener","addContextMenuListener","addMouseDownListener","addMouseMoveListener","addMouseUpListener","addScrollListener","addSelectiomChangeListener","addTouchCancelListener","addTouchMoveListener","addTouchStartListener","restoreModality","callListeners","onBlurWindow","onFocusWindow","onKeyDown","onVisibilityChange","onPointerish","eventType","value","getModality","useEvent","targetListeners","useStable","addListener","addEventListener","callback","removeTargetListener","removeEventListener","useLayoutEffect","removeListener","emptyObject","lockEventType","unlockEventType","dispatchCustomEvent","payload","_ref","_ref$bubbles","bubbles","_ref$cancelable","detail","getPointerType","pointerType","useHover","targetRef","contain","onHoverStart","onHoverChange","onHoverUpdate","onHoverEnd","canUsePE","addMoveListener","addEnterListener","addLeaveListener","addLockListener","addUnlockListener","hoverEnd","leaveListener","moveListener","hoverStart","enterListener","lockListener","lockEvent","unlockListener","_excluded","Pressable","props","forwardedRef","children","delayPressIn","delayPressOut","onBlur","onContextMenu","onFocus","onHoverIn","onHoverOut","onPressMove","onPressIn","onPressOut","style","tabIndex","testOnly_hovered","testOnly_pressed","rest","_objectWithoutPropertiesLoose","_useForceableState","useForceableState","hovered","setHovered","_useForceableState2","focused","setFocused","_useForceableState3","pressed","setPressed","setRef","useMergeRefs","pressConfig","useMemo","pressEventHandlers","onContextMenuPress","onKeyDownPress","interactionState","blurHandler","React.useCallback","focusHandler","contextMenuHandler","keyDownHandler","_tabIndex","React.createElement","View","_extends","styles","forced","_useState","useState","bool","setBool","StyleSheet","MemoedPressable","memo","forwardRef","Pressable$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}