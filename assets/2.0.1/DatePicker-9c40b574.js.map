{"version":3,"file":"DatePicker-9c40b574.js","sources":["../../../node_modules/react-ux-form/dist/index.mjs","../../../node_modules/rifm/dist/rifm.esm.js","../../../packages/lake/src/hooks/useFirstMountState.ts","../../../packages/lake/src/components/DatePicker.tsx"],"sourcesContent":["import*as n from\"react\";import{useSyncExternalStore as e}from\"use-sync-external-store/shim\";function t(){return t=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},t.apply(this,arguments)}var r=\"undefined\"==typeof window?n.useEffect:n.useLayoutEffect,u=function(n){return n},i=function(){},o=function(n){return\"function\"==typeof n?n():n},c=function(n){return!!n&&(\"object\"==typeof n||\"function\"==typeof n)&&\"function\"==typeof n.then},a=function n(){var e=arguments;return function(t){var r=[].slice.call(e),u=r[0],i=r.slice(1);if(u){var o=u(t);if(c(o))return o.then(function(e){return void 0!==e?e:i.length>0?n.apply(void 0,i)(t):void 0});if(void 0!==o)return o}if(i.length>0)return n.apply(void 0,i)(t)}},f=function(n,e){return e.every(function(e){return void 0!==n[e]})},l=function(a){var f=n.useReducer(function(){return[]},[])[1],l=n.useRef(!1),s=n.useRef(a),d=n.useRef(\"untouched\");r(function(){s.current=a}),n.useEffect(function(){return l.current=!0,function(){l.current=!1}},[]);var v=n.useRef(),g=n.useRef(),y=n.useRef(),m=n.useRef(),p=n.useRef(),F=n.useRef(),h=n.useRef(),b=n.useMemo(function(){var n=function(n){return o(s.current[n].initialValue)},e=function(n){var e;return null!=(e=s.current[n].sanitize)?e:u},r=function(n){var e;return null!=(e=s.current[n].validate)?e:i},a=function(n){return y.current[n]},F=function(n,e){var u=v.current[n],i=\"function\"==typeof e?e({value:u.exposed.value,talkative:u.talkative,validity:u.validity}):e,o=i.talkative&&\"unknown\"!==i.validity.tag?{validating:\"validating\"===i.validity.tag,valid:\"valid\"===i.validity.tag,error:\"invalid\"===i.validity.tag?i.validity.error:void 0}:{validating:!1,valid:!r(n),error:void 0};v.current[n]={talkative:i.talkative,validity:i.validity,exposed:t({},o,{value:i.value})}},h=function(n){var e=p.current[n],t=void 0!==e;return t&&(clearTimeout(e),p.current[n]=void 0),t},b=function(n){g.current[n].forEach(function(n){return n()})},O=function(n,e){var r=function(n){var e;return null!=(e=s.current[n].strategy)?e:\"onSuccessOrBlur\"}(n);e&&!e.some(function(n){return r===n})||F(n,function(n){return t({},n,{talkative:!0})})},S=function(n){F(n,function(n){return t({},n,{validity:{tag:\"validating\"}})})},E=function(n,e){F(n,function(n){return t({},n,{validity:void 0!==e?{tag:\"invalid\",error:e}:{tag:\"valid\"}})})},k=function(n,r){void 0===r&&(r={});var u=v.current[n].exposed;return r.sanitize?t({},u,{value:e(n)(u.value)}):u},w=function(n){var t=h(n),u=e(n),i=r(n),o=u(v.current[n].exposed.value),a=i(o,{getFieldState:k,focusField:x});if(!c(a)){var f=a;return void 0===f&&O(n,[\"onSuccess\",\"onSuccessOrBlur\"]),E(n,f),b(n),f}return t||(S(n),b(n)),a.then(function(e){var t=function(n){var e;return null!=(e=s.current[n].equalityFn)?e:Object.is}(n),r=u(v.current[n].exposed.value);if(t(o,r))return void 0===e&&O(n,[\"onSuccess\",\"onSuccessOrBlur\"]),E(n,e),b(n),e}).catch(function(e){\"development\"===process.env.NODE_ENV&&console.error('Something went wrong during \"'+String(n)+\"\\\" validation. Don't forget to handle Promise rejection.\\n\",e)})},x=function(n){var e=m.current[n];e.current&&\"function\"==typeof e.current.focus&&e.current.focus()},N=function(e,t){void 0===t&&(t={}),h(e),F(e,function(r){return{value:t.feedbackOnly?r.value:n(e),talkative:!1,validity:{tag:\"unknown\"}}}),b(e)},R=function(n,e){var t=n[e.findIndex(function(n){return void 0!==n})];void 0!==t&&x(t)},j=function(n,e){c(n)?(f(),n.finally(function(){d.current=\"submitted\",l.current&&f()})):(d.current=\"submitted\",e&&f())};return{getFieldState:k,setFieldValue:function(n,e,r){void 0===r&&(r={}),F(n,function(n){return t({},n,{value:e})}),Boolean(r.validate)&&O(n),w(n)},setFieldError:function(n,e){E(n,e),O(n),b(n)},focusField:x,resetField:N,validateField:function(n){return a(n)?(O(n),Promise.resolve(w(n))):Promise.resolve(void 0)},listenFields:function(n,e){var t=function(){e(n.reduce(function(n,e){return n[e]=k(e),n},{}))};return n.forEach(function(n){return g.current[n].add(t)}),function(){n.forEach(function(n){return g.current[n].delete(t)})}},resetForm:function(n){void 0===n&&(n={}),Object.keys(s.current).forEach(function(e){return N(e,n)}),n.feedbackOnly||(d.current=\"untouched\"),f()},submitForm:function(n,e,t){if(void 0===e&&(e=i),void 0===t&&(t={}),\"submitting\"!==d.current){var r=\"editing\"===d.current;d.current=\"submitting\";var u=Object.keys(y.current).filter(function(n){return y.current[n]}),o={},a={},s=[],v=!t.avoidFocusOnError;if(u.forEach(function(n,e){O(n),o[n]=k(n,{sanitize:!0}).value,s[e]=w(n)}),function(n){return n.every(function(n){return!c(n)})}(s))return s.every(function(n){return void 0===n})?j(n(o),r):(v&&R(u,s),u.forEach(function(n,e){a[n]=s[e]}),j(e(a),r));f(),Promise.all(s.map(function(n){return Promise.resolve(n)})).then(function(t){var i=t;return i.every(function(n){return void 0===n})?j(n(o),r):(v&&R(u,i),u.forEach(function(n,e){a[n]=i[e]}),j(e(a),r))}).finally(function(){d.current=\"submitted\",l.current&&f()})}},setState:F,getOnChange:function(n){return function(e){var r=function(n){var e;return null!=(e=s.current[n].debounceInterval)?e:0}(n);F(n,function(n){return t({},n,{value:e})}),O(n,[\"onChange\"]),h(n),\"untouched\"!==d.current&&\"submitted\"!==d.current||(d.current=\"editing\",f()),0!==r?(S(n),b(n),p.current[n]=setTimeout(function(){a(n)?w(n):h(n)},r)):w(n)}},getOnBlur:function(n){return function(){\"unknown\"===v.current[n].validity.tag||function(n){return v.current[n].talkative}(n)||(O(n,[\"onBlur\",\"onSuccessOrBlur\"]),w(n))}},getFocusNextField:function(n){return function(){var e=Object.keys(s.current),t=e.findIndex(function(e){return e===n});if(void 0!==t){var r=e[t+1];void 0!==r&&x(r)}}}}},[]);if(!v.current){for(var O in v.current={},g.current={},y.current={},m.current={},p.current={},s.current)Object.prototype.hasOwnProperty.call(s.current,O)&&(b.setState(O,{value:o(s.current[O].initialValue),talkative:!1,validity:{tag:\"unknown\"}}),g.current[O]=new Set,y.current[O]=!1,m.current[O]={current:null},p.current[O]=void 0);var S=function(r){var u=r.name,i=r.children,o=n.useMemo(function(){return{getSnapshot:function(){return v.current[u]},subscribe:function(n){return g.current[u].add(n),function(){g.current[u].delete(n)}}}},[u]),c=o.getSnapshot;return e(o.subscribe,c,c),n.useEffect(function(){var n=!y.current[u];return n?y.current[u]=!0:\"development\"===process.env.NODE_ENV&&console.error(\"Mounting multiple fields with identical names is not supported and will lead to errors\"),function(){n&&(y.current[u]=!1)}},[u]),i(t({},b.getFieldState(u),{ref:m.current[u],focusNextField:n.useMemo(function(){return b.getFocusNextField(u)},[u]),onBlur:n.useMemo(function(){return b.getOnBlur(u)},[u]),onChange:n.useMemo(function(){return b.getOnChange(u)},[u])}))};S.displayName=\"Field\",F.current=S;var E=function(t){var r=t.names,u=t.children,i=n.useMemo(function(){return{getSnapshot:function(){return JSON.stringify(r.map(function(n){return v.current[n]}))},subscribe:function(n){return r.forEach(function(e){return g.current[e].add(n)}),function(){r.forEach(function(e){return g.current[e].delete(n)})}}}},[JSON.stringify(r)]),o=i.getSnapshot;return e(i.subscribe,o,o),u(r.reduce(function(n,e){return n[e]=b.getFieldState(e),n},{}))};E.displayName=\"FieldsListener\",h.current=E}return{formStatus:d.current,Field:F.current,FieldsListener:h.current,getFieldState:b.getFieldState,setFieldValue:b.setFieldValue,setFieldError:b.setFieldError,focusField:b.focusField,resetField:b.resetField,validateField:b.validateField,listenFields:b.listenFields,resetForm:b.resetForm,submitForm:b.submitForm}};export{a as combineValidators,f as hasDefinedKeys,l as useForm};\n//# sourceMappingURL=index.mjs.map\n","import { useReducer, useRef, useLayoutEffect, useEffect } from 'react';\n\nconst useRifm = props => {\n  const [, refresh] = useReducer(c => c + 1, 0);\n  const valueRef = useRef(null);\n  const {\n    replace,\n    append\n  } = props;\n  const userValue = replace ? replace(props.format(props.value)) : props.format(props.value); // state of delete button see comments below about inputType support\n\n  const isDeleleteButtonDownRef = useRef(false);\n\n  const onChange = evt => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (evt.target.type === 'number') {\n        console.error('Rifm does not support input type=number, use type=tel instead.');\n        return;\n      }\n\n      if (evt.target.type === 'date') {\n        console.error('Rifm does not support input type=date.');\n        return;\n      }\n    }\n\n    const eventValue = evt.target.value;\n    valueRef.current = [eventValue, // eventValue\n    evt.target, // input\n    eventValue.length > userValue.length, // isSizeIncreaseOperation\n    isDeleleteButtonDownRef.current, // isDeleleteButtonDown\n    userValue === props.format(eventValue) // isNoOperation\n    ];\n\n    if (process.env.NODE_ENV !== 'production') {\n      const formattedEventValue = props.format(eventValue);\n\n      if (eventValue !== formattedEventValue && eventValue.toLowerCase() === formattedEventValue.toLowerCase()) {\n        console.warn('Case enforcement does not work with format. Please use replace={value => value.toLowerCase()} instead');\n      }\n    } // The main trick is to update underlying input with non formatted value (= eventValue)\n    // that allows us to calculate right cursor position after formatting (see getCursorPosition)\n    // then we format new value and call props.onChange with masked/formatted value\n    // and finally we are able to set cursor position into right place\n\n\n    refresh();\n  }; // React prints warn on server in non production mode about useLayoutEffect usage\n  // in both cases it's noop\n\n\n  if (process.env.NODE_ENV === 'production' || typeof window !== 'undefined') {\n    useLayoutEffect(() => {\n      if (valueRef.current == null) return;\n      let [eventValue, input, isSizeIncreaseOperation, isDeleleteButtonDown, // No operation means that value itself hasn't been changed, BTW cursor, selection etc can be changed\n      isNoOperation] = valueRef.current;\n      valueRef.current = null; // this usually occurs on deleting special symbols like ' here 123'123.00\n      // in case of isDeleleteButtonDown cursor should move differently vs backspace\n\n      const deleteWasNoOp = isDeleleteButtonDown && isNoOperation;\n      const valueAfterSelectionStart = eventValue.slice(input.selectionStart);\n      const acceptedCharIndexAfterDelete = valueAfterSelectionStart.search(props.accept || /\\d/g);\n      const charsToSkipAfterDelete = acceptedCharIndexAfterDelete !== -1 ? acceptedCharIndexAfterDelete : 0; // Create string from only accepted symbols\n\n      const clean = str => (str.match(props.accept || /\\d/g) || []).join('');\n\n      const valueBeforeSelectionStart = clean(eventValue.substr(0, input.selectionStart)); // trying to find cursor position in formatted value having knowledge about valueBeforeSelectionStart\n      // This works because we assume that format doesn't change the order of accepted symbols.\n      // Imagine we have formatter which adds ' symbol between numbers, and by default we refuse all non numeric symbols\n      // for example we had input = 1'2|'4 (| means cursor position) then user entered '3' symbol\n      // inputValue = 1'23'|4 so valueBeforeSelectionStart = 123 and formatted value = 1'2'3'4\n      // calling getCursorPosition(\"1'2'3'4\") will give us position after 3, 1'2'3|'4\n      // so for formatting just this function to determine cursor position after formatting is enough\n      // with masking we need to do some additional checks see `mask` below\n\n      const getCursorPosition = val => {\n        let start = 0;\n        let cleanPos = 0;\n\n        for (let i = 0; i !== valueBeforeSelectionStart.length; ++i) {\n          let newPos = val.indexOf(valueBeforeSelectionStart[i], start) + 1;\n          let newCleanPos = clean(val).indexOf(valueBeforeSelectionStart[i], cleanPos) + 1; // this skips position change if accepted symbols order was broken\n          // For example fixes edge case with fixed point numbers:\n          // You have '0|.00', then press 1, it becomes 01|.00 and after format 1.00, this breaks our assumption\n          // that order of accepted symbols is not changed after format,\n          // so here we don't update start position if other accepted symbols was inbetween current and new position\n\n          if (newCleanPos - cleanPos > 1) {\n            newPos = start;\n            newCleanPos = cleanPos;\n          }\n\n          cleanPos = Math.max(newCleanPos, cleanPos);\n          start = Math.max(start, newPos);\n        }\n\n        return start;\n      }; // Masking part, for masks if size of mask is above some value\n      // we need to replace symbols instead of do nothing as like in format\n\n\n      if (props.mask === true && isSizeIncreaseOperation && !isNoOperation) {\n        let start = getCursorPosition(eventValue);\n        const c = clean(eventValue.substr(start))[0];\n        start = eventValue.indexOf(c, start);\n        eventValue = `${eventValue.substr(0, start)}${eventValue.substr(start + 1)}`;\n      }\n\n      let formattedValue = props.format(eventValue);\n\n      if (append != null && // cursor at the end\n      input.selectionStart === eventValue.length && !isNoOperation) {\n        if (isSizeIncreaseOperation) {\n          formattedValue = append(formattedValue);\n        } else {\n          // If after delete last char is special character and we use append\n          // delete it too\n          // was: \"12-3|\" backspace pressed, then should be \"12|\"\n          if (clean(formattedValue.slice(-1)) === '') {\n            formattedValue = formattedValue.slice(0, -1);\n          }\n        }\n      }\n\n      const replacedValue = replace ? replace(formattedValue) : formattedValue;\n\n      if (userValue === replacedValue) {\n        // if nothing changed for formatted value, just refresh so userValue will be used at render\n        refresh();\n      } else {\n        props.onChange(replacedValue);\n      }\n\n      return () => {\n        let start = getCursorPosition(formattedValue); // Visually improves working with masked values,\n        // like cursor jumping over refused symbols\n        // as an example date mask: was \"5|1-24-3\" then user pressed \"6\"\n        // it becomes \"56-|12-43\" with this code, and \"56|-12-43\" without\n\n        if (props.mask != null && (isSizeIncreaseOperation || isDeleleteButtonDown && !deleteWasNoOp)) {\n          while (formattedValue[start] && clean(formattedValue[start]) === '') {\n            start += 1;\n          }\n        }\n\n        input.selectionStart = input.selectionEnd = start + (deleteWasNoOp ? 1 + charsToSkipAfterDelete : 0);\n      };\n    });\n  }\n\n  useEffect(() => {\n    // until https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/inputType will be supported\n    // by all major browsers (now supported by: +chrome, +safari, ?edge, !firefox)\n    // there is no way I found to distinguish in onChange\n    // backspace or delete was called in some situations\n    // firefox track https://bugzilla.mozilla.org/show_bug.cgi?id=1447239\n    const handleKeyDown = evt => {\n      if (evt.code === 'Delete') {\n        isDeleleteButtonDownRef.current = true;\n      }\n    };\n\n    const handleKeyUp = evt => {\n      if (evt.code === 'Delete') {\n        isDeleleteButtonDownRef.current = false;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n  return {\n    value: valueRef.current != null ? valueRef.current[0] : userValue,\n    onChange\n  };\n};\nconst Rifm = props => {\n  const renderProps = useRifm(props);\n  return props.children(renderProps);\n};\n\nexport { Rifm, useRifm };\n","import { useRef } from \"react\";\n\nexport const useFirstMountState = (): boolean => {\n  const isFirstMount = useRef(true);\n\n  if (isFirstMount.current) {\n    isFirstMount.current = false;\n    return true;\n  }\n\n  return isFirstMount.current;\n};\n","import { Option } from \"@swan-io/boxed\";\nimport dayjs from \"dayjs\";\nimport { ReactNode, useCallback, useEffect, useId, useMemo, useRef, useState } from \"react\";\nimport { StyleSheet, TextInput, View } from \"react-native\";\nimport { ValidatorResult, useForm } from \"react-ux-form\";\nimport { Rifm } from \"rifm\";\nimport { P, match } from \"ts-pattern\";\nimport { Except } from \"type-fest\";\nimport { colors, spacings } from \"../constants/design\";\nimport { useDisclosure } from \"../hooks/useDisclosure\";\nimport { useFirstMountState } from \"../hooks/useFirstMountState\";\nimport { useResponsive } from \"../hooks/useResponsive\";\nimport { noop } from \"../utils/function\";\nimport { isNotNullish, isNotNullishOrEmpty, isNullishOrEmpty } from \"../utils/nullish\";\nimport { getRifmProps } from \"../utils/rifm\";\nimport { BottomPanel } from \"./BottomPanel\";\nimport { Box } from \"./Box\";\nimport { Fill } from \"./Fill\";\nimport { Icon } from \"./Icon\";\nimport { LakeButton } from \"./LakeButton\";\nimport { LakeLabel } from \"./LakeLabel\";\nimport { LakeModal } from \"./LakeModal\";\nimport { Item, LakeSelect } from \"./LakeSelect\";\nimport { LakeText } from \"./LakeText\";\nimport { LakeTextInput } from \"./LakeTextInput\";\nimport { Popover } from \"./Popover\";\nimport { Pressable } from \"./Pressable\";\nimport { Separator } from \"./Separator\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  label: {\n    flex: 1,\n  },\n  arrowContainer: {\n    height: 40, // input height\n  },\n  popover: {\n    padding: spacings[12],\n  },\n  popoverDesktop: {\n    padding: spacings[24],\n  },\n  rangeCalendarSide: {\n    flex: 1,\n  },\n  button: {\n    flex: 1,\n  },\n  monthSelect: {\n    width: 130,\n  },\n  yearSelect: {\n    width: 100,\n  },\n  weekRow: {\n    paddingVertical: spacings[4],\n  },\n  dayName: {\n    flex: 1,\n    height: 32,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  dayContainer: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  dayRangeIndicator: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    backgroundColor: colors.current[100],\n  },\n  dayStartRangeIndicator: {\n    left: \"50%\",\n  },\n  dayEndRangeIndicator: {\n    right: \"50%\",\n  },\n  dayNumber: {\n    width: 32,\n    height: 32,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 16,\n  },\n  dayNumberFocused: {},\n  dayNumberHover: {\n    backgroundColor: colors.current[100],\n  },\n  dayNumberPressed: {},\n  dayNumberSelected: {\n    backgroundColor: colors.current[500],\n  },\n  todayIndicator: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    width: 4,\n    height: 4,\n    marginHorizontal: \"auto\",\n    borderRadius: 2,\n    backgroundColor: colors.current[500],\n  },\n});\n\nconst MODALE_MOBILE_THRESHOLD = 600;\nconst DATE_PICKER_MOBILE_THRESHOLD = 400;\nconst DATE_RANGE_PICKER_THRESHOLD = 800;\n\nconst NB_DAYS_IN_WEEK = 7;\n\nexport type MonthNames = readonly [\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n];\nexport type WeekDayNames = readonly [string, string, string, string, string, string, string];\n\ntype YearMonth = {\n  year: number;\n  month: number;\n};\n\nconst weekDayIndex = {\n  sunday: 0,\n  monday: 1,\n  tuesday: 2,\n  wednesday: 3,\n  thursday: 4,\n  friday: 5,\n  saturday: 6,\n};\n\nexport type DatePickerDate = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nexport type DatePickerRange = {\n  start: Option<DatePickerDate>;\n  end: Option<DatePickerDate>;\n};\n\nexport type DateFormat = \"DD/MM/YYYY\" | \"MM/DD/YYYY\";\n\nconst rifmDateProps = getRifmProps({\n  accept: \"numeric\",\n  charMap: { 2: \"/\", 4: \"/\" },\n  maxLength: 8,\n});\n\nconst parseDate = (value: string, format: DateFormat): Option<DatePickerDate> => {\n  const date = dayjs.utc(value, format);\n  return date.isValid()\n    ? Option.Some({ day: date.date(), month: date.month(), year: date.year() })\n    : Option.None();\n};\n\nconst parseRange = (value: { start: string; end: string }, format: DateFormat): DatePickerRange => {\n  return {\n    start: parseDate(value.start, format),\n    end: parseDate(value.end, format),\n  };\n};\n\nconst stringifyDate = (value: DatePickerDate, format: DateFormat): string => {\n  const date = dayjs.utc().year(value.year).month(value.month).date(value.day);\n  return date.format(format);\n};\n\nexport const validateDateRangeOrder = (\n  value: { start: string; end: string },\n  format: DateFormat,\n) => {\n  const range = parseRange(value, format);\n\n  if (range.start.isNone() || range.end.isNone()) {\n    return true;\n  }\n\n  if (isDateAfter(range.start.value, range.end.value)) {\n    return false;\n  }\n\n  return true;\n};\n\nconst range = (start: number, end: number): number[] => {\n  const result = [];\n  for (let i = start; i <= end; i++) {\n    result.push(i);\n  }\n  return result;\n};\n\nconst groupEvery = <T,>(input: T[], groupSize: number): T[][] => {\n  const result = [];\n  const nbGroups = Math.ceil(input.length / groupSize);\n  for (let i = 0; i < nbGroups; i++) {\n    result.push(input.slice(i * groupSize, (i + 1) * groupSize));\n  }\n\n  return result;\n};\n\nconst padEnd = <T,>(input: T[], length: number, value: T): T[] => {\n  const itemsToAppend = new Array(length - input.length).fill(value) as T[];\n  return [...input, ...itemsToAppend];\n};\n\nexport const isTodayOrFutureDate = (date: DatePickerDate): boolean => {\n  const yesterday = new Date();\n  yesterday.setDate(yesterday.getDate() - 1);\n\n  const yesterdayDate: DatePickerDate = {\n    day: yesterday.getDate(),\n    month: yesterday.getMonth(),\n    year: yesterday.getFullYear(),\n  };\n\n  return isDateAfter(date, yesterdayDate);\n};\n\nexport const isDateInRange =\n  (minDate: Date, maxDate: Date) =>\n  (date: DatePickerDate): boolean => {\n    const min: DatePickerDate = {\n      day: minDate.getDate(),\n      month: minDate.getMonth(),\n      year: minDate.getFullYear(),\n    };\n    const max: DatePickerDate = {\n      day: maxDate.getDate(),\n      month: maxDate.getMonth(),\n      year: maxDate.getFullYear(),\n    };\n\n    return isDateAfter(date, min) && isDateBefore(date, max);\n  };\n\nconst isDateToday = (date: DatePickerDate): boolean => {\n  const today = new Date();\n  return (\n    date.day === today.getDate() &&\n    date.month === today.getMonth() &&\n    date.year === today.getFullYear()\n  );\n};\n\nconst getMonthDates = (month: number, year: number): DatePickerDate[] => {\n  const aggregate = (acc: DatePickerDate[], date: Date): DatePickerDate[] => {\n    const dateDay = date.getDate();\n    const dateMonth = date.getMonth();\n    const dateYear = date.getFullYear();\n\n    if (date.getMonth() !== month) {\n      return acc;\n    }\n\n    return aggregate(\n      [...acc, { day: dateDay, month: dateMonth, year: dateYear }],\n      new Date(year, month, dateDay + 1),\n    );\n  };\n\n  return aggregate([], new Date(year, month, 1));\n};\n\nconst getMonthWeeks = (\n  month: number,\n  year: number,\n  firstWeekDay: keyof typeof weekDayIndex,\n): Option<DatePickerDate>[][] => {\n  const firstWeekDayIndex = weekDayIndex[firstWeekDay];\n  const monthFirstWeekDay = new Date(year, month, 1).getDay();\n  const monthDates = getMonthDates(month, year).map(date => Option.Some(date));\n\n  const nbDaysToPrepend =\n    monthFirstWeekDay >= firstWeekDayIndex\n      ? monthFirstWeekDay - firstWeekDayIndex\n      : NB_DAYS_IN_WEEK - firstWeekDayIndex + monthFirstWeekDay;\n\n  for (let i = 0; i < nbDaysToPrepend; i++) {\n    monthDates.unshift(Option.None());\n  }\n  const weeks = groupEvery(monthDates, NB_DAYS_IN_WEEK);\n  const lastWeek = weeks[weeks.length - 1];\n\n  if (!lastWeek) {\n    return weeks;\n  }\n  weeks[weeks.length - 1] = padEnd(lastWeek, NB_DAYS_IN_WEEK, Option.None());\n\n  return weeks;\n};\n\nconst getWeekDayNames = (\n  dayNames: WeekDayNames,\n  firstWeekDay: keyof typeof weekDayIndex = \"sunday\",\n): WeekDayNames => {\n  const firstWeekDayIndex = weekDayIndex[firstWeekDay];\n  const firstWeekDayNames = dayNames.slice(firstWeekDayIndex);\n  const lastWeekDayNames = dayNames.slice(0, firstWeekDayIndex);\n\n  // @ts-expect-error\n  return [...firstWeekDayNames, ...lastWeekDayNames];\n};\n\nconst isDateEquals = (date1: DatePickerDate, date2: DatePickerDate): boolean => {\n  return date1.day === date2.day && date1.month === date2.month && date1.year === date2.year;\n};\n\nconst isDateBefore = (date1: DatePickerDate, date2: DatePickerDate): boolean => {\n  return (\n    date1.year < date2.year ||\n    (date1.year === date2.year && date1.month < date2.month) ||\n    (date1.year === date2.year && date1.month === date2.month && date1.day < date2.day)\n  );\n};\n\nconst isDateAfter = (date1: DatePickerDate, date2: DatePickerDate): boolean => {\n  return (\n    date1.year > date2.year ||\n    (date1.year === date2.year && date1.month > date2.month) ||\n    (date1.year === date2.year && date1.month === date2.month && date1.day > date2.day)\n  );\n};\n\nconst isDateRange = (value: Option<DatePickerDate> | DatePickerRange): value is DatePickerRange => {\n  return match(value)\n    .with({ start: P._, end: P._ }, () => true)\n    .otherwise(() => false);\n};\n\nconst isSelectedDate = (date: DatePickerDate, value: Option<DatePickerDate> | DatePickerRange) => {\n  return match(value)\n    .with(Option.pattern.Some(P.select()), value => isDateEquals(value, date))\n    .with(Option.pattern.None, () => false)\n    .with(P.when(isDateRange), ({ start, end }) => {\n      // if range is invalid, we don't display any selection\n      if (start.isSome() && end.isSome() && isDateAfter(start.value, end.value)) {\n        return false;\n      }\n\n      return (\n        start.match({\n          Some: start => isDateEquals(start, date),\n          None: () => false,\n        }) ||\n        end.match({\n          Some: end => isDateEquals(end, date),\n          None: () => false,\n        })\n      );\n    })\n    .exhaustive();\n};\n\nconst getRangeIndicatorType = (\n  date: DatePickerDate,\n  value: Option<DatePickerDate> | DatePickerRange,\n): \"none\" | \"start\" | \"end\" | \"between\" => {\n  if (!isDateRange(value)) {\n    return \"none\";\n  }\n\n  const { start, end } = value;\n  if (start.isNone() || end.isNone()) {\n    return \"none\";\n  }\n\n  const startDate = start.value;\n  const endDate = end.value;\n\n  // no interval indicator if range is invalid\n  if (isDateAfter(startDate, endDate)) {\n    return \"none\";\n  }\n  if (isDateEquals(startDate, endDate)) {\n    return \"none\";\n  }\n  if (isDateEquals(date, startDate)) {\n    return \"start\";\n  }\n  if (isDateEquals(date, endDate)) {\n    return \"end\";\n  }\n  if (isDateAfter(date, startDate) && isDateBefore(date, endDate)) {\n    return \"between\";\n  }\n  return \"none\";\n};\n\nconst computeDateDistanceInDays = (date1: DatePickerDate, date2: DatePickerDate): number => {\n  const date1Date = new Date(date1.year, date1.month, date1.day);\n  const date2Date = new Date(date2.year, date2.month, date2.day);\n\n  const diffInMs = Math.abs(date2Date.getTime() - date1Date.getTime());\n  return Math.round(diffInMs / (1000 * 3600 * 24));\n};\n\nconst getNewDateRange = (\n  currentRange: DatePickerRange,\n  selectedDate: DatePickerDate,\n): DatePickerRange => {\n  const { start, end } = currentRange;\n\n  // Handle initial selection\n  if (start.isNone()) {\n    return { start: Option.Some(selectedDate), end: Option.None() };\n  }\n  if (end.isNone()) {\n    if (isDateAfter(selectedDate, start.value)) {\n      return { start, end: Option.Some(selectedDate) };\n    }\n\n    return { start: Option.Some(selectedDate), end: currentRange.start };\n  }\n\n  // Handle selection outside of the current range\n  if (isDateBefore(selectedDate, start.value)) {\n    return { start: Option.Some(selectedDate), end: currentRange.end };\n  }\n  if (isDateAfter(selectedDate, end.value)) {\n    return { start: currentRange.start, end: Option.Some(selectedDate) };\n  }\n\n  // We change the closest date to the new date\n  const startDistance = computeDateDistanceInDays(start.value, selectedDate);\n  const endDistance = computeDateDistanceInDays(end.value, selectedDate);\n\n  if (startDistance < endDistance) {\n    return { start: Option.Some(selectedDate), end: currentRange.end };\n  }\n  return { start: currentRange.start, end: Option.Some(selectedDate) };\n};\n\nconst getTodayYearMonth = (): YearMonth => ({\n  month: new Date().getMonth(),\n  year: new Date().getFullYear(),\n});\n\nconst getYearMonth = (value: string | undefined, format: DateFormat): Option<YearMonth> => {\n  if (isNullishOrEmpty(value)) {\n    return Option.None();\n  }\n  return parseDate(value, format);\n};\n\nconst isYearMonthBefore = (date1: YearMonth, date2: YearMonth): boolean => {\n  return date1.year < date2.year || (date1.year === date2.year && date1.month < date2.month);\n};\n\nconst isYearMonthEquals = (date1: YearMonth, date2: YearMonth): boolean => {\n  return date1.year === date2.year && date1.month === date2.month;\n};\n\nconst minYearMonth = (date1: YearMonth, date2: YearMonth): YearMonth => {\n  return isYearMonthBefore(date1, date2) ? date1 : date2;\n};\n\nconst maxYearMonth = (date1: YearMonth, date2: YearMonth): YearMonth => {\n  return isYearMonthBefore(date1, date2) ? date2 : date1;\n};\n\nconst incrementYearMonth = ({ month, year }: YearMonth): YearMonth => {\n  if (month === 11) {\n    return { month: 0, year: year + 1 };\n  }\n  return { month: month + 1, year };\n};\n\nconst decrementYearMonth = ({ month, year }: YearMonth): YearMonth => {\n  if (month === 0) {\n    return { month: 11, year: year - 1 };\n  }\n  return { month: month - 1, year };\n};\n\ntype YearMonthSelectProps = {\n  monthNames: MonthNames;\n  value: YearMonth;\n  arrowsPosition?: \"around\" | \"right\";\n  hideArrows?: boolean;\n  minValue?: YearMonth;\n  maxValue?: YearMonth;\n  onChange: (value: YearMonth) => void;\n};\n\nconst YearMonthSelect = ({\n  monthNames,\n  value,\n  arrowsPosition = \"right\",\n  hideArrows,\n  minValue,\n  maxValue,\n  onChange,\n}: YearMonthSelectProps) => {\n  const monthItems = useMemo<Item<number>[]>(\n    () => monthNames.map((name, index) => ({ name, value: index })),\n    [monthNames],\n  );\n\n  const yearItems = useMemo<Item<number>[]>(\n    () =>\n      range(value.year - 5, value.year + 5).map(year => ({\n        name: year.toString(),\n        value: year,\n      })),\n    [value.year],\n  );\n\n  const selectMonth = (month: number) => {\n    onChange({ year: value.year, month });\n  };\n\n  const selectYear = (year: number) => {\n    onChange({ year, month: value.month });\n  };\n\n  const setPreviousMonth = () => {\n    onChange(decrementYearMonth(value));\n  };\n\n  const setNextMonth = () => {\n    onChange(incrementYearMonth(value));\n  };\n\n  const isPreviousDisabled = !minValue\n    ? false\n    : value.year <= minValue.year && value.month <= minValue.month;\n  const isNextDisabled = !maxValue\n    ? false\n    : value.year >= maxValue.year && value.month >= maxValue.month;\n\n  return (\n    <Box direction=\"row\" alignItems=\"center\">\n      {arrowsPosition === \"around\" && hideArrows !== true && (\n        <>\n          <LakeButton\n            size=\"small\"\n            mode=\"tertiary\"\n            icon=\"arrow-left-filled\"\n            disabled={isPreviousDisabled}\n            onPress={setPreviousMonth}\n          />\n\n          <Fill minWidth={12} />\n        </>\n      )}\n\n      <LakeSelect\n        items={monthItems}\n        value={value.month}\n        onValueChange={selectMonth}\n        mode=\"borderless\"\n        size=\"small\"\n        hideErrors={true}\n        style={styles.monthSelect}\n      />\n\n      <LakeSelect\n        items={yearItems}\n        value={value.year}\n        onValueChange={selectYear}\n        mode=\"borderless\"\n        size=\"small\"\n        hideErrors={true}\n        style={styles.yearSelect}\n      />\n\n      {hideArrows !== true && (\n        <>\n          <Fill minWidth={12} />\n\n          {arrowsPosition === \"right\" && (\n            <>\n              <LakeButton\n                size=\"small\"\n                mode=\"tertiary\"\n                icon=\"arrow-left-filled\"\n                disabled={isPreviousDisabled}\n                onPress={setPreviousMonth}\n              />\n\n              <Space width={12} />\n            </>\n          )}\n\n          <LakeButton\n            size=\"small\"\n            mode=\"tertiary\"\n            icon=\"arrow-right-filled\"\n            disabled={isNextDisabled}\n            onPress={setNextMonth}\n          />\n        </>\n      )}\n    </Box>\n  );\n};\n\ntype MonthCalendarProps = {\n  month: number;\n  year: number;\n  value: Option<DatePickerDate> | DatePickerRange;\n  firstWeekDay: keyof typeof weekDayIndex;\n  weekDayNames: WeekDayNames;\n  isSelectable?: (date: DatePickerDate) => boolean;\n  onChange: (date: DatePickerDate) => void;\n};\n\nconst MonthCalendar = ({\n  month,\n  year,\n  value,\n  firstWeekDay,\n  weekDayNames,\n  isSelectable,\n  onChange,\n}: MonthCalendarProps) => {\n  const dayNames = useMemo(\n    () => getWeekDayNames(weekDayNames, firstWeekDay),\n    [weekDayNames, firstWeekDay],\n  );\n  const weeks = useMemo(\n    () => getMonthWeeks(month, year, firstWeekDay),\n    [month, year, firstWeekDay],\n  );\n\n  return (\n    <View>\n      <Box direction=\"row\" alignItems=\"center\" style={styles.weekRow}>\n        {dayNames.map(dayName => (\n          <View key={dayName} style={styles.dayName}>\n            <LakeText variant=\"medium\" color={colors.gray[600]}>\n              {dayName.substring(0, 1)}\n            </LakeText>\n          </View>\n        ))}\n      </Box>\n\n      {weeks.map((week, weekIndex) => (\n        <Box key={weekIndex} direction=\"row\" alignItems=\"center\" style={styles.weekRow}>\n          {week.map((date, dateIndex) => {\n            const isDisabled = date.match({\n              Some: date => isNotNullish(isSelectable) && !isSelectable(date),\n              None: () => true,\n            });\n            const isSelected = date.match({\n              Some: date => isSelectedDate(date, value),\n              None: () => false,\n            });\n            const isToday = date.match({\n              Some: date => isDateToday(date),\n              None: () => false,\n            });\n            const rangeIndicator = date.match({\n              Some: date => getRangeIndicatorType(date, value),\n              None: () => \"none\" as const,\n            });\n\n            return (\n              <View key={dateIndex} style={styles.dayContainer}>\n                {rangeIndicator !== \"none\" && (\n                  <View\n                    style={[\n                      styles.dayRangeIndicator,\n                      rangeIndicator === \"start\" && styles.dayStartRangeIndicator,\n                      rangeIndicator === \"end\" && styles.dayEndRangeIndicator,\n                    ]}\n                  />\n                )}\n\n                <Pressable\n                  disabled={isDisabled}\n                  onPress={() => date.match({ Some: onChange, None: noop })}\n                  style={({ focused, hovered, pressed }) => [\n                    styles.dayNumber,\n                    focused && styles.dayNumberFocused,\n                    hovered && styles.dayNumberHover,\n                    pressed && styles.dayNumberPressed,\n                    isSelected && styles.dayNumberSelected,\n                  ]}\n                >\n                  <LakeText\n                    variant=\"smallRegular\"\n                    color={\n                      isSelected\n                        ? colors.current.contrast\n                        : isDisabled\n                        ? colors.gray[300]\n                        : isToday\n                        ? colors.current[500]\n                        : colors.gray[900]\n                    }\n                  >\n                    {date.match({ Some: ({ day }) => day.toString(), None: () => \" \" })}\n                  </LakeText>\n\n                  {isToday && <View style={styles.todayIndicator} />}\n                </Pressable>\n              </View>\n            );\n          })}\n        </Box>\n      ))}\n    </View>\n  );\n};\n\nexport type DatePickerProps = {\n  label: string;\n  value?: string;\n  error?: string;\n  format: DateFormat;\n  firstWeekDay: keyof typeof weekDayIndex;\n  monthNames: MonthNames;\n  weekDayNames: WeekDayNames;\n  isSelectable?: (date: DatePickerDate) => boolean;\n  onChange: (date: string) => void;\n};\n\ntype DatePickerPopoverContentProps = Except<DatePickerProps, \"label\" | \"error\"> & {\n  desktop: boolean;\n};\n\nconst DatePickerPopoverContent = ({\n  value,\n  format,\n  firstWeekDay,\n  monthNames,\n  weekDayNames,\n  desktop,\n  isSelectable,\n  onChange,\n}: DatePickerPopoverContentProps) => {\n  const [monthYear, setMonthYear] = useState(() =>\n    getYearMonth(value, format).getWithDefault(getTodayYearMonth()),\n  );\n\n  // Automatically change displayed year and month when user change the value with text input\n  useEffect(() => {\n    const yearMonth = getYearMonth(value, format);\n    if (yearMonth.isSome()) {\n      setMonthYear(yearMonth.value);\n    }\n  }, [value, format]);\n\n  const handleChange = useCallback(\n    (date: DatePickerDate) => {\n      const formatted = stringifyDate(date, format);\n      onChange(formatted);\n    },\n    [format, onChange],\n  );\n\n  return (\n    <>\n      <YearMonthSelect\n        monthNames={monthNames}\n        value={monthYear}\n        hideArrows={!desktop}\n        onChange={setMonthYear}\n      />\n\n      <Space height={24} />\n\n      <MonthCalendar\n        month={monthYear.month}\n        year={monthYear.year}\n        value={isNotNullishOrEmpty(value) ? parseDate(value, format) : Option.None()}\n        firstWeekDay={firstWeekDay}\n        weekDayNames={weekDayNames}\n        isSelectable={isSelectable}\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport const DatePicker = ({\n  label,\n  value,\n  error,\n  format,\n  firstWeekDay,\n  monthNames,\n  weekDayNames,\n  isSelectable,\n  onChange,\n}: DatePickerProps) => {\n  const { desktop } = useResponsive(DATE_PICKER_MOBILE_THRESHOLD);\n  const ref = useRef<TextInput>(null);\n  const [isOpened, { open, close }] = useDisclosure(false);\n  const popoverId = useId();\n\n  return (\n    <>\n      <Box direction=\"row\" alignItems=\"end\">\n        <LakeLabel\n          label={label}\n          style={styles.label}\n          actions={\n            <LakeButton mode=\"secondary\" icon=\"calendar-ltr-regular\" size=\"small\" onPress={open} />\n          }\n          render={id => (\n            <Rifm value={value ?? \"\"} onChange={onChange} {...rifmDateProps}>\n              {({ value, onChange }) => (\n                <LakeTextInput\n                  ref={ref}\n                  id={id}\n                  placeholder={format}\n                  value={value}\n                  error={error}\n                  onChange={onChange}\n                  ariaExpanded={isOpened}\n                />\n              )}\n            </Rifm>\n          )}\n        />\n      </Box>\n\n      <Popover id={popoverId} role=\"dialog\" onDismiss={close} referenceRef={ref} visible={isOpened}>\n        <View style={desktop ? styles.popoverDesktop : styles.popover}>\n          <DatePickerPopoverContent\n            value={value}\n            format={format}\n            firstWeekDay={firstWeekDay}\n            monthNames={monthNames}\n            weekDayNames={weekDayNames}\n            desktop={desktop}\n            isSelectable={isSelectable}\n            onChange={onChange}\n          />\n        </View>\n      </Popover>\n    </>\n  );\n};\n\ntype DatePickerPopoverProps = Except<DatePickerProps, \"error\"> & {\n  id?: string;\n  visible: boolean;\n  referenceRef: React.RefObject<unknown>;\n  cancelLabel: string;\n  confirmLabel: string;\n  validate?: (value: string) => ValidatorResult;\n  onDissmiss: () => void;\n};\n\nexport const DatePickerPopover = ({\n  value,\n  format,\n  firstWeekDay,\n  monthNames,\n  weekDayNames,\n  isSelectable,\n  onChange,\n  id,\n  visible,\n  referenceRef,\n  label,\n  cancelLabel,\n  confirmLabel,\n  validate,\n  onDissmiss,\n}: DatePickerPopoverProps) => {\n  const { desktop } = useResponsive(DATE_PICKER_MOBILE_THRESHOLD);\n  const { Field, submitForm, setFieldValue, resetField } = useForm({\n    date: {\n      initialValue: value ?? \"\",\n      validate,\n    },\n  });\n\n  const handleCancel = () => {\n    setFieldValue(\"date\", value ?? \"\");\n    onDissmiss();\n  };\n\n  const handleConfirm = () => {\n    submitForm(({ date }) => {\n      if (isNotNullishOrEmpty(date)) {\n        onChange(date);\n      }\n      onDissmiss();\n    });\n  };\n\n  useEffect(() => {\n    if (!visible) {\n      resetField(\"date\");\n    }\n  }, [visible, resetField]);\n\n  return (\n    <Popover\n      id={id}\n      role=\"dialog\"\n      onDismiss={handleCancel}\n      referenceRef={referenceRef}\n      autoFocus={true}\n      returnFocus={false}\n      visible={visible}\n    >\n      <View style={desktop ? styles.popoverDesktop : styles.popover}>\n        <Field name=\"date\">\n          {({ ref, value, error, onBlur, onChange }) => (\n            <>\n              <LakeLabel\n                label={label}\n                render={id => (\n                  <Rifm value={value} onChange={onChange} {...rifmDateProps}>\n                    {({ value, onChange }) => (\n                      <LakeTextInput\n                        ref={ref}\n                        id={id}\n                        placeholder={format}\n                        value={value}\n                        error={error}\n                        onBlur={onBlur}\n                        onChange={onChange}\n                      />\n                    )}\n                  </Rifm>\n                )}\n              />\n\n              <DatePickerPopoverContent\n                value={value}\n                format={format}\n                firstWeekDay={firstWeekDay}\n                monthNames={monthNames}\n                weekDayNames={weekDayNames}\n                desktop={desktop}\n                isSelectable={isSelectable}\n                onChange={onChange}\n              />\n            </>\n          )}\n        </Field>\n\n        <Space height={24} />\n\n        <Box direction=\"row\" alignItems=\"center\">\n          <LakeButton mode=\"secondary\" size=\"small\" onPress={handleCancel} style={styles.button}>\n            {cancelLabel}\n          </LakeButton>\n\n          <Space width={24} />\n\n          <LakeButton color=\"current\" size=\"small\" onPress={handleConfirm} style={styles.button}>\n            {confirmLabel}\n          </LakeButton>\n        </Box>\n      </View>\n    </Popover>\n  );\n};\n\ntype DateRangeModalProps = {\n  children: ReactNode;\n  visible: boolean;\n  withCloseButton?: boolean;\n  onPressClose: () => void;\n};\n\nconst DateRangeModal = ({\n  children,\n  visible,\n  withCloseButton,\n  onPressClose,\n}: DateRangeModalProps) => {\n  const { desktop } = useResponsive(MODALE_MOBILE_THRESHOLD);\n\n  if (desktop) {\n    return (\n      <LakeModal\n        visible={visible}\n        maxWidth={900}\n        onPressClose={withCloseButton === true ? onPressClose : undefined}\n      >\n        {children}\n      </LakeModal>\n    );\n  }\n\n  return (\n    <BottomPanel visible={visible} onPressClose={onPressClose}>\n      <View style={styles.popover}>{children}</View>\n    </BottomPanel>\n  );\n};\n\nexport type DateRangePickerProps = {\n  value: { start: string; end: string };\n  error?: string;\n  format: DateFormat;\n  startLabel: string;\n  endLabel: string;\n  firstWeekDay: keyof typeof weekDayIndex;\n  monthNames: MonthNames;\n  weekDayNames: WeekDayNames;\n  isSelectable?: (date: DatePickerDate) => boolean;\n  onChange: (date: { start: string; end: string }) => void;\n};\n\ntype DateRangePickerModalContentProps = Except<\n  DateRangePickerProps,\n  \"startLabel\" | \"endLabel\" | \"error\"\n> & {\n  desktop: boolean;\n  displayTwoCalendar: boolean;\n};\n\nconst DateRangePickerModalContent = ({\n  value,\n  format,\n  firstWeekDay,\n  monthNames,\n  weekDayNames,\n  desktop,\n  displayTwoCalendar,\n  isSelectable,\n  onChange,\n}: DateRangePickerModalContentProps) => {\n  const isFirstMount = useFirstMountState();\n  const [periods, setPeriods] = useState(() => {\n    const startYearMonth = getYearMonth(value.start, format).getWithDefault(getTodayYearMonth());\n    const endYearMonth = getYearMonth(value.end, format).getWithDefault(\n      incrementYearMonth(startYearMonth),\n    );\n    return {\n      start: startYearMonth,\n      end: isYearMonthEquals(startYearMonth, endYearMonth)\n        ? incrementYearMonth(startYearMonth)\n        : endYearMonth,\n    };\n  });\n\n  // Automatically change displayed year and month when start date changes\n  useEffect(() => {\n    if (isFirstMount) {\n      return;\n    }\n\n    const startYearMonth = getYearMonth(value.start, format);\n\n    if (startYearMonth.isSome()) {\n      setPeriods(periods => {\n        const isStartAndEndSameMonth = isYearMonthEquals(startYearMonth.value, periods.end);\n        if (isStartAndEndSameMonth) {\n          return {\n            start: decrementYearMonth(periods.end),\n            end: periods.end,\n          };\n        }\n\n        // change end period if it becomes before start period\n        const endPeriod = maxYearMonth(periods.end, incrementYearMonth(startYearMonth.value));\n\n        return {\n          start: startYearMonth.value,\n          end: endPeriod,\n        };\n      });\n    }\n  }, [isFirstMount, value.start, format]);\n\n  // Automatically change displayed year and month when end date changes\n  useEffect(() => {\n    if (isFirstMount) {\n      return;\n    }\n\n    const endYearMonth = getYearMonth(value.end, format);\n\n    if (endYearMonth.isSome()) {\n      setPeriods(periods => {\n        const isStartAndEndSameMonth = isYearMonthEquals(periods.start, endYearMonth.value);\n        if (isStartAndEndSameMonth) {\n          return {\n            start: periods.start,\n            end: incrementYearMonth(periods.start),\n          };\n        }\n\n        // change start period if it becomes after end period\n        const startPeriod = minYearMonth(periods.start, decrementYearMonth(endYearMonth.value));\n\n        return {\n          start: startPeriod,\n          end: endYearMonth.value,\n        };\n      });\n    }\n  }, [isFirstMount, value.end, format]);\n\n  const setStartPeriod = useCallback((yearMonth: YearMonth) => {\n    setPeriods(periods => ({\n      start: yearMonth,\n      end: maxYearMonth(periods.end, incrementYearMonth(yearMonth)),\n    }));\n  }, []);\n\n  const setEndPeriod = useCallback((yearMonth: YearMonth) => {\n    setPeriods(periods => ({\n      start: minYearMonth(periods.start, decrementYearMonth(yearMonth)),\n      end: yearMonth,\n    }));\n  }, []);\n\n  const dateRange = useMemo(() => parseRange(value, format), [value, format]);\n\n  const handleSelectDate = (date: DatePickerDate) => {\n    const newRange = getNewDateRange(dateRange, date);\n    const newValue = {\n      start: newRange.start.match({\n        Some: date => stringifyDate(date, format),\n        None: () => value.start,\n      }),\n      end: newRange.end.match({\n        Some: date => stringifyDate(date, format),\n        None: () => value.end,\n      }),\n    };\n    onChange(newValue);\n  };\n\n  if (!displayTwoCalendar) {\n    return (\n      <>\n        <YearMonthSelect\n          monthNames={monthNames}\n          value={periods.start}\n          hideArrows={!desktop}\n          onChange={setStartPeriod}\n        />\n\n        <Space height={24} />\n\n        <MonthCalendar\n          month={periods.start.month}\n          year={periods.start.year}\n          value={dateRange}\n          firstWeekDay={firstWeekDay}\n          weekDayNames={weekDayNames}\n          isSelectable={isSelectable}\n          onChange={handleSelectDate}\n        />\n      </>\n    );\n  }\n\n  return (\n    <View>\n      <Box direction=\"row\" alignItems=\"start\">\n        <View style={styles.rangeCalendarSide}>\n          <YearMonthSelect\n            monthNames={monthNames}\n            value={periods.start}\n            maxValue={decrementYearMonth(periods.end)}\n            arrowsPosition=\"around\"\n            onChange={setStartPeriod}\n          />\n\n          <Space height={24} />\n\n          <MonthCalendar\n            month={periods.start.month}\n            year={periods.start.year}\n            value={dateRange}\n            firstWeekDay={firstWeekDay}\n            weekDayNames={weekDayNames}\n            isSelectable={isSelectable}\n            onChange={handleSelectDate}\n          />\n        </View>\n\n        <Separator space={24} horizontal={true} />\n\n        <View style={styles.rangeCalendarSide}>\n          <YearMonthSelect\n            monthNames={monthNames}\n            value={periods.end}\n            minValue={incrementYearMonth(periods.start)}\n            arrowsPosition=\"around\"\n            onChange={setEndPeriod}\n          />\n\n          <Space height={24} />\n\n          <MonthCalendar\n            month={periods.end.month}\n            year={periods.end.year}\n            value={dateRange}\n            firstWeekDay={firstWeekDay}\n            weekDayNames={weekDayNames}\n            isSelectable={isSelectable}\n            onChange={handleSelectDate}\n          />\n        </View>\n      </Box>\n    </View>\n  );\n};\n\nexport const DateRangePicker = ({\n  value,\n  error,\n  format,\n  startLabel,\n  endLabel,\n  firstWeekDay,\n  monthNames,\n  weekDayNames,\n  isSelectable,\n  onChange,\n}: DateRangePickerProps) => {\n  const { desktop } = useResponsive(DATE_PICKER_MOBILE_THRESHOLD);\n  const { desktop: displayTwoCalendar } = useResponsive(DATE_RANGE_PICKER_THRESHOLD);\n  const ref = useRef<TextInput>(null);\n  const [isOpened, { open, close }] = useDisclosure(false);\n\n  const handleStartChange = useCallback(\n    (start: string) => {\n      onChange({ start, end: value.end });\n    },\n    [value, onChange],\n  );\n\n  const handleEndChange = useCallback(\n    (end: string) => {\n      onChange({ start: value.start, end });\n    },\n    [value, onChange],\n  );\n\n  return (\n    <View>\n      <Box direction=\"row\" alignItems=\"end\">\n        <LakeLabel\n          label={startLabel}\n          style={styles.label}\n          render={id => (\n            <Rifm value={value.start} onChange={handleStartChange} {...rifmDateProps}>\n              {({ value, onChange }) => (\n                <LakeTextInput\n                  ref={ref}\n                  id={id}\n                  placeholder={format}\n                  value={value}\n                  onChange={onChange}\n                  error={error}\n                  hideErrors={true}\n                  ariaExpanded={isOpened}\n                />\n              )}\n            </Rifm>\n          )}\n        />\n\n        <Space width={12} />\n\n        <Box style={styles.arrowContainer} justifyContent=\"center\">\n          <Icon name=\"arrow-right-filled\" size={20} />\n        </Box>\n\n        <Space width={12} />\n\n        <LakeLabel\n          label={endLabel}\n          style={styles.label}\n          render={id => (\n            <Rifm value={value.end} onChange={handleEndChange} {...rifmDateProps}>\n              {({ value, onChange }) => (\n                <LakeTextInput\n                  id={id}\n                  placeholder={format}\n                  value={value}\n                  onChange={onChange}\n                  error={error}\n                  hideErrors={true}\n                  ariaExpanded={isOpened}\n                />\n              )}\n            </Rifm>\n          )}\n        />\n\n        <Space width={12} />\n        <LakeButton mode=\"secondary\" icon=\"calendar-ltr-regular\" size=\"small\" onPress={open} />\n      </Box>\n\n      <Space height={4} />\n\n      <LakeText variant=\"smallRegular\" color={colors.negative[500]}>\n        {error ?? \" \"}\n      </LakeText>\n\n      <DateRangeModal visible={isOpened} withCloseButton={true} onPressClose={close}>\n        <DateRangePickerModalContent\n          value={value}\n          format={format}\n          firstWeekDay={firstWeekDay}\n          monthNames={monthNames}\n          weekDayNames={weekDayNames}\n          desktop={desktop}\n          displayTwoCalendar={displayTwoCalendar}\n          isSelectable={isSelectable}\n          onChange={onChange}\n        />\n      </DateRangeModal>\n    </View>\n  );\n};\n\ntype DateRangePickerModalProps = DateRangePickerProps & {\n  visible: boolean;\n  cancelLabel: string;\n  confirmLabel: string;\n  onDissmiss: () => void;\n};\n\nexport const DateRangePickerModal = ({\n  value,\n  error,\n  format,\n  firstWeekDay,\n  monthNames,\n  weekDayNames,\n  isSelectable,\n  onChange,\n  visible,\n  startLabel,\n  endLabel,\n  cancelLabel,\n  confirmLabel,\n  onDissmiss,\n}: DateRangePickerModalProps) => {\n  const { desktop } = useResponsive(MODALE_MOBILE_THRESHOLD);\n  const { desktop: displayTwoCalendar } = useResponsive(DATE_RANGE_PICKER_THRESHOLD);\n  const [localeValue, setLocaleValue] = useState(value);\n\n  useEffect(() => {\n    setLocaleValue(value);\n  }, [value]);\n\n  const handleStartChange = (start: string) => {\n    setLocaleValue({ start, end: localeValue.end });\n  };\n\n  const handleEndChange = (end: string) => {\n    setLocaleValue({ start: localeValue.start, end });\n  };\n\n  const handleCancel = () => {\n    setLocaleValue(value);\n    onDissmiss();\n  };\n\n  const handleConfirm = () => {\n    onChange(localeValue);\n    onDissmiss();\n  };\n\n  return (\n    <DateRangeModal visible={visible} onPressClose={handleCancel}>\n      <View>\n        <Box direction=\"row\" alignItems=\"end\">\n          <LakeLabel\n            label={startLabel}\n            style={styles.label}\n            render={id => (\n              <Rifm value={localeValue.start} onChange={handleStartChange} {...rifmDateProps}>\n                {({ value, onChange }) => (\n                  <LakeTextInput\n                    id={id}\n                    placeholder={format}\n                    value={value}\n                    onChange={onChange}\n                    error={error}\n                    hideErrors={true}\n                  />\n                )}\n              </Rifm>\n            )}\n          />\n\n          <Space width={12} />\n\n          <Box style={styles.arrowContainer} justifyContent=\"center\">\n            <Icon name=\"arrow-right-filled\" size={20} />\n          </Box>\n\n          <Space width={12} />\n\n          <LakeLabel\n            label={endLabel}\n            style={styles.label}\n            render={id => (\n              <Rifm value={localeValue.end} onChange={handleEndChange} {...rifmDateProps}>\n                {({ value, onChange }) => (\n                  <LakeTextInput\n                    id={id}\n                    placeholder={format}\n                    value={value}\n                    onChange={onChange}\n                    error={error}\n                    hideErrors={true}\n                  />\n                )}\n              </Rifm>\n            )}\n          />\n        </Box>\n\n        <Space height={4} />\n\n        <LakeText variant=\"smallRegular\" color={colors.negative[500]}>\n          {error ?? \" \"}\n        </LakeText>\n      </View>\n\n      <DateRangePickerModalContent\n        value={localeValue}\n        format={format}\n        firstWeekDay={firstWeekDay}\n        monthNames={monthNames}\n        weekDayNames={weekDayNames}\n        desktop={desktop}\n        displayTwoCalendar={displayTwoCalendar}\n        isSelectable={isSelectable}\n        onChange={setLocaleValue}\n      />\n\n      <Space height={24} />\n\n      <Box direction=\"row\" alignItems=\"center\">\n        <LakeButton mode=\"secondary\" size=\"small\" onPress={handleCancel} style={styles.button}>\n          {cancelLabel}\n        </LakeButton>\n\n        <Space width={24} />\n\n        <LakeButton color=\"current\" size=\"small\" onPress={handleConfirm} style={styles.button}>\n          {confirmLabel}\n        </LakeButton>\n      </Box>\n    </DateRangeModal>\n  );\n};\n"],"names":["t","n","e","r","n.useEffect","n.useLayoutEffect","u","i","o","c","f","l","a","n.useReducer","n.useRef","s","d","v","g","y","m","p","F","h","b","n.useMemo","O","S","E","k","w","x","N","R","j","useRifm","props","refresh","useReducer","valueRef","useRef","replace","append","userValue","isDeleleteButtonDownRef","onChange","evt","eventValue","useLayoutEffect","input","isSizeIncreaseOperation","isDeleleteButtonDown","isNoOperation","deleteWasNoOp","acceptedCharIndexAfterDelete","charsToSkipAfterDelete","clean","str","valueBeforeSelectionStart","getCursorPosition","val","start","cleanPos","newPos","newCleanPos","formattedValue","replacedValue","useEffect","handleKeyDown","handleKeyUp","Rifm","renderProps","useFirstMountState","isFirstMount","styles","StyleSheet","spacings","colors","MODALE_MOBILE_THRESHOLD","DATE_PICKER_MOBILE_THRESHOLD","DATE_RANGE_PICKER_THRESHOLD","NB_DAYS_IN_WEEK","weekDayIndex","rifmDateProps","getRifmProps","parseDate","value","format","date","dayjs","Option","parseRange","stringifyDate","validateDateRangeOrder","range2","isDateAfter","range","end","result","groupEvery","groupSize","nbGroups","padEnd","length","itemsToAppend","isTodayOrFutureDate","yesterday","yesterdayDate","isDateInRange","minDate","maxDate","min","max","isDateBefore","isDateToday","today","getMonthDates","month","year","aggregate","acc","dateDay","dateMonth","dateYear","getMonthWeeks","firstWeekDay","firstWeekDayIndex","monthFirstWeekDay","monthDates","nbDaysToPrepend","weeks","lastWeek","getWeekDayNames","dayNames","firstWeekDayNames","lastWeekDayNames","isDateEquals","date1","date2","isDateRange","match","P","isSelectedDate","value2","start2","end2","getRangeIndicatorType","startDate","endDate","computeDateDistanceInDays","date1Date","date2Date","diffInMs","getNewDateRange","currentRange","selectedDate","startDistance","endDistance","getTodayYearMonth","getYearMonth","isNullishOrEmpty","isYearMonthBefore","isYearMonthEquals","minYearMonth","maxYearMonth","incrementYearMonth","decrementYearMonth","YearMonthSelect","monthNames","arrowsPosition","hideArrows","minValue","maxValue","monthItems","useMemo","name","index","yearItems","selectMonth","selectYear","setPreviousMonth","setNextMonth","isPreviousDisabled","isNextDisabled","jsxs","Box","Fragment","jsx","LakeButton","Fill","LakeSelect","Space","MonthCalendar","weekDayNames","isSelectable","View","dayName","LakeText","week","weekIndex","dateIndex","isDisabled","isNotNullish","isSelected","isToday","rangeIndicator","Pressable","noop","focused","hovered","pressed","day","DatePickerPopoverContent","desktop","monthYear","setMonthYear","useState","yearMonth","handleChange","useCallback","formatted","isNotNullishOrEmpty","DatePicker","label","error","useResponsive","ref","isOpened","open","close","useDisclosure","popoverId","useId","LakeLabel","id","onChange2","LakeTextInput","Popover","DatePickerPopover","visible","referenceRef","cancelLabel","confirmLabel","validate","onDissmiss","Field","submitForm","setFieldValue","resetField","useForm","handleCancel","handleConfirm","onBlur","id2","value3","onChange3","DateRangeModal","children","withCloseButton","onPressClose","LakeModal","BottomPanel","DateRangePickerModalContent","displayTwoCalendar","periods","setPeriods","startYearMonth","endYearMonth","periods2","endPeriod","setStartPeriod","setEndPeriod","dateRange","handleSelectDate","newRange","newValue","Separator","DateRangePicker","startLabel","endLabel","handleStartChange","handleEndChange","Icon","DateRangePickerModal","localeValue","setLocaleValue"],"mappings":"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","x_google_ignoreList":[0,1]}