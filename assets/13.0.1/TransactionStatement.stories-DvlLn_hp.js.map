{"version":3,"file":"TransactionStatement.stories-DvlLn_hp.js","sources":["../../../packages/shared-business/src/components/TransactionStatement.tsx","../../../packages/shared-business/__stories__/TransactionStatement.stories.tsx"],"sourcesContent":["import { Box } from \"@swan-io/lake/src/components/Box\";\nimport { Fill } from \"@swan-io/lake/src/components/Fill\";\nimport { Separator } from \"@swan-io/lake/src/components/Separator\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport { Stack } from \"@swan-io/lake/src/components/Stack\";\nimport { SwanLogo } from \"@swan-io/lake/src/components/SwanLogo\";\nimport { colors, fonts, primaryFontStyle } from \"@swan-io/lake/src/constants/design\";\nimport { isNotNullish, isNotNullishOrEmpty } from \"@swan-io/lake/src/utils/nullish\";\nimport IBAN from \"iban\";\nimport { CSSProperties } from \"react\";\nimport { StyleProp, StyleSheet, Text, TextStyle, View, ViewStyle } from \"react-native\";\nimport { match } from \"ts-pattern\";\nimport { formatCurrencyIso, t } from \"../utils/i18n\";\n\nconst LOGO_MAX_HEIGHT = 24;\nconst LOGO_MAX_WIDTH = 150;\n\nconst getTextStyle = (type: \"sans\" | \"mono\", fontSize: number): TextStyle => ({\n  ...(type === \"mono\" ? { fontFamily: fonts.iban } : primaryFontStyle),\n  color: colors.gray[900],\n  fontSize,\n  lineHeight: fontSize * 1.25,\n  fontWeight: \"400\",\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 1050,\n    width: 793,\n    padding: 56,\n  },\n  partnershipText: {\n    ...getTextStyle(\"sans\", 14),\n    color: colors.gray[500],\n  },\n  pageTitle: {\n    ...getTextStyle(\"sans\", 20),\n    color: colors.swan[500],\n    fontWeight: \"600\",\n  },\n  sectionTitle: {\n    ...getTextStyle(\"sans\", 14),\n    color: colors.swan[500],\n    fontWeight: \"600\",\n  },\n  lineName: {\n    ...getTextStyle(\"sans\", 14),\n    color: colors.gray[700],\n  },\n  lineValue: {\n    ...getTextStyle(\"sans\", 14),\n    color: colors.swan[500],\n    fontWeight: \"600\",\n  },\n  generationInfos: {\n    ...getTextStyle(\"sans\", 10),\n    color: colors.gray[700],\n  },\n  footer: {\n    ...getTextStyle(\"sans\", 10),\n    color: colors.gray[500],\n    fontWeight: \"300\",\n  },\n  defaultLogo: {\n    height: LOGO_MAX_HEIGHT,\n    width: (45 / 10) * LOGO_MAX_HEIGHT,\n  },\n  swanLogo: {\n    height: 8,\n    width: (45 / 10) * 8,\n    position: \"relative\",\n    top: 0.5,\n  },\n});\n\ntype EntryProps = {\n  name: string;\n  value: string;\n};\n\nconst Line = ({ name, value }: EntryProps) => (\n  <Box direction=\"row\" alignItems=\"center\">\n    <Text style={styles.lineName}>{name}</Text>\n    <Fill minWidth={8} />\n    <Text style={styles.lineValue}>{value}</Text>\n  </Box>\n);\n\ntype Amount = {\n  value: string;\n  currency: string;\n};\n\ntype TransactionType =\n  | \"SepaCreditTransferIn\"\n  | \"SepaCreditTransferOut\"\n  | \"SepaInstantCreditTransferIn\"\n  | \"SepaInstantCreditTransferOut\"\n  | \"InternalCreditTransferIn\"\n  | \"InternalCreditTransferOut\"\n  | \"InternationalCreditTransferIn\"\n  | \"InternationalCreditTransferOut\";\n\ntype TransactionStatementV1Props = {\n  version: \"v1\";\n\n  partnerLogoUrl?: string;\n  generationDate: string;\n\n  executionDate: string;\n  type: TransactionType;\n  amount?: Amount;\n  targetTransferAmount?: Amount;\n  instructedAmount?: Amount;\n  amountCredited?: Amount;\n  exchangeRate?: [Amount, Amount];\n  fees?: Amount;\n  label: string;\n  reference?: string;\n\n  debtorName: string;\n  debtorAccountNumber: string;\n  debtorBankName?: string;\n  debtorBankIdentifier?: string;\n\n  creditorName: string;\n  creditorAccountNumber: string;\n  creditorBankName?: string;\n  creditorBankIdentifier?: string;\n\n  style?: StyleProp<ViewStyle>;\n};\n\nconst logoStyle: CSSProperties = {\n  height: LOGO_MAX_HEIGHT,\n  maxWidth: LOGO_MAX_WIDTH,\n  objectFit: \"contain\",\n  objectPosition: \"left\",\n};\n\nexport const TransactionStatementV1 = ({\n  partnerLogoUrl,\n  generationDate,\n\n  executionDate,\n  type,\n  amount,\n  instructedAmount,\n  amountCredited,\n  targetTransferAmount,\n  exchangeRate,\n  fees,\n  label,\n  reference,\n\n  debtorName,\n  debtorAccountNumber,\n  debtorBankName,\n  debtorBankIdentifier,\n\n  creditorName,\n  creditorAccountNumber,\n  creditorBankName,\n  creditorBankIdentifier,\n\n  style,\n}: TransactionStatementV1Props) => {\n  return (\n    <View style={[styles.container, style]}>\n      <Box direction=\"row\" alignItems=\"center\">\n        {isNotNullishOrEmpty(partnerLogoUrl) ? (\n          <img src={partnerLogoUrl} style={logoStyle} />\n        ) : (\n          <SwanLogo style={styles.defaultLogo} />\n        )}\n\n        <Separator horizontal={true} space={8} />\n        <Text style={styles.partnershipText}>{t(\"transactionStatement.partnership\")}</Text>\n        <Space width={4} />\n        <SwanLogo color={colors.gray[900]} style={styles.swanLogo} />\n      </Box>\n\n      <Space height={24} />\n      <Text style={styles.pageTitle}>{t(\"transactionStatement.title.document\")}</Text>\n      <Space height={24} />\n\n      <Text style={styles.sectionTitle}>\n        {t(\"transactionStatement.title.transactionInformation\")}\n      </Text>\n\n      <Space height={8} />\n\n      <Stack space={8}>\n        <Line name={t(\"transactionStatement.information.executionDate\")} value={executionDate} />\n\n        <Line\n          name={t(\"transactionStatement.information.type\")}\n          value={match(type)\n            .with(\"SepaCreditTransferIn\", () => t(\"transactionStatement.type.SepaCreditTransferIn\"))\n            .with(\"SepaCreditTransferOut\", () =>\n              t(\"transactionStatement.type.SepaCreditTransferOut\"),\n            )\n            .with(\"SepaInstantCreditTransferIn\", () =>\n              t(\"transactionStatement.type.SepaInstantCreditTransferIn\"),\n            )\n            .with(\"SepaInstantCreditTransferOut\", () =>\n              t(\"transactionStatement.type.SepaInstantCreditTransferOut\"),\n            )\n            .with(\"InternalCreditTransferIn\", () =>\n              t(\"transactionStatement.type.InternalCreditTransferIn\"),\n            )\n            .with(\"InternalCreditTransferOut\", () =>\n              t(\"transactionStatement.type.InternalCreditTransferOut\"),\n            )\n            .with(\"InternationalCreditTransferIn\", () =>\n              t(\"transactionStatement.type.InternationalCreditTransferIn\"),\n            )\n            .with(\"InternationalCreditTransferOut\", () =>\n              t(\"transactionStatement.type.InternationalCreditTransferOut\"),\n            )\n            .exhaustive()}\n        />\n\n        {isNotNullish(instructedAmount) && (\n          <Line\n            name={t(\"transactionStatement.information.instructedAmount\")}\n            value={formatCurrencyIso(Number(instructedAmount.value), instructedAmount.currency)}\n          />\n        )}\n\n        {isNotNullish(amountCredited) && (\n          <Line\n            name={t(\"transactionStatement.information.amountCredited\")}\n            value={formatCurrencyIso(Number(amountCredited.value), amountCredited.currency)}\n          />\n        )}\n\n        {isNotNullish(amount) && (\n          <Line\n            name={t(\"transactionStatement.information.amount\")}\n            value={formatCurrencyIso(Number(amount.value), amount.currency)}\n          />\n        )}\n\n        {isNotNullish(targetTransferAmount) && (\n          <Line\n            name={t(\"transactionStatement.information.targetTransferAmount\")}\n            value={formatCurrencyIso(\n              Number(targetTransferAmount.value),\n              targetTransferAmount.currency,\n            )}\n          />\n        )}\n\n        {isNotNullish(exchangeRate) && (\n          <Line\n            name={t(\"transactionStatement.information.exchangeRate\")}\n            value={`${formatCurrencyIso(\n              Number(exchangeRate[0].value),\n              exchangeRate[0].currency,\n            )} = ${formatCurrencyIso(Number(exchangeRate[1].value), exchangeRate[1].currency)}`}\n          />\n        )}\n\n        {isNotNullish(fees) && (\n          <Line\n            name={t(\"transactionStatement.information.fees\")}\n            value={formatCurrencyIso(Number(fees.value), fees.currency)}\n          />\n        )}\n\n        <Line name={t(\"transactionStatement.information.label\")} value={label} />\n\n        {isNotNullish(reference) && (\n          <Line name={t(\"transactionStatement.information.reference\")} value={reference} />\n        )}\n      </Stack>\n\n      <Space height={24} />\n      <Text style={styles.sectionTitle}>{t(\"transactionStatement.title.debtor\")}</Text>\n      <Space height={8} />\n\n      <Stack space={8}>\n        <Line name={t(\"transactionStatement.debtor.name\")} value={debtorName} />\n\n        <Line\n          name={t(\"transactionStatement.debtor.accountNumber\")}\n          value={\n            IBAN.isValid(debtorAccountNumber)\n              ? IBAN.printFormat(debtorAccountNumber)\n              : debtorAccountNumber\n          }\n        />\n\n        {isNotNullishOrEmpty(debtorBankName) && (\n          <Line name={t(\"transactionStatement.debtor.bankName\")} value={debtorBankName} />\n        )}\n\n        {isNotNullishOrEmpty(debtorBankIdentifier) && (\n          <Line\n            name={t(\"transactionStatement.debtor.bankIdentifier\")}\n            value={debtorBankIdentifier}\n          />\n        )}\n      </Stack>\n\n      <Space height={24} />\n      <Text style={styles.sectionTitle}>{t(\"transactionStatement.title.creditor\")}</Text>\n      <Space height={8} />\n\n      <Stack space={8}>\n        <Line name={t(\"transactionStatement.creditor.name\")} value={creditorName} />\n\n        <Line\n          name={t(\"transactionStatement.creditor.accountNumber\")}\n          value={\n            IBAN.isValid(creditorAccountNumber)\n              ? IBAN.printFormat(creditorAccountNumber)\n              : creditorAccountNumber\n          }\n        />\n\n        {isNotNullishOrEmpty(creditorBankName) && (\n          <Line name={t(\"transactionStatement.creditor.bankName\")} value={creditorBankName} />\n        )}\n\n        {isNotNullishOrEmpty(creditorBankIdentifier) && (\n          <Line\n            name={t(\"transactionStatement.creditor.bankIdentifier\")}\n            value={creditorBankIdentifier}\n          />\n        )}\n      </Stack>\n\n      <Fill minHeight={8} />\n\n      <Text style={styles.generationInfos}>\n        {t(\"transactionStatement.generationDate\", { date: generationDate })}\n      </Text>\n\n      <Space height={8} />\n\n      {match(type)\n        .with(\"SepaCreditTransferOut\", \"InternationalCreditTransferOut\", () => (\n          <Text style={styles.generationInfos}>{t(\"transactionStatement.generationInfos\")}</Text>\n        ))\n        .otherwise(() => null)}\n\n      <Separator space={24} />\n      <Text style={styles.footer}>{t(\"transactionStatement.footer\")}</Text>\n    </View>\n  );\n};\n\nexport type TransactionStatementProps = TransactionStatementV1Props;\n\nexport const TransactionStatement = (props: TransactionStatementProps) =>\n  match(props)\n    .with({ version: \"v1\" }, props => <TransactionStatementV1 {...props} />)\n    .exhaustive();\n","import { Meta } from \"@storybook/react\";\nimport { invariantColors } from \"@swan-io/lake/src/constants/design\";\nimport { TransactionStatement } from \"../src/components/TransactionStatement\";\nimport { StoryBlock, StoryPart } from \"./_StoriesComponents\";\n\nexport default {\n  title: \"Informations/TransactionStatement\",\n  component: TransactionStatement,\n} as Meta<typeof TransactionStatement>;\n\nexport const Default = () => {\n  return (\n    <StoryBlock title=\"Transaction statement\">\n      <StoryPart title=\"Default\">\n        <TransactionStatement\n          version=\"v1\"\n          partnerLogoUrl=\"https://s3.eu-west-1.amazonaws.com/data.master.oina.ws/7a90851b-40f8-479d-9e0e-86d12fb001b5/SANDBOX/logo-749a2fb5-230b-4ae6-98bd-65bdb3c987c9.png\"\n          generationDate=\"08/12/2024\"\n          executionDate=\"03/28/2024\"\n          type=\"InternalCreditTransferOut\"\n          amount={{ value: \"12.00\", currency: \"EUR\" }}\n          targetTransferAmount={{ value: \"10.25\", currency: \"GBP\" }}\n          exchangeRate={[\n            { value: \"1.00\", currency: \"EUR\" },\n            { value: \"0.8548\", currency: \"GBP\" },\n          ]}\n          fees={{ value: \"1.00\", currency: \"EUR\" }}\n          label=\"Transfer to Alexandra ERZINGOVIVOVA\"\n          reference=\"12345-EIHJDKB-2849986398698-HLKHSFT\"\n          debtorName=\"Green co\"\n          debtorAccountNumber=\"FR7699999001001477659048183\"\n          debtorBankName=\"Swan\"\n          debtorBankIdentifier=\"SWNBFR22\"\n          creditorName=\"Yellow corp\"\n          creditorAccountNumber=\"FR7699999001001899407676183\"\n          creditorBankName=\"Acme Bank\"\n          creditorBankIdentifier=\"GNCFFRCQXXX\"\n          style={{ backgroundColor: invariantColors.white }}\n        />\n      </StoryPart>\n\n      <StoryPart title=\"SctOut\">\n        <TransactionStatement\n          version=\"v1\"\n          partnerLogoUrl=\"https://s3.eu-west-1.amazonaws.com/data.master.oina.ws/7a90851b-40f8-479d-9e0e-86d12fb001b5/SANDBOX/logo-749a2fb5-230b-4ae6-98bd-65bdb3c987c9.png\"\n          generationDate=\"08/12/2024\"\n          executionDate=\"03/28/2024\"\n          type=\"SepaCreditTransferOut\"\n          amount={{ value: \"12.00\", currency: \"EUR\" }}\n          targetTransferAmount={{ value: \"10.25\", currency: \"GBP\" }}\n          exchangeRate={[\n            { value: \"1.00\", currency: \"EUR\" },\n            { value: \"0.8548\", currency: \"GBP\" },\n          ]}\n          fees={{ value: \"1.00\", currency: \"EUR\" }}\n          label=\"Transfer to Alexandra ERZINGOVIVOVA\"\n          reference=\"12345-EIHJDKB-2849986398698-HLKHSFT\"\n          debtorName=\"Green co\"\n          debtorAccountNumber=\"FR7699999001001477659048183\"\n          debtorBankName=\"Swan\"\n          debtorBankIdentifier=\"SWNBFR22\"\n          creditorName=\"Yellow corp\"\n          creditorAccountNumber=\"FR7699999001001899407676183\"\n          creditorBankName=\"Acme Bank\"\n          creditorBankIdentifier=\"GNCFFRCQXXX\"\n          style={{ backgroundColor: invariantColors.white }}\n        />\n      </StoryPart>\n    </StoryBlock>\n  );\n};\n"],"names":["LOGO_MAX_HEIGHT","LOGO_MAX_WIDTH","getTextStyle","type","fontSize","primaryFontStyle","colors","styles","StyleSheet","Line","name","value","jsxs","Box","jsx","Text","Fill","logoStyle","TransactionStatementV1","partnerLogoUrl","generationDate","executionDate","amount","instructedAmount","amountCredited","targetTransferAmount","exchangeRate","fees","label","reference","debtorName","debtorAccountNumber","debtorBankName","debtorBankIdentifier","creditorName","creditorAccountNumber","creditorBankName","creditorBankIdentifier","style","View","isNotNullishOrEmpty","SwanLogo","Separator","Space","Stack","match","isNotNullish","formatCurrencyIso","IBAN","TransactionStatement","props","TransactionStatement_stories","title","component","Default","StoryBlock","StoryPart","currency","backgroundColor","invariantColors","white"],"mappings":"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"}