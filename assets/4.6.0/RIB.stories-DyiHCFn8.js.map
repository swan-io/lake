{"version":3,"file":"RIB.stories-DyiHCFn8.js","sources":["../../../packages/shared-business/src/components/RIB.tsx"],"sourcesContent":["import { Box } from \"@swan-io/lake/src/components/Box\";\nimport { LakeHeading } from \"@swan-io/lake/src/components/LakeHeading\";\nimport { Separator } from \"@swan-io/lake/src/components/Separator\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport { SwanLogo } from \"@swan-io/lake/src/components/SwanLogo\";\nimport { WithPartnerAccentColor } from \"@swan-io/lake/src/components/WithPartnerAccentColor\";\nimport { commonStyles } from \"@swan-io/lake/src/constants/commonStyles\";\nimport {\n  colors,\n  fonts,\n  interFontStyle,\n  invariantColors,\n  radii,\n  spacings,\n} from \"@swan-io/lake/src/constants/design\";\nimport { isNotNullishOrEmpty } from \"@swan-io/lake/src/utils/nullish\";\nimport { CSSProperties } from \"react\";\nimport { StyleSheet, Text, TextStyle, View } from \"react-native\";\nimport { match } from \"ts-pattern\";\nimport { t } from \"../utils/i18n\";\n\nconst LOGO_MAX_HEIGHT = 24;\nconst LOGO_MAX_WIDTH = 150;\n\nconst getTextStyle = (type: \"serif\" | \"mono\", fontSize: number): TextStyle => ({\n  ...(type === \"mono\" ? { fontFamily: fonts.iban } : interFontStyle),\n  color: colors.gray[900],\n  fontSize,\n  lineHeight: fontSize * 1.25,\n  fontWeight: \"400\",\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: radii[8],\n    borderColor: colors.gray[100],\n    borderWidth: 1,\n    backgroundColor: invariantColors.white,\n    width: 470,\n  },\n  half: {\n    padding: spacings[24],\n  },\n  shrink: {\n    flexShrink: 1,\n  },\n  label: {\n    ...getTextStyle(\"serif\", 10),\n  },\n  addressText: {\n    ...getTextStyle(\"serif\", 12),\n  },\n  mainText: {\n    ...getTextStyle(\"mono\", 12),\n  },\n  smallText: {\n    ...getTextStyle(\"mono\", 10),\n  },\n  partnershipText: {\n    ...getTextStyle(\"serif\", 8),\n    color: colors.gray[500],\n  },\n  partnerLabel: {\n    color: colors.partner[500],\n    fontWeight: \"500\",\n  },\n  defaultLogo: {\n    height: LOGO_MAX_HEIGHT,\n    width: (45 / 10) * LOGO_MAX_HEIGHT,\n  },\n  swanLogo: {\n    height: 6,\n    width: (45 / 10) * 6,\n  },\n});\n\ntype ItemProps = {\n  color?: \"partner\" | \"gray\";\n  kind: \"address\" | \"main\" | \"small\";\n  label: string;\n  value: string | string[];\n};\n\nconst kindStyles = {\n  address: styles.addressText,\n  main: styles.mainText,\n  small: styles.smallText,\n};\n\nconst Item = ({ color = \"gray\", kind, label, value }: ItemProps) => (\n  <View style={styles.shrink}>\n    <Text style={[styles.label, color === \"partner\" && styles.partnerLabel]}>{label}</Text>\n    <Space height={4} />\n\n    {typeof value === \"string\" ? (\n      <Text style={kindStyles[kind]}>{value}</Text>\n    ) : (\n      value.map((line, index) => (\n        <Text key={index} style={kindStyles[kind]}>\n          {line}\n        </Text>\n      ))\n    )}\n  </View>\n);\n\ntype Address = {\n  address: string;\n  city: string;\n  country: string;\n  name: string;\n  zipCode: string;\n};\n\ntype RIBv1Props = {\n  version: \"v1\";\n  accountHolderAddress: Address;\n  bank: string;\n  bankAddress: Address;\n  bic: string;\n  iban: string;\n  partnerColor: string;\n  partnerLogoUrl?: string;\n} & (\n  | {\n      accountCountry: \"FRA\";\n      agency: string;\n      bankKey: string;\n      bankNumber: string;\n    }\n  | {\n      accountCountry: \"DEU\";\n      accountNumber: string;\n    }\n  | {\n      accountCountry: \"ESP\";\n      agency: string;\n      bankNumber: string;\n      nationalCode: string;\n    }\n  | {\n      accountCountry: \"NLD\";\n      bankKey: string;\n      bankNumber: string;\n    }\n);\n\nconst logoStyle: CSSProperties = {\n  objectFit: \"contain\",\n  objectPosition: \"left\",\n};\n\nconst RIBv1 = ({\n  accountHolderAddress,\n  bank,\n  bankAddress,\n  bic,\n  iban,\n  partnerColor,\n  partnerLogoUrl,\n  ...props\n}: RIBv1Props) => (\n  <WithPartnerAccentColor color={partnerColor}>\n    <View style={styles.container}>\n      <View style={styles.half}>\n        <Box direction=\"row\" alignItems=\"center\">\n          {isNotNullishOrEmpty(partnerLogoUrl) ? (\n            <img\n              src={partnerLogoUrl}\n              style={{ ...logoStyle, height: LOGO_MAX_HEIGHT, maxWidth: LOGO_MAX_WIDTH }}\n            />\n          ) : (\n            <SwanLogo style={styles.defaultLogo} />\n          )}\n\n          <Space width={24} />\n\n          <LakeHeading\n            align=\"right\"\n            color={colors.gray[900]}\n            level={2}\n            style={commonStyles.fill}\n            variant=\"h3\"\n          >\n            {t(\"rib.bankDetails\")}\n          </LakeHeading>\n        </Box>\n\n        <Space height={24} />\n\n        <Box direction=\"row\" alignItems=\"center\">\n          <Item kind=\"main\" color=\"partner\" label={t(\"rib.iban\")} value={iban} />\n          <Space width={24} />\n          <Item kind=\"main\" color=\"partner\" label={t(\"rib.bic\")} value={bic} />\n        </Box>\n\n        <Space height={8} />\n\n        <Box direction=\"row\" alignItems=\"center\">\n          {match(props)\n            .with({ accountCountry: \"FRA\" }, ({ agency, bankKey, bankNumber }) => (\n              <>\n                <Item kind=\"small\" label={t(\"rib.bank\")} value={bank} />\n                <Space width={24} />\n                <Item kind=\"small\" label={t(\"rib.agency\")} value={agency} />\n                <Space width={24} />\n                <Item kind=\"small\" label={t(\"rib.number\")} value={bankNumber} />\n                <Space width={24} />\n                <Item kind=\"small\" label={t(\"rib.key\")} value={bankKey} />\n              </>\n            ))\n            .with({ accountCountry: \"DEU\" }, ({ accountNumber }) => (\n              <>\n                <Item kind=\"small\" label={t(\"rib.bank\")} value={bank} />\n                <Space width={24} />\n                <Item kind=\"small\" label={t(\"rib.accountNumber\")} value={accountNumber} />\n              </>\n            ))\n            .with({ accountCountry: \"ESP\" }, ({ agency, bankNumber, nationalCode }) => (\n              <>\n                <Item kind=\"small\" label={t(\"rib.bank\")} value={bank} />\n                <Space width={24} />\n                <Item kind=\"small\" label={t(\"rib.agency\")} value={agency} />\n                <Space width={24} />\n                <Item kind=\"small\" label={t(\"rib.nationalCode\")} value={nationalCode} />\n                <Space width={24} />\n                <Item kind=\"small\" label={t(\"rib.number\")} value={bankNumber} />\n              </>\n            ))\n            .with({ accountCountry: \"NLD\" }, ({ bankKey, bankNumber }) => (\n              <>\n                <Item kind=\"small\" label={t(\"rib.bank\")} value={bank} />\n                <Space width={24} />\n                <Item kind=\"small\" label={t(\"rib.number\")} value={bankNumber} />\n                <Space width={24} />\n                <Item kind=\"small\" label={t(\"rib.key\")} value={bankKey} />\n              </>\n            ))\n            .exhaustive()}\n        </Box>\n      </View>\n\n      <Separator />\n\n      <View style={styles.half}>\n        <Box direction=\"row\" alignItems=\"center\">\n          <Item\n            kind=\"address\"\n            color=\"partner\"\n            label={t(\"rib.address\")}\n            value={[\n              bankAddress.name,\n              bankAddress.address,\n              `${bankAddress.zipCode} ${bankAddress.city}`,\n              bankAddress.country,\n            ]}\n          />\n\n          <Space width={24} />\n\n          <Item\n            kind=\"address\"\n            color=\"partner\"\n            label={t(\"rib.accountHolder\")}\n            value={[\n              accountHolderAddress.name,\n              accountHolderAddress.address,\n              `${accountHolderAddress.zipCode} ${accountHolderAddress.city}`,\n              accountHolderAddress.country,\n            ]}\n          />\n        </Box>\n\n        <Space height={12} />\n\n        <Box direction=\"row\" alignItems=\"center\">\n          <Text style={styles.partnershipText}>{t(\"rib.partnership\")}</Text>\n          <Space width={4} />\n          <SwanLogo color={colors.gray[900]} style={styles.swanLogo} />\n        </Box>\n      </View>\n    </View>\n  </WithPartnerAccentColor>\n);\n\nexport type RIBProps = RIBv1Props;\n\nexport const RIB = (props: RIBProps) =>\n  match(props)\n    .with({ version: \"v1\" }, props => <RIBv1 {...props} />)\n    .exhaustive();\n"],"names":["LOGO_MAX_HEIGHT","LOGO_MAX_WIDTH","getTextStyle","type","fontSize","fonts","interFontStyle","colors","styles","StyleSheet","radii","invariantColors","spacings","kindStyles","Item","color","kind","label","value","jsxs","View","jsx","Text","Space","line","index","logoStyle","RIBv1","accountHolderAddress","bank","bankAddress","bic","iban","partnerColor","partnerLogoUrl","props","WithPartnerAccentColor","Box","isNotNullishOrEmpty","SwanLogo","LakeHeading","commonStyles","t","match","agency","bankKey","bankNumber","Fragment","accountNumber","nationalCode","Separator","RIB","props2"],"mappings":"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"}