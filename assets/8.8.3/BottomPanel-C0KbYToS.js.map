{"version":3,"file":"BottomPanel-C0KbYToS.js","sources":["../../../packages/lake/src/components/BottomPanel.tsx"],"sourcesContent":["import { ReactNode, useEffect, useRef, useState } from \"react\";\nimport { Pressable, StyleSheet, View } from \"react-native\";\nimport { commonStyles } from \"../constants/commonStyles\";\nimport { backgroundColor, radii, shadows } from \"../constants/design\";\nimport { useBodyClassName } from \"../hooks/useBodyClassName\";\nimport { FocusTrap } from \"./FocusTrap\";\nimport { LoadingView } from \"./LoadingView\";\nimport { Portal } from \"./Portal\";\nimport { ScrollView } from \"./ScrollView\";\nimport { Suspendable } from \"./Suspendable\";\nimport { TransitionView } from \"./TransitionView\";\n\nconst BACKGROUND_COLOR = \"rgba(0, 0, 0, 0.6)\";\n\nconst styles = StyleSheet.create({\n  fill: {\n    ...StyleSheet.absoluteFillObject,\n    position: \"absolute\",\n    animationFillMode: \"forwards\",\n    visibility: \"visible\",\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: BACKGROUND_COLOR,\n  },\n  overlayEnter: {\n    animationKeyframes: {\n      \"0%\": { opacity: 0 },\n    },\n    animationDuration: \"200ms\",\n    animationTimingFunction: \"ease-in-out\",\n  },\n  overlayLeave: {\n    animationKeyframes: {\n      \"100%\": { opacity: 0 },\n    },\n    animationDuration: \"200ms\",\n    animationTimingFunction: \"ease-in-out\",\n  },\n  modalEnter: {\n    animationKeyframes: {\n      \"0%\": {\n        opacity: 0,\n        transform: \"translateY(20px)\",\n      },\n    },\n    animationDuration: \"300ms\",\n    animationTimingFunction: \"ease-in-out\",\n  },\n  modalLeave: {\n    animationKeyframes: {\n      \"100%\": {\n        opacity: 0,\n        transform: \"translateY(20px)\",\n      },\n    },\n    animationDuration: \"300ms\",\n    animationTimingFunction: \"ease-in-out\",\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    transitionDuration: \"300ms\",\n    transitionProperty: \"transform\",\n  },\n  modalContainer: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  modalContentContainer: {\n    justifyContent: \"flex-end\",\n    flexGrow: 1,\n  },\n  trap: {\n    ...commonStyles.fill,\n  },\n  modal: {\n    backgroundColor: backgroundColor.accented,\n    borderTopLeftRadius: radii[8],\n    borderTopRightRadius: radii[8],\n    boxShadow: shadows.modal,\n    alignSelf: \"stretch\",\n  },\n  pressableOverlay: {\n    ...commonStyles.fill,\n    outlineWidth: 0,\n    // make focus indicator invisible on iOS (outline: none doesn't work)\n    opacity: 0,\n    order: -1,\n  },\n});\n\ntype Props = {\n  visible: boolean;\n  onPressClose: () => void;\n  children: ReactNode;\n  returnFocus?: boolean;\n};\n\nexport const BottomPanel = ({ visible, onPressClose, children, returnFocus = true }: Props) => {\n  const [rootElement, setRootElement] = useState<Element | undefined>(() => undefined);\n  const container = useRef<View | null>(null);\n\n  useEffect(() => {\n    const rootElement = document.createElement(\"div\");\n    document.body.append(rootElement);\n    setRootElement(rootElement);\n    return () => {\n      rootElement.remove();\n      setRootElement(undefined);\n    };\n  }, []);\n\n  useBodyClassName(\"BottomPanelOpen\", { enabled: visible });\n\n  if (rootElement == null) {\n    return null;\n  }\n\n  return (\n    <Portal container={rootElement}>\n      <TransitionView style={styles.fill} enter={styles.overlayEnter} leave={styles.overlayLeave}>\n        {visible ? <View style={styles.overlay} /> : null}\n      </TransitionView>\n\n      <Suspendable fallback={<LoadingView color={backgroundColor.accented} delay={0} />}>\n        <TransitionView style={styles.fill} enter={styles.modalEnter} leave={styles.modalLeave}>\n          {visible ? (\n            <View ref={container} style={styles.container}>\n              <ScrollView\n                style={styles.modalContainer}\n                contentContainerStyle={styles.modalContentContainer}\n              >\n                <FocusTrap\n                  autoFocus={true}\n                  focusLock={true}\n                  returnFocus={returnFocus}\n                  onEscapeKey={() => {\n                    if (onPressClose != null) {\n                      onPressClose();\n                    }\n                  }}\n                  style={styles.trap}\n                >\n                  <View style={styles.modal}>{children}</View>\n\n                  {onPressClose != null ? (\n                    <Pressable onPress={onPressClose} style={styles.pressableOverlay} />\n                  ) : null}\n                </FocusTrap>\n              </ScrollView>\n            </View>\n          ) : null}\n        </TransitionView>\n      </Suspendable>\n    </Portal>\n  );\n};\n"],"names":["BACKGROUND_COLOR","styles","StyleSheet","commonStyles","backgroundColor","radii","shadows","BottomPanel","visible","onPressClose","children","returnFocus","rootElement","setRootElement","useState","container","useRef","useEffect","useBodyClassName","jsxs","Portal","jsx","TransitionView","View","Suspendable","LoadingView","ScrollView","FocusTrap","Pressable"],"mappings":"6ZAYA,MAAAA,EAAA,qBAEAC,EAAAC,EAAA,OAAA,CACA,KAAA,CACA,GAAAA,EAAA,mBACA,SAAA,WACA,kBAAA,WACA,WAAA,SACA,EACA,QAAA,CACA,GAAAA,EAAA,mBACA,gBAAAF,CACA,EACA,aAAA,CACA,mBAAA,CACA,KAAA,CAAA,QAAA,CAAA,CACA,EACA,kBAAA,QACA,wBAAA,aACA,EACA,aAAA,CACA,mBAAA,CACA,OAAA,CAAA,QAAA,CAAA,CACA,EACA,kBAAA,QACA,wBAAA,aACA,EACA,WAAA,CACA,mBAAA,CACA,KAAA,CACA,QAAA,EACA,UAAA,kBACA,CACA,EACA,kBAAA,QACA,wBAAA,aACA,EACA,WAAA,CACA,mBAAA,CACA,OAAA,CACA,QAAA,EACA,UAAA,kBACA,CACA,EACA,kBAAA,QACA,wBAAA,aACA,EACA,UAAA,CACA,GAAAE,EAAA,mBACA,mBAAA,QACA,mBAAA,WACA,EACA,eAAA,CACA,GAAAA,EAAA,kBACA,EACA,sBAAA,CACA,eAAA,WACA,SAAA,CACA,EACA,KAAA,CACA,GAAAC,EAAA,IACA,EACA,MAAA,CACA,gBAAAC,EAAA,SACA,oBAAAC,EAAA,CAAA,EACA,qBAAAA,EAAA,CAAA,EACA,UAAAC,EAAA,MACA,UAAA,SACA,EACA,iBAAA,CACA,GAAAH,EAAA,KACA,aAAA,EAEA,QAAA,EACA,MAAA,EACA,CACA,CAAA,EASAI,EAAA,CAAA,CAAA,QAAAC,EAAA,aAAAC,EAAA,SAAAC,EAAA,YAAAC,EAAA,MAAA,CACA,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAAA,SAAA,IAAA,EAAA,EACAC,EAAAC,SAAA,IAAA,EAcA,OAZAC,EAAAA,UAAA,IAAA,CACAL,MAAAA,EAAA,SAAA,cAAA,KAAA,EACA,gBAAA,KAAA,OAAAA,CAAA,EACAC,EAAAD,CAAA,EACA,IAAA,CACAA,EAAA,OAAA,EACAC,EAAA,MAAA,CAAA,CAEA,EAAA,CAAA,CAAA,EAEAK,EAAA,kBAAA,CAAA,QAAAV,CAAA,CAAA,EAEAI,GAAA,KACA,KAIAO,EAAA,KAAAC,EAAA,CAAA,UAAAR,EACA,SAAA,CAAAS,MAAAC,GAAA,MAAArB,EAAA,KAAA,MAAAA,EAAA,aAAA,MAAAA,EAAA,aACA,WAAAoB,EAAA,IAAAE,EAAA,CAAA,MAAAtB,EAAA,OAAA,CAAA,EAAA,KACA,EAEAoB,EAAA,IAAAG,EAAA,CAAA,SAAAH,EAAA,IAAAI,EAAA,CAAA,MAAArB,EAAA,SAAA,MAAA,CAAA,CAAA,EACA,SAAAiB,EAAAA,IAAAC,EAAA,CAAA,MAAArB,EAAA,KAAA,MAAAA,EAAA,WAAA,MAAAA,EAAA,WACA,SACAO,EAAAa,EAAA,IAAAE,EAAA,CAAA,IAAAR,EAAA,MAAAd,EAAA,UACA,SAAAoB,EAAA,IAAAK,EAAA,CACA,MAAAzB,EAAA,eACA,sBAAAA,EAAA,sBAEA,SAAAkB,EAAA,KAAAQ,EAAA,CACA,UAAA,GACA,UAAA,GACA,YAAAhB,EACA,YAAA,IAAA,CACAF,GAAA,MACAA,GAEA,EACA,MAAAR,EAAA,KAEA,SAAA,CAAAoB,EAAA,IAAAE,EAAA,CAAA,MAAAtB,EAAA,MAAA,SAAAS,EAAA,EAEAD,GAAA,KACAY,MAAAO,EAAA,CAAA,QAAAnB,EAAA,MAAAR,EAAA,gBAAA,CAAA,EACA,IAAA,CAAA,CACA,CAAA,CAAA,EAEA,EACA,IACA,CAAA,EACA,CACA,CAAA,CAAA,CAEA"}