{"version":3,"file":"FilesUploader-CoG0yY9R.js","sources":["../../../packages/shared-business/src/hooks/useFilesUploader.ts","../../../packages/shared-business/src/components/FileTile.tsx","../../../packages/shared-business/src/components/FilesUploader.tsx"],"sourcesContent":["import { Future, Result } from \"@swan-io/boxed\";\nimport { useCallback, useState } from \"react\";\nimport { SwanFile } from \"../utils/SwanFile\";\n\nexport type UploadFileInput<UploadOutput> = {\n  id: string;\n  upload: UploadOutput;\n  file: File;\n  onLoadStart: (event: ProgressEvent<XMLHttpRequestEventTarget>) => void;\n  onProgress: (event: ProgressEvent<XMLHttpRequestEventTarget>) => void;\n};\n\nexport type UploadOutputWithId<UploadOutput> = { id: string; upload: UploadOutput };\n\nexport type Config<UploadInput, UploadOutput, GenerateUploadError, UploadFileError> = {\n  initialFiles: SwanFile[];\n  // Takes a configuration and outputs the needed input for the actual upload\n  // It also provides an ID that's required to keep track of the file\n  generateUpload: (\n    config: UploadInput,\n  ) => Future<Result<UploadOutputWithId<UploadOutput>, GenerateUploadError>>;\n  // Effectively uploads the file\n  uploadFile: (config: UploadFileInput<UploadOutput>) => Future<Result<unknown, UploadFileError>>;\n  onError?: (error: GenerateUploadError | UploadFileError) => void;\n};\n\nexport const useFilesUploader = <UploadInput, UploadOutput, GenerateUploadError, UploadFileError>(\n  config: Config<UploadInput, UploadOutput, GenerateUploadError, UploadFileError>,\n) => {\n  const [files, setFiles] = useState(config.initialFiles);\n\n  const add = useCallback((fileToAdd: SwanFile) => {\n    setFiles(files => {\n      if (files.some(item => item.id === fileToAdd.id)) {\n        return files.map(item => (item.id === fileToAdd.id ? fileToAdd : item));\n      } else {\n        return [...files, fileToAdd];\n      }\n    });\n  }, []);\n\n  const upload = useCallback(\n    (uploadInput: UploadInput, file: File) => {\n      return config\n        .generateUpload(uploadInput)\n        .tapError(error => {\n          if (config.onError != undefined) {\n            config.onError(error);\n          }\n        })\n        .flatMapOk(({ upload, id }) => {\n          setFiles(files => [\n            ...files.filter(file => file.id !== id),\n            {\n              id,\n              statusInfo: { status: \"Uploading\", progress: 0 },\n              name: file.name,\n            },\n          ]);\n\n          const onProgress = (event: ProgressEvent<XMLHttpRequestEventTarget>) => {\n            setFiles(files =>\n              files.map(file => {\n                if (file.id !== id) {\n                  return file;\n                }\n                return {\n                  ...file,\n                  statusInfo: { status: \"Uploading\", progress: event.loaded / event.total },\n                };\n              }),\n            );\n          };\n\n          return config\n            .uploadFile({\n              id,\n              upload,\n              file,\n              onLoadStart: onProgress,\n              onProgress,\n            })\n            .tapOk(() => {\n              setFiles(files =>\n                files.map(file => {\n                  if (file.id !== id) {\n                    return file;\n                  }\n                  return {\n                    ...file,\n                    statusInfo: { status: \"Uploaded\" },\n                  };\n                }),\n              );\n            })\n            .tapError(error => {\n              if (config.onError != undefined) {\n                config.onError(error);\n              }\n              setFiles(files => files.filter(file => file.id !== id));\n            });\n        });\n    },\n    [config],\n  );\n\n  const remove = useCallback((id: string) => {\n    setFiles(files => files.filter(file => file.id !== id));\n  }, []);\n\n  return {\n    files,\n    upload,\n    remove,\n    add,\n  };\n};\n","import { Future } from \"@swan-io/boxed\";\nimport { Box } from \"@swan-io/lake/src/components/Box\";\nimport { Icon } from \"@swan-io/lake/src/components/Icon\";\nimport { LakeAlert } from \"@swan-io/lake/src/components/LakeAlert\";\nimport { LakeButton } from \"@swan-io/lake/src/components/LakeButton\";\nimport { LakeText } from \"@swan-io/lake/src/components/LakeText\";\nimport { LakeTooltip } from \"@swan-io/lake/src/components/LakeTooltip\";\nimport { Pressable } from \"@swan-io/lake/src/components/Pressable\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport { Tag } from \"@swan-io/lake/src/components/Tag\";\nimport { commonStyles } from \"@swan-io/lake/src/constants/commonStyles\";\nimport {\n  backgroundColor,\n  colors,\n  gray75,\n  shadows,\n  spacings,\n} from \"@swan-io/lake/src/constants/design\";\nimport { setClipboardText } from \"@swan-io/lake/src/utils/clipboard\";\nimport { getIconNameFromFilename } from \"@swan-io/lake/src/utils/file\";\nimport { isNotNullish, isNotNullishOrEmpty } from \"@swan-io/lake/src/utils/nullish\";\nimport { useCallback, useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport { SwanFile } from \"../utils/SwanFile\";\nimport { t } from \"../utils/i18n\";\n\nconst styles = StyleSheet.create({\n  base: {\n    backgroundColor: backgroundColor.accented,\n    borderRadius: 8,\n    boxShadow: shadows.tile,\n    overflow: \"hidden\",\n  },\n  content: {\n    height: 56,\n    paddingLeft: spacings[20],\n    paddingRight: spacings[8],\n  },\n  progressBar: {\n    flex: 1,\n    height: 4,\n    borderRadius: 2,\n    backgroundColor: gray75,\n  },\n  progress: {\n    height: 4,\n    transitionProperty: \"width\",\n    transitionDuration: \"300ms\",\n    transitionTimingFunction: \"ease-in-out\",\n    borderRadius: 2,\n    backgroundColor: colors.current[500],\n  },\n});\n\ntype Props = {\n  file: SwanFile;\n  showId?: boolean;\n  onRemove?: () => Future<unknown>;\n};\n\nexport const FileTile = ({\n  file: { id, statusInfo, name, url },\n  showId = false,\n  onRemove,\n}: Props) => {\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  const onPressRemove = useCallback(() => {\n    if (onRemove != undefined) {\n      setIsDeleting(true);\n      onRemove().tap(() => setIsDeleting(false));\n    }\n  }, [onRemove]);\n\n  const [visibleState, setVisibleState] = useState<\"copy\" | \"copied\">(\"copy\");\n\n  return (\n    <Box style={styles.base}>\n      <Box alignItems=\"center\" direction=\"row\" style={styles.content}>\n        {statusInfo.status === \"Uploading\" ? (\n          <>\n            <LakeText numberOfLines={1} color={colors.gray[700]}>\n              {t(\"fileTile.uploading\")}\n            </LakeText>\n\n            <Space width={20} />\n\n            <View role=\"progressbar\" style={styles.progressBar}>\n              <View style={[styles.progress, { width: `${statusInfo.progress * 100}%` }]} />\n            </View>\n          </>\n        ) : (\n          <>\n            <Tag\n              icon={getIconNameFromFilename(name)}\n              iconSize={20}\n              color={match(statusInfo)\n                .with({ status: P.union(\"Uploaded\", \"Pending\") }, () => \"shakespear\" as const)\n                .with({ status: \"Validated\" }, () => \"positive\" as const)\n                .with({ status: \"Refused\" }, () => \"negative\" as const)\n                .exhaustive()}\n            />\n\n            <Space width={16} />\n\n            <Box grow={1}>\n              <LakeText numberOfLines={1} color={colors.gray[700]} style={commonStyles.fill}>\n                {name}\n              </LakeText>\n\n              {showId ? (\n                <LakeTooltip\n                  describedBy=\"copy\"\n                  onHide={() => setVisibleState(\"copy\")}\n                  togglableOnFocus={true}\n                  content={\n                    visibleState === \"copy\"\n                      ? t(\"copyButton.copyTooltip\")\n                      : t(\"copyButton.copiedTooltip\")\n                  }\n                >\n                  <Pressable\n                    onPress={event => {\n                      event.stopPropagation();\n                      event.preventDefault();\n                      setClipboardText(id);\n                      setVisibleState(\"copied\");\n                    }}\n                  >\n                    <Box direction=\"row\" alignItems=\"center\">\n                      <LakeText numberOfLines={1} variant=\"smallRegular\">\n                        {t(\"fileTile.id\", { id })}\n                      </LakeText>\n\n                      <Space width={4} />\n                      <Icon size={14} name=\"copy-regular\" />\n                    </Box>\n                  </Pressable>\n                </LakeTooltip>\n              ) : null}\n            </Box>\n\n            <Space width={12} />\n\n            {isNotNullishOrEmpty(url) && (\n              <LakeButton\n                mode=\"tertiary\"\n                size=\"small\"\n                icon=\"open-filled\"\n                onPress={() => {\n                  window.open(url, \"_blank\");\n                }}\n                ariaLabel={t(\"common.open\")}\n              />\n            )}\n\n            {isNotNullish(onRemove) && (\n              <LakeButton\n                mode=\"tertiary\"\n                size=\"small\"\n                icon=\"delete-regular\"\n                color=\"negative\"\n                onPress={onPressRemove}\n                loading={isDeleting}\n                ariaLabel={t(\"common.remove\")}\n              />\n            )}\n          </>\n        )}\n      </Box>\n\n      {match(statusInfo)\n        .with({ status: \"Pending\" }, () => (\n          <LakeAlert anchored={true} title={t(\"fileTile.status.Pending\")} variant=\"info\" />\n        ))\n        .with({ status: \"Validated\" }, () => (\n          <LakeAlert anchored={true} title={t(\"fileTile.status.Validated\")} variant=\"success\" />\n        ))\n        .with({ status: \"Refused\" }, ({ reason }) => (\n          <LakeAlert anchored={true} title={t(\"fileTile.status.Refused\")} variant=\"error\">\n            {reason}\n          </LakeAlert>\n        ))\n        .otherwise(() => null)}\n    </Box>\n  );\n};\n","import { Future, Result } from \"@swan-io/boxed\";\nimport { Box } from \"@swan-io/lake/src/components/Box\";\nimport { IconName } from \"@swan-io/lake/src/components/Icon\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport {\n  ForwardedRef,\n  Fragment,\n  Ref,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n} from \"react\";\nimport { Config, useFilesUploader } from \"../hooks/useFilesUploader\";\nimport { SwanFile } from \"../utils/SwanFile\";\nimport { FileInput } from \"./FileInput\";\nimport { FileTile } from \"./FileTile\";\n\ntype Props<UploadInput, UploadOutput, GenerateUploadError, UploadFileError> = Config<\n  UploadInput,\n  UploadOutput,\n  GenerateUploadError,\n  UploadFileError\n> & {\n  getUploadConfig: (file: File) => UploadInput;\n  accept: string[];\n  maxSize: number;\n  icon: IconName;\n  formatAndSizeDescription?: string;\n  onRemoveFile?: (file: SwanFile) => Future<Result<unknown, unknown>>;\n  onChange?: (files: SwanFile[]) => void;\n  canUpload?: boolean;\n  showIds?: boolean;\n};\n\nexport type FilesUploaderRef = {\n  add: (file: SwanFile) => void;\n};\n\nconst FilesUploaderWithRef = <UploadInput, UploadOutput, GenerateUploadError, UploadFileError>(\n  {\n    maxSize,\n    accept,\n    icon,\n    getUploadConfig,\n    onRemoveFile,\n    onChange,\n    formatAndSizeDescription,\n    canUpload = true,\n    showIds = false,\n    ...config\n  }: Props<UploadInput, UploadOutput, GenerateUploadError, UploadFileError>,\n  ref: Ref<FilesUploaderRef>,\n) => {\n  const { files, upload, remove, add } = useFilesUploader(config);\n\n  // Keep the `onChange` callback as a ref to avoid running the effect\n  // every time the function updates\n  const onChangeRef = useRef(onChange);\n  onChangeRef.current = onChange;\n  const isFirstRender = useRef(true);\n\n  useImperativeHandle(ref, () => ({\n    add,\n  }));\n\n  useEffect(() => {\n    // Avoid calling `onChange` on first render\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    const onChange = onChangeRef.current;\n    if (onChange != undefined) {\n      onChange(files);\n    }\n  }, [files]);\n\n  return (\n    <Box>\n      {canUpload ? (\n        <>\n          <FileInput\n            layout=\"horizontal\"\n            onFiles={files => {\n              files.forEach(file => {\n                upload(getUploadConfig(file), file);\n              });\n            }}\n            accept={accept}\n            icon={icon}\n            description={formatAndSizeDescription}\n            maxSize={maxSize}\n          />\n\n          <Space height={12} />\n        </>\n      ) : null}\n\n      {files.map((file, index) => (\n        <Fragment key={file.id}>\n          {index > 0 ? <Space height={12} /> : null}\n\n          <FileTile\n            file={file}\n            showId={showIds}\n            onRemove={\n              onRemoveFile != undefined && file.statusInfo.status === \"Uploaded\"\n                ? () =>\n                    onRemoveFile(file).tapOk(() => {\n                      remove(file.id);\n                    })\n                : undefined\n            }\n          />\n        </Fragment>\n      ))}\n    </Box>\n  );\n};\n\nexport const FilesUploader = forwardRef(FilesUploaderWithRef) as <\n  UploadInput,\n  UploadOutput,\n  GenerateUploadError,\n  UploadFileError,\n>(\n  props: Props<UploadInput, UploadOutput, GenerateUploadError, UploadFileError> & {\n    ref?: ForwardedRef<FilesUploaderRef>;\n  },\n) => ReturnType<typeof FilesUploaderWithRef>;\n"],"names":["useFilesUploader","config","files","setFiles","useState","add","useCallback","fileToAdd","item","upload","uploadInput","file","error","id","onProgress","event","remove","styles","StyleSheet","backgroundColor","shadows","spacings","gray75","colors","FileTile","statusInfo","name","url","showId","onRemove","isDeleting","setIsDeleting","onPressRemove","visibleState","setVisibleState","jsxs","Box","jsx","Fragment","LakeText","t","Space","View","Tag","getIconNameFromFilename","match","P","commonStyles","LakeTooltip","Pressable","setClipboardText","Icon","isNotNullishOrEmpty","LakeButton","isNotNullish","LakeAlert","reason","FilesUploaderWithRef","maxSize","accept","icon","getUploadConfig","onRemoveFile","onChange","formatAndSizeDescription","canUpload","showIds","ref","onChangeRef","useRef","isFirstRender","useImperativeHandle","useEffect","FileInput","index","FilesUploader","forwardRef"],"mappings":"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"}