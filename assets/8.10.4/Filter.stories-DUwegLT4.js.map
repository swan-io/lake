{"version":3,"file":"Filter.stories-DUwegLT4.js","sources":["../../../packages/lake/src/components/FilterChooser.tsx","../../../packages/lake/src/components/Filters.tsx","../../../packages/lake/__stories__/Filter.stories.tsx"],"sourcesContent":["import { useRef } from \"react\";\nimport { Pressable, StyleSheet, View } from \"react-native\";\nimport { colors } from \"../constants/design\";\nimport { useDisclosure } from \"../hooks/useDisclosure\";\nimport { isNotNullishOrEmpty } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { FlatList } from \"./FlatList\";\nimport { Icon } from \"./Icon\";\nimport { LakeButton } from \"./LakeButton\";\nimport { LakeText } from \"./LakeText\";\nimport { Popover } from \"./Popover\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  selected: {\n    color: colors.gray[500],\n  },\n  list: {\n    paddingVertical: 20,\n    marginVertical: 4,\n    minWidth: 250,\n    overflow: \"hidden\",\n  },\n  item: {\n    display: \"flex\",\n    paddingHorizontal: 24,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingVertical: 8,\n  },\n  itemHovered: {\n    backgroundColor: colors.gray[50],\n  },\n  availableFiltersTitle: {\n    paddingHorizontal: 24,\n  },\n});\n\nexport function FilterChooser<FilterName extends string>({\n  filters,\n  openFilters,\n  label,\n  title,\n  availableFilters,\n  large = true,\n  onAddFilter,\n}: {\n  filters: Partial<Record<FilterName, unknown>>;\n  openFilters: FilterName[];\n  label: string;\n  title?: string;\n  availableFilters: { label: string; name: FilterName }[];\n  large?: boolean;\n  onAddFilter: (filterName: FilterName) => void;\n}) {\n  const inputRef = useRef<View>(null);\n  const [visible, { close, toggle }] = useDisclosure(false);\n\n  return (\n    <>\n      <Box direction=\"row\" justifyContent=\"start\" alignItems=\"center\">\n        <LakeButton\n          size=\"small\"\n          mode=\"secondary\"\n          color=\"gray\"\n          onPress={toggle}\n          ref={inputRef}\n          icon={large ? \"chevron-down-filled\" : \"filter-filled\"}\n          iconPosition=\"end\"\n          ariaLabel={label}\n        >\n          {large ? label : null}\n        </LakeButton>\n      </Box>\n\n      <Popover\n        role=\"listbox\"\n        matchReferenceMinWidth={true}\n        onDismiss={close}\n        referenceRef={inputRef}\n        returnFocus={false}\n        visible={visible}\n      >\n        <View style={styles.list}>\n          {isNotNullishOrEmpty(title) ? (\n            <>\n              <LakeText style={styles.availableFiltersTitle}>{title}</LakeText>\n              <Space height={8} />\n            </>\n          ) : null}\n\n          <FlatList\n            role=\"list\"\n            data={availableFilters}\n            keyExtractor={(_, index) => `filter-item-${index}`}\n            renderItem={({ item }) => {\n              const isSet = Boolean(filters[item.name]) || openFilters.includes(item.name);\n              return (\n                <Pressable\n                  style={({ hovered }) => [styles.item, hovered && styles.itemHovered]}\n                  role=\"button\"\n                  disabled={isSet}\n                  onPress={() => {\n                    onAddFilter(item.name);\n                    close();\n                  }}\n                >\n                  <LakeText variant=\"smallRegular\" style={isSet && styles.selected}>\n                    {item.label}\n                  </LakeText>\n\n                  {isSet && <Icon color={colors.positive[500]} name=\"checkmark-filled\" size={14} />}\n                </Pressable>\n              );\n            }}\n          />\n        </View>\n      </Popover>\n    </>\n  );\n}\n","import {\n  DateFormat,\n  DatePickerDate,\n  DatePickerModal,\n} from \"@swan-io/shared-business/src/components/DatePicker\";\nimport { ValidatorResult, useForm } from \"@swan-io/use-form\";\nimport dayjs from \"dayjs\";\nimport { forwardRef, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { Pressable, StyleSheet, Text, View } from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport { Simplify } from \"type-fest\";\nimport { colors, shadows, spacings } from \"../constants/design\";\nimport { useDisclosure } from \"../hooks/useDisclosure\";\nimport { useMergeRefs } from \"../hooks/useMergeRefs\";\nimport { usePreviousValue } from \"../hooks/usePreviousValue\";\nimport { isNotNullish } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { FlatList } from \"./FlatList\";\nimport { Icon } from \"./Icon\";\nimport { LakeButton } from \"./LakeButton\";\nimport { LakeCheckbox } from \"./LakeCheckbox\";\nimport { LakeLabel } from \"./LakeLabel\";\nimport { LakeRadio } from \"./LakeRadio\";\nimport { LakeTextInput } from \"./LakeTextInput\";\nimport { Popover } from \"./Popover\";\nimport { Space } from \"./Space\";\nimport { Stack } from \"./Stack\";\nimport { Tag } from \"./Tag\";\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingRight: 12,\n    paddingBottom: 8,\n  },\n  shadowed: {\n    position: \"absolute\",\n    opacity: 0,\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 4,\n    boxShadow: shadows.tile,\n    transitionDuration: \"150ms\",\n    transitionProperty: \"opacity\",\n  },\n  hovered: {\n    opacity: 1,\n  },\n  dropdown: {\n    maxHeight: 400,\n    minWidth: 200,\n  },\n  itemHovered: {\n    backgroundColor: colors.gray[50],\n  },\n  content: {\n    paddingVertical: 12,\n  },\n  inputContent: {\n    padding: 24,\n  },\n  radio: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    height: 32,\n    paddingHorizontal: 24,\n  },\n  itemLabel: {\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n  },\n  input: {\n    minWidth: 200,\n  },\n  value: {\n    maxWidth: 130,\n    whiteSpace: \"nowrap\",\n  },\n  buttonContainer: {\n    paddingHorizontal: spacings[24],\n  },\n});\n\ntype Item<T> = {\n  label: string;\n  value: T;\n};\n\ntype TagProps = {\n  isActive: boolean;\n  label: string;\n  value?: string;\n  onPress: () => void;\n  onPressRemove: () => void;\n};\n\nconst FilterTag = forwardRef<View, TagProps>(\n  ({ onPress, onPressRemove, label, value = \"\", isActive }, forwardRef) => {\n    const ref = useRef<View>(null);\n    const mergedRef = useMergeRefs(ref, forwardRef);\n\n    return (\n      <Pressable ref={mergedRef} onPress={onPress}>\n        {({ hovered }) => (\n          <>\n            <View style={[styles.shadowed, hovered && styles.hovered]} />\n\n            <Tag label={label} color=\"current\" onPressRemove={onPressRemove}>\n              <Box direction=\"row\" alignItems=\"center\">\n                <Text numberOfLines={1} style={styles.value}>\n                  {value}\n                </Text>\n\n                <Space width={4} />\n\n                <Icon\n                  color={colors.current.primary}\n                  name={isActive ? \"chevron-up-filled\" : \"chevron-down-filled\"}\n                  size={16}\n                />\n              </Box>\n            </Tag>\n          </>\n        )}\n      </Pressable>\n    );\n  },\n);\n\ntype FilterRadioProps<T> = {\n  autoOpen?: boolean;\n  items: Item<T>[];\n  width?: number;\n  label: string;\n  value: T | undefined;\n  onPressRemove: () => void;\n  onValueChange: (value: T | undefined) => void;\n};\n\nfunction FilterRadio<T>({\n  label,\n  items,\n  width,\n  value,\n  onValueChange,\n  onPressRemove,\n  autoOpen = false,\n}: FilterRadioProps<T>) {\n  const inputRef = useRef<View>(null);\n  const [visible, { close, toggle }] = useDisclosure(autoOpen);\n  const currentValue = useMemo(() => items.find(i => i.value === value), [items, value]);\n\n  return (\n    <View style={styles.container}>\n      <FilterTag\n        label={label}\n        onPress={toggle}\n        ref={inputRef}\n        onPressRemove={onPressRemove}\n        isActive={visible}\n        value={currentValue?.label}\n      />\n\n      <Popover\n        role=\"listbox\"\n        matchReferenceWidth={false}\n        onDismiss={close}\n        referenceRef={inputRef}\n        returnFocus={false}\n        visible={visible}\n      >\n        <View style={[styles.dropdown, { width }]}>\n          <FlatList\n            role=\"list\"\n            data={items}\n            contentContainerStyle={styles.content}\n            keyExtractor={(_, index) => `filter-item-${index}`}\n            renderItem={({ item }) => {\n              const isSelected = value === item.value;\n\n              return (\n                <Pressable\n                  role=\"radio\"\n                  aria-checked={isSelected}\n                  style={({ hovered }) => [styles.radio, hovered && styles.itemHovered]}\n                  onPress={() => {\n                    onValueChange(item.value);\n                    close();\n                  }}\n                >\n                  <LakeRadio value={isSelected} />\n                  <Space width={12} />\n                  <Text style={styles.itemLabel}>{item.label}</Text>\n                </Pressable>\n              );\n            }}\n          />\n        </View>\n      </Popover>\n    </View>\n  );\n}\n\ntype FilterCheckboxProps<T> = {\n  label: string;\n  items: Item<T>[];\n  width?: number;\n  onValueChange: (value: T[] | undefined) => void;\n  value: T[] | undefined;\n  onPressRemove: () => void;\n  autoOpen?: boolean;\n  applyButtonLabel: string;\n  checkAllLabel?: string;\n};\n\ntype CheckAllItem = {\n  label: string;\n  checked: boolean | \"mixed\";\n};\n\nfunction FilterCheckbox<T>({\n  label,\n  items,\n  width,\n  checkAllLabel,\n  value,\n  onValueChange,\n  applyButtonLabel,\n  onPressRemove,\n  autoOpen = false,\n}: FilterCheckboxProps<T>) {\n  const inputRef = useRef<View>(null);\n  const [visible, { close, toggle }] = useDisclosure(autoOpen);\n  const [localValue, setLocalValue] = useState(value);\n\n  const values = useMemo(() => new Set(localValue), [localValue]);\n  const currentValue = useMemo(() => items.filter(item => values.has(item.value)), [items, values]);\n\n  const allChecked = checkAllLabel != null && values.size === items.length;\n\n  const listItems = useMemo(() => {\n    if (checkAllLabel == null) {\n      return items;\n    }\n    const checked: CheckAllItem[\"checked\"] =\n      values.size === 0 ? false : values.size === items.length ? true : \"mixed\";\n    const checkAllItem: CheckAllItem = {\n      label: checkAllLabel,\n      checked,\n    };\n\n    return [checkAllItem, ...items];\n  }, [items, checkAllLabel, values]);\n\n  const save = useCallback(() => {\n    onValueChange(localValue);\n    close();\n  }, [onValueChange, localValue, close]);\n\n  useEffect(() => {\n    if (!visible) {\n      setLocalValue(value);\n    }\n  }, [visible, value]);\n\n  return (\n    <View style={styles.container}>\n      <FilterTag\n        label={label}\n        onPress={toggle}\n        ref={inputRef}\n        onPressRemove={onPressRemove}\n        isActive={visible}\n        value={allChecked ? checkAllLabel : currentValue.map(item => item.label).join(\", \")}\n      />\n\n      <Popover\n        role=\"listbox\"\n        matchReferenceWidth={false}\n        onDismiss={close}\n        referenceRef={inputRef}\n        returnFocus={false}\n        visible={visible}\n      >\n        <View style={[styles.dropdown, { width }]}>\n          <FlatList\n            role=\"list\"\n            data={listItems}\n            contentContainerStyle={styles.content}\n            keyExtractor={(_, index) => `filter-item-${index}`}\n            renderItem={({ item }) => {\n              const isSelected = match<Item<unknown> | CheckAllItem>(item)\n                .with({ checked: P.any }, ({ checked }) => checked)\n                .with({ value: P.any }, ({ value }) => values.has(value as T))\n                .exhaustive();\n\n              const onPress = match<Item<unknown> | CheckAllItem>(item)\n                // Check all item\n                .with({ checked: P.any }, ({ checked }) => () => {\n                  if (checked === true) {\n                    setLocalValue(undefined);\n                  } else {\n                    setLocalValue(items.map(item => item.value));\n                  }\n                })\n                // Regular item\n                .with({ value: P.any }, ({ value }) => () => {\n                  const nextValues = new Set([...values]);\n                  if (isSelected === true) {\n                    nextValues.delete(value as T);\n                  } else {\n                    nextValues.add(value as T);\n                  }\n                  if (nextValues.size === 0) {\n                    setLocalValue(undefined);\n                  } else {\n                    setLocalValue([...nextValues]);\n                  }\n                })\n                .exhaustive();\n\n              return (\n                <Pressable\n                  role=\"radio\"\n                  aria-checked={isSelected}\n                  style={({ hovered }) => [styles.radio, hovered && styles.itemHovered]}\n                  onPress={onPress}\n                >\n                  <LakeCheckbox value={isSelected} />\n                  <Space width={12} />\n                  <Text style={styles.itemLabel}>{item.label}</Text>\n                </Pressable>\n              );\n            }}\n          />\n\n          <Space height={8} />\n\n          <View style={styles.buttonContainer}>\n            <LakeButton color=\"current\" onPress={save}>\n              {applyButtonLabel}\n            </LakeButton>\n          </View>\n\n          <Space height={24} />\n        </View>\n      </Popover>\n    </View>\n  );\n}\n\ntype FilterDateProps = {\n  label: string;\n  noValueText: string;\n  cancelText: string;\n  submitText: string;\n  dateFormat: DateFormat;\n  isSelectable?: (date: DatePickerDate) => boolean;\n  validate?: (val: string) => ValidatorResult;\n  initialValue?: string;\n  onSave: (val: string) => void;\n  onPressRemove: () => void;\n  autoOpen?: boolean;\n};\n\nfunction FilterDate({\n  label,\n  initialValue,\n  noValueText,\n  cancelText,\n  submitText,\n  dateFormat,\n  isSelectable,\n  validate,\n  onSave,\n  onPressRemove,\n  autoOpen = false,\n}: FilterDateProps) {\n  const inputRef = useRef<View>(null);\n  const [visible, { close, toggle }] = useDisclosure(autoOpen);\n\n  const value = useMemo(\n    () => (isNotNullish(initialValue) ? dayjs(initialValue).format(dateFormat) : \"\"),\n    [initialValue, dateFormat],\n  );\n\n  return (\n    <View style={styles.container}>\n      <FilterTag\n        label={label}\n        onPress={toggle}\n        ref={inputRef}\n        onPressRemove={onPressRemove}\n        isActive={visible}\n        value={isNotNullish(initialValue) ? dayjs(initialValue).format(dateFormat) : noValueText}\n      />\n\n      <DatePickerModal\n        visible={visible}\n        format={dateFormat}\n        firstWeekDay=\"monday\"\n        label={label}\n        cancelLabel={cancelText}\n        confirmLabel={submitText}\n        value={value}\n        isSelectable={isSelectable}\n        validate={validate}\n        onChange={value => {\n          const formattedValue = dayjs(value, dateFormat, true).toJSON();\n          onSave(formattedValue);\n        }}\n        onDismiss={close}\n      />\n    </View>\n  );\n}\n\ntype FilterInputProps = {\n  label: string;\n  noValueText: string;\n  submitText: string;\n  validate?: (val: string) => ValidatorResult;\n  placeholder?: string;\n  initialValue?: string;\n  onSave: (val: string) => void;\n  onPressRemove: () => void;\n  autoOpen?: boolean;\n};\n\nfunction FilterInput({\n  label,\n  initialValue = \"\",\n  noValueText,\n  submitText,\n  autoOpen = false,\n  placeholder,\n  validate,\n  onSave,\n  onPressRemove,\n}: FilterInputProps) {\n  const inputRef = useRef<View>(null);\n  const [visible, { close, toggle }] = useDisclosure(autoOpen);\n  const [value, setValue] = useState(initialValue);\n\n  const { Field, submitForm } = useForm<{ input: string }>({\n    input: {\n      initialValue,\n      validate,\n    },\n  });\n\n  const onSubmit = () => {\n    submitForm({\n      onSuccess: ({ input }) => {\n        if (input.isSome()) {\n          setValue(input.get());\n          onSave(input.get());\n          close();\n        }\n      },\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <FilterTag\n        label={label}\n        onPress={toggle}\n        ref={inputRef}\n        onPressRemove={onPressRemove}\n        isActive={visible}\n        value={value === \"\" ? noValueText : value}\n      />\n\n      <Popover\n        role=\"listbox\"\n        matchReferenceWidth={false}\n        onDismiss={close}\n        referenceRef={inputRef}\n        returnFocus={false}\n        visible={visible}\n      >\n        <View style={[styles.dropdown, styles.inputContent]}>\n          <Field name=\"input\">\n            {({ error, value, onChange }) => (\n              <LakeLabel\n                label={label}\n                render={id => (\n                  <LakeTextInput\n                    id={id}\n                    error={error}\n                    style={styles.input}\n                    placeholder={placeholder}\n                    value={value}\n                    onChangeText={onChange}\n                    onSubmitEditing={onSubmit}\n                  />\n                )}\n              />\n            )}\n          </Field>\n\n          <LakeButton size=\"small\" color=\"current\" onPress={onSubmit}>\n            {submitText}\n          </LakeButton>\n        </View>\n      </Popover>\n    </View>\n  );\n}\n\ntype FilterBooleanTagProps = {\n  children: string;\n  onAdd: () => void;\n  onPressRemove: () => void;\n};\n\nfunction FilterBooleanTag({ children, onAdd, onPressRemove }: FilterBooleanTagProps) {\n  useEffect(onAdd, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Tag color=\"current\" onPressRemove={onPressRemove}>\n      {children}\n    </Tag>\n  );\n}\n\nexport type FilterCheckboxDef<T> = {\n  type: \"checkbox\";\n  label: string;\n  items: Item<T>[];\n  width?: number;\n  submitText: string;\n  checkAllLabel?: string;\n};\n\nexport type FilterRadioDef<T> = {\n  type: \"radio\";\n  label: string;\n  items: Item<T>[];\n  width?: number;\n};\n\nexport type FilterDateDef<Values = unknown> = {\n  type: \"date\";\n  label: string;\n  cancelText: string;\n  submitText: string;\n  noValueText: string;\n  dateFormat: DateFormat;\n  isSelectable?: (date: DatePickerDate, filters: Values) => boolean;\n  validate?: (value: string, filters: Values) => ValidatorResult;\n};\n\nexport type FilterInputDef = {\n  type: \"input\";\n  label: string;\n  submitText: string;\n  noValueText: string;\n  placeholder?: string;\n  validate?: (value: string) => ValidatorResult;\n};\n\nexport type FilterBooleanDef = {\n  type: \"boolean\";\n  label: string;\n};\n\ntype Filter<T> =\n  | FilterCheckboxDef<T>\n  | FilterRadioDef<T>\n  | FilterDateDef\n  | FilterInputDef\n  | FilterBooleanDef;\n\ntype ExtractFilterValue<T extends Filter<unknown>> = T extends { type: \"checkbox\" }\n  ? T[\"items\"][number][\"value\"][] | undefined\n  : T extends { type: \"radio\" }\n    ? T[\"items\"][number][\"value\"] | undefined\n    : T extends { type: \"boolean\" }\n      ? boolean | undefined\n      : string | undefined;\n\nconst getFilterValue = <T extends Filter<unknown>[\"type\"]>(\n  _type: T,\n  filters: FiltersState<FiltersDefinition>,\n  name: string,\n) => filters[name] as ExtractFilterValue<Extract<Filter<unknown>, { type: T }>>;\n\ntype FiltersDefinition = Record<string, Filter<unknown>>;\n\nexport type FiltersState<T extends FiltersDefinition> = Simplify<{\n  [K in keyof T]: Simplify<ExtractFilterValue<T[K]>>;\n}>;\n\ntype FiltersStackProps<\n  Definition extends FiltersDefinition,\n  State extends FiltersState<Definition> = FiltersState<Definition>,\n> = {\n  definition: Definition;\n  filters: State;\n  openedFilters: (keyof Definition)[];\n  onChangeOpened: (value: (keyof Definition)[]) => void;\n  onChangeFilters: (value: State) => void;\n};\n\nexport const FiltersStack = <T extends FiltersDefinition>({\n  filters,\n  openedFilters,\n  definition,\n  onChangeOpened,\n  onChangeFilters,\n}: FiltersStackProps<T>) => {\n  const previousOpened = usePreviousValue(openedFilters);\n  const lastOpenedFilter =\n    openedFilters.length > previousOpened.length\n      ? openedFilters[openedFilters.length - 1]\n      : undefined;\n\n  if (openedFilters.length === 0) {\n    return null;\n  }\n\n  return (\n    <Stack direction=\"row\" wrap=\"wrap\">\n      {openedFilters.map(filterName => {\n        const filterDefinition = definition[filterName];\n\n        if (typeof filterName !== \"string\" || filterDefinition == null) {\n          return null;\n        }\n\n        return (\n          <View key={filterName}>\n            {match<Filter<unknown>>(filterDefinition)\n              .with({ type: \"radio\" }, ({ type, label, items, width }) => (\n                <FilterRadio\n                  label={label}\n                  items={items}\n                  width={width}\n                  autoOpen={lastOpenedFilter === filterName}\n                  onPressRemove={() => {\n                    onChangeFilters({ ...filters, [filterName]: undefined });\n                    onChangeOpened(openedFilters.filter(f => f !== filterName));\n                  }}\n                  value={getFilterValue(type, filters, filterName)}\n                  onValueChange={value => onChangeFilters({ ...filters, [filterName]: value })}\n                />\n              ))\n              .with(\n                { type: \"checkbox\" },\n                ({ type, label, items, width, checkAllLabel, submitText }) => (\n                  <FilterCheckbox\n                    label={label}\n                    items={items}\n                    width={width}\n                    checkAllLabel={checkAllLabel}\n                    autoOpen={lastOpenedFilter === filterName}\n                    applyButtonLabel={submitText}\n                    value={getFilterValue(type, filters, filterName)}\n                    onValueChange={value => onChangeFilters({ ...filters, [filterName]: value })}\n                    onPressRemove={() => {\n                      onChangeFilters({ ...filters, [filterName]: undefined });\n                      onChangeOpened(openedFilters.filter(f => f !== filterName));\n                    }}\n                  />\n                ),\n              )\n              .with(\n                { type: \"date\" },\n                ({\n                  type,\n                  label,\n                  noValueText,\n                  cancelText,\n                  submitText,\n                  dateFormat,\n                  isSelectable,\n                  validate,\n                }) => (\n                  <FilterDate\n                    label={label}\n                    noValueText={noValueText}\n                    cancelText={cancelText}\n                    submitText={submitText}\n                    dateFormat={dateFormat}\n                    autoOpen={lastOpenedFilter === filterName}\n                    isSelectable={isSelectable ? date => isSelectable(date, filters) : undefined}\n                    validate={validate ? value => validate(value, filters) : undefined}\n                    initialValue={getFilterValue(type, filters, filterName)}\n                    onSave={value => onChangeFilters({ ...filters, [filterName]: value })}\n                    onPressRemove={() => {\n                      onChangeFilters({ ...filters, [filterName]: undefined });\n                      onChangeOpened(openedFilters.filter(f => f !== filterName));\n                    }}\n                  />\n                ),\n              )\n              .with(\n                { type: \"input\" },\n                ({ type, label, placeholder, noValueText, submitText, validate }) => (\n                  <FilterInput\n                    label={label}\n                    placeholder={placeholder}\n                    noValueText={noValueText}\n                    submitText={submitText}\n                    autoOpen={lastOpenedFilter === filterName}\n                    validate={validate}\n                    initialValue={getFilterValue(type, filters, filterName)}\n                    onSave={value => onChangeFilters({ ...filters, [filterName]: value })}\n                    onPressRemove={() => {\n                      onChangeFilters({ ...filters, [filterName]: undefined });\n                      onChangeOpened(openedFilters.filter(f => f !== filterName));\n                    }}\n                  />\n                ),\n              )\n              .with({ type: \"boolean\" }, ({ label }) => (\n                <FilterBooleanTag\n                  onAdd={() => {\n                    onChangeFilters({ ...filters, [filterName]: true });\n                  }}\n                  onPressRemove={() => {\n                    onChangeFilters({ ...filters, [filterName]: undefined });\n                    onChangeOpened(openedFilters.filter(f => f !== filterName));\n                  }}\n                >\n                  {label}\n                </FilterBooleanTag>\n              ))\n              .exhaustive()}\n          </View>\n        );\n      })}\n    </Stack>\n  );\n};\n","import { Meta } from \"@storybook/react\";\nimport { useState } from \"react\";\nimport { View } from \"react-native\";\nimport { FilterChooser } from \"../src/components/FilterChooser\";\nimport {\n  FilterCheckboxDef,\n  FilterDateDef,\n  FilterInputDef,\n  FilterRadioDef,\n  FiltersStack,\n  FiltersState,\n} from \"../src/components/Filters\";\nimport { Space } from \"../src/components/Space\";\nimport { WithCurrentColor } from \"../src/components/WithCurrentColor\";\nimport { StoryBlock } from \"./_StoriesComponents\";\n\nconst mode: FilterRadioDef<\"QES\" | \"Expert\"> = {\n  type: \"radio\",\n  label: \"Mode\",\n  items: [\n    { label: \"QES\", value: \"QES\" },\n    { label: \"Expert\", value: \"Expert\" },\n  ],\n};\n\nconst status: FilterCheckboxDef<\n  \"Accepted\" | \"Canceled\" | \"Failed\" | \"Expired\" | \"CustomerRefused\"\n> = {\n  type: \"checkbox\",\n  label: \"Status\",\n  submitText: \"Apply\",\n  items: [\n    { label: \"Accepted\", value: \"Accepted\" },\n    { label: \"Canceled\", value: \"Canceled\" },\n    { label: \"Failed\", value: \"Failed\" },\n    { label: \"Expired\", value: \"Expired\" },\n    { label: \"CustomerRefused\", value: \"CustomerRefused\" },\n  ],\n};\n\nconst startDate: FilterDateDef = {\n  type: \"date\",\n  label: \"Start Date\",\n  cancelText: \"Cancel\",\n  submitText: \"Save\",\n  noValueText: \"None\",\n  dateFormat: \"DD/MM/YYYY\",\n};\n\nconst resourceId: FilterInputDef = {\n  type: \"input\",\n  label: \"Resource ID\",\n  noValueText: \"None\",\n  submitText: \"Save\",\n  placeholder: \"Placeholder...\",\n};\n\nconst definition = {\n  mode,\n  status,\n  startDate,\n  resourceId,\n};\n\ntype State = FiltersState<typeof definition>;\n\nconst availableFilters: { name: keyof State; label: string }[] = [\n  {\n    name: \"mode\",\n    label: \"Mode\",\n  },\n  {\n    name: \"status\",\n    label: \"Status\",\n  },\n  {\n    name: \"startDate\",\n    label: \"Start date\",\n  },\n  {\n    name: \"resourceId\",\n    label: \"Ressource ID\",\n  },\n];\n\nexport default {\n  title: \"Forms/Filter\",\n  component: FilterChooser,\n} as Meta<typeof FilterChooser>;\n\nexport const All = () => {\n  const [openFilters, setOpenFilters] = useState<(keyof State)[]>([]);\n\n  const [filters, setFilters] = useState<State>({\n    mode: undefined,\n    status: undefined,\n    resourceId: undefined,\n    startDate: undefined,\n  });\n\n  return (\n    <StoryBlock title=\"Filter\">\n      <WithCurrentColor variant=\"live\">\n        <View>\n          <FilterChooser\n            filters={filters}\n            label=\"Choose filters\"\n            title=\"Filters\"\n            onAddFilter={filter => setOpenFilters(filters => [...filters, filter])}\n            availableFilters={availableFilters}\n            openFilters={openFilters}\n          />\n\n          <Space height={8} />\n\n          <FiltersStack\n            definition={definition}\n            filters={filters}\n            openedFilters={openFilters}\n            onChangeFilters={setFilters}\n            onChangeOpened={setOpenFilters}\n          />\n        </View>\n      </WithCurrentColor>\n    </StoryBlock>\n  );\n};\n"],"names":["styles","StyleSheet","colors","FilterChooser","filters","openFilters","label","title","availableFilters","large","onAddFilter","inputRef","useRef","visible","close","toggle","useDisclosure","jsxs","Fragment","jsx","Box","LakeButton","Popover","View","isNotNullishOrEmpty","LakeText","Space","FlatList","_","index","item","isSet","Pressable","hovered","Icon","shadows","spacings","FilterTag","forwardRef","onPress","onPressRemove","value","isActive","ref","mergedRef","useMergeRefs","Tag","Text","FilterRadio","items","width","onValueChange","autoOpen","currentValue","useMemo","i","isSelected","LakeRadio","FilterCheckbox","checkAllLabel","applyButtonLabel","localValue","setLocalValue","useState","values","allChecked","listItems","checked","save","useCallback","useEffect","match","P","nextValues","LakeCheckbox","FilterDate","initialValue","noValueText","cancelText","submitText","dateFormat","isSelectable","validate","onSave","isNotNullish","dayjs","DatePickerModal","formattedValue","FilterInput","placeholder","setValue","Field","submitForm","useForm","onSubmit","input","error","onChange","LakeLabel","id","LakeTextInput","FilterBooleanTag","children","onAdd","getFilterValue","_type","name","FiltersStack","openedFilters","definition","onChangeOpened","onChangeFilters","previousOpened","usePreviousValue","lastOpenedFilter","Stack","filterName","filterDefinition","type","f","date","mode","status","startDate","resourceId","Filter_stories","component","All","setOpenFilters","setFilters","undefined","StoryBlock","WithCurrentColor","filter"],"mappings":"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"}