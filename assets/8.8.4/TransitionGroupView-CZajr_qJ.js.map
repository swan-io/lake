{"version":3,"file":"TransitionGroupView-CZajr_qJ.js","sources":["../../../packages/lake/src/components/TransitionGroupView.tsx"],"sourcesContent":["import { Array, Option } from \"@swan-io/boxed\";\nimport { Children, ReactNode, useMemo, useReducer, useRef } from \"react\";\nimport { AnimationStyles, StyleProp, View, ViewStyle } from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport { usePreviousValue } from \"../hooks/usePreviousValue\";\nimport { TransitionView } from \"./TransitionView\";\n\ntype Props = {\n  enter?: AnimationStyles;\n  leave?: AnimationStyles;\n  style?: StyleProp<ViewStyle>;\n  childStyle?: StyleProp<ViewStyle>;\n  children: ReactNode;\n};\n\nexport const TransitionGroupView = ({ children, enter, leave, style, childStyle }: Props) => {\n  const leavingKeysAndIndicesRef = useRef<\n    {\n      index: number;\n      key: string;\n    }[]\n  >([]);\n  const [, forceUpdate] = useReducer(() => [], []);\n\n  const onLeave = (key: string) => {\n    leavingKeysAndIndicesRef.current = leavingKeysAndIndicesRef.current.filter(\n      leavingKey => leavingKey.key !== key,\n    );\n\n    forceUpdate();\n  };\n\n  const cleanedUpChildren = useMemo(\n    () =>\n      Array.filterMap(Children.toArray(children), child =>\n        match(child)\n          .with({ key: P.string }, child => Option.Some({ key: child.key, child }))\n          .otherwise(() => Option.None()),\n      ),\n    [children],\n  );\n\n  const previousChildren = usePreviousValue(cleanedUpChildren);\n\n  const newKeys = new Set(cleanedUpChildren.map(item => item.key));\n  leavingKeysAndIndicesRef.current = [\n    ...leavingKeysAndIndicesRef.current,\n    ...Array.filterMap(\n      previousChildren.map((item, index) => ({ item, index })),\n      ({ item, index }) =>\n        newKeys.has(item.key) ||\n        leavingKeysAndIndicesRef.current.find(prev => prev.key === item.key)\n          ? Option.None()\n          : Option.Some({ key: item.key, index }),\n    ),\n  ];\n\n  const childrenToRender: { key: string; originalIndex: number; child: ReactNode }[] = [];\n  cleanedUpChildren.forEach((item, index) => {\n    childrenToRender.push({ key: item.key, originalIndex: index, child: item.child });\n  });\n\n  leavingKeysAndIndicesRef.current.forEach(({ index, key }) => {\n    const closerIndex = childrenToRender.findIndex(item => item.originalIndex === index);\n    if (closerIndex === -1) {\n      childrenToRender.push({ key, originalIndex: index, child: null });\n    } else {\n      childrenToRender.splice(closerIndex, 0, { key, originalIndex: index, child: null });\n    }\n  });\n\n  return (\n    <View style={style}>\n      {childrenToRender.map(({ key, child }) => {\n        return (\n          <TransitionView\n            enter={enter}\n            leave={leave}\n            style={childStyle}\n            onLeave={() => onLeave(key)}\n            key={key}\n          >\n            {child}\n          </TransitionView>\n        );\n      })}\n    </View>\n  );\n};\n"],"names":["TransitionGroupView","children","enter","leave","style","childStyle","leavingKeysAndIndicesRef","useRef","forceUpdate","useReducer","onLeave","key","leavingKey","cleanedUpChildren","useMemo","Array","Children","child","match","P","Option","previousChildren","usePreviousValue","newKeys","item","index","prev","childrenToRender","closerIndex","jsx","View","TransitionView"],"mappings":"2KAeA,MAAAA,EAAA,CAAA,CAAA,SAAAC,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAAAC,EAAA,WAAAC,KAAA,CACA,MAAAC,EAAAC,SAKA,CAAA,CAAA,EACA,CAAA,CAAAC,CAAA,EAAAC,EAAAA,WAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAEAC,EAAAC,GAAA,CACAL,EAAA,QAAAA,EAAA,QAAA,OACAM,GAAAA,EAAA,MAAAD,CAAA,EAGAH,GAAA,EAGAK,EAAAC,EAAA,QACA,IACAC,EAAA,UAAAC,EAAA,SAAA,QAAAf,CAAA,EAAAgB,GACAC,EAAAD,CAAA,EACA,KAAA,CAAA,IAAAE,EAAA,QAAAF,GAAAG,EAAA,KAAA,CAAA,IAAAH,EAAA,IAAA,MAAAA,EAAA,CAAA,EACA,UAAA,IAAAG,EAAA,KAAA,CAAA,CACA,EACA,CAAAnB,CAAA,CAAA,EAGAoB,EAAAC,EAAAT,CAAA,EAEAU,EAAA,IAAA,IAAAV,EAAA,IAAAW,GAAAA,EAAA,GAAA,CAAA,EACAlB,EAAA,QAAA,CACA,GAAAA,EAAA,QACA,GAAAS,EAAA,UACAM,EAAA,IAAA,CAAAG,EAAAC,KAAA,CAAA,KAAAD,EAAA,MAAAC,GAAA,EACA,CAAA,CAAA,KAAAD,EAAA,MAAAC,KACAF,EAAA,IAAAC,EAAA,GAAA,GACAlB,EAAA,QAAA,KAAAoB,GAAAA,EAAA,MAAAF,EAAA,GAAA,EACAJ,EAAA,KAAA,EACAA,EAAA,KAAA,CAAA,IAAAI,EAAA,IAAA,MAAAC,EAAA,CACA,CAAA,EAGA,MAAAE,EAAA,CAAA,EACA,OAAAd,EAAA,QAAA,CAAAW,EAAAC,IAAA,CACAE,EAAA,KAAA,CAAA,IAAAH,EAAA,IAAA,cAAAC,EAAA,MAAAD,EAAA,KAAA,CAAA,CAAA,CACA,EAEAlB,EAAA,QAAA,QAAA,CAAA,CAAA,MAAAmB,EAAA,IAAAd,KAAA,CACA,MAAAiB,EAAAD,EAAA,UAAAH,GAAAA,EAAA,gBAAAC,CAAA,EACAG,IAAA,GACAD,EAAA,KAAA,CAAA,IAAAhB,EAAA,cAAAc,EAAA,MAAA,KAAA,EAEAE,EAAA,OAAAC,EAAA,EAAA,CAAA,IAAAjB,EAAA,cAAAc,EAAA,MAAA,IAAA,CAAA,CACA,CACA,EAGAI,MAAAC,GAAA,MAAA1B,EACA,SAAAuB,EAAA,IAAA,CAAA,CAAA,IAAAhB,EAAA,MAAAM,KAEAY,EAAA,IAAAE,EAAA,CACA,MAAA7B,EACA,MAAAC,EACA,MAAAE,EACA,QAAA,IAAAK,EAAAC,CAAA,EAGA,SAAAM,CAAA,EAFAN,CAAA,CAKA,CACA,CAAA,CAEA"}