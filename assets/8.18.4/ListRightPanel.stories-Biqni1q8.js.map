{"version":3,"file":"ListRightPanel.stories-Biqni1q8.js","sources":["../../../packages/lake/src/components/ListRightPanel.tsx","../../../packages/lake/__stories__/ListRightPanel.stories.tsx"],"sourcesContent":["import { Array, Option } from \"@swan-io/boxed\";\nimport { MutableRefObject, forwardRef } from \"react\";\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\nimport { match } from \"ts-pattern\";\nimport { animations, colors, spacings } from \"../constants/design\";\nimport { usePreviousValue } from \"../hooks/usePreviousValue\";\nimport { noop } from \"../utils/function\";\nimport { Box } from \"./Box\";\nimport { FocusTrapRef } from \"./FocusTrap\";\nimport { LakeButton } from \"./LakeButton\";\nimport { LoadingView } from \"./LoadingView\";\nimport { RightPanel } from \"./RightPanel\";\nimport { Space } from \"./Space\";\nimport { Suspendable } from \"./Suspendable\";\nimport { TransitionView } from \"./TransitionView\";\n\nconst styles = StyleSheet.create({\n  details: {\n    paddingBottom: spacings[24],\n    paddingTop: spacings[12],\n    flexGrow: 1,\n  },\n  detailsContents: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  detailsContainer: {\n    flexGrow: 1,\n  },\n  content: {\n    paddingHorizontal: spacings[24],\n  },\n  contentLarge: {\n    paddingHorizontal: spacings[40],\n  },\n});\n\nexport const ListRightPanelContent = ({\n  children,\n  large,\n  style,\n}: {\n  children: React.ReactNode;\n  large: boolean;\n  style?: StyleProp<ViewStyle>;\n}) => {\n  return <View style={[large ? styles.contentLarge : styles.content, style]}>{children}</View>;\n};\n\ntype Props<T> = {\n  items: T[];\n  keyExtractor: (item: T) => string;\n  activeId: string | null;\n  onActiveIdChange: (id: string) => void;\n  onClose: () => void;\n  render: (item: T, large: boolean) => React.ReactNode;\n  closeLabel: string;\n  previousLabel: string;\n  nextLabel: string;\n};\n\nconst ListRightPanel_ = forwardRef<FocusTrapRef, Props<unknown>>(\n  (\n    {\n      items,\n      keyExtractor,\n      activeId,\n      onActiveIdChange,\n      onClose,\n      render,\n      closeLabel,\n      previousLabel,\n      nextLabel,\n    },\n    ref,\n  ) => {\n    const activeItem = items.find(item => keyExtractor(item) === activeId);\n    // use `Array.getIndexBy` instead of `Array.findIndex` to avoid -1 value\n    const activeItemIndex = Array.findIndex(\n      items,\n      item => keyExtractor(item) === activeId,\n    ).toUndefined();\n\n    const previousId = usePreviousValue(activeId);\n    const previousItem = usePreviousValue(activeItem);\n    const previousIndex = usePreviousValue(activeItemIndex);\n\n    const newDetailDirection =\n      typeof activeItemIndex === \"number\" && typeof previousIndex === \"number\"\n        ? match({ activeItemIndex, previousIndex })\n            .when(\n              ({ activeItemIndex, previousIndex }) => activeItemIndex < previousIndex,\n              () => animations.fadeAndSlideInFromTop,\n            )\n            .when(\n              ({ activeItemIndex, previousIndex }) => activeItemIndex > previousIndex,\n              () => animations.fadeAndSlideInFromBottom,\n            )\n            .otherwise(() => null)\n        : null;\n\n    const previousDetailDirection =\n      typeof activeItemIndex === \"number\" && typeof previousIndex === \"number\"\n        ? match({ activeItemIndex, previousIndex })\n            .when(\n              ({ activeItemIndex, previousIndex }) => activeItemIndex < previousIndex,\n              () => animations.fadeAndSlideInFromBottom,\n            )\n            .when(\n              ({ activeItemIndex, previousIndex }) => activeItemIndex > previousIndex,\n              () => animations.fadeAndSlideInFromTop,\n            )\n            .otherwise(() => null)\n        : null;\n\n    return (\n      <RightPanel ref={ref} visible={activeItem != null} onPressClose={onClose}>\n        {({ large }) => (\n          <View style={styles.details}>\n            <Box\n              direction=\"row\"\n              justifyContent=\"spaceBetween\"\n              style={large ? styles.contentLarge : styles.content}\n            >\n              <LakeButton\n                mode=\"tertiary\"\n                icon=\"lake-close\"\n                ariaLabel={closeLabel}\n                onPress={onClose}\n              />\n\n              <Box direction=\"row\" justifyContent=\"spaceBetween\">\n                <LakeButton\n                  mode=\"tertiary\"\n                  ariaLabel={previousLabel}\n                  icon=\"arrow-left-regular\"\n                  disabled={activeItemIndex === 0}\n                  onPress={() => {\n                    if (typeof activeItemIndex === \"number\") {\n                      Option.fromNullable(items[activeItemIndex - 1]).match({\n                        Some: item => onActiveIdChange(keyExtractor(item)),\n                        None: noop,\n                      });\n                    }\n                  }}\n                />\n\n                <LakeButton\n                  mode=\"tertiary\"\n                  ariaLabel={nextLabel}\n                  icon=\"arrow-right-regular\"\n                  disabled={activeItemIndex === items.length - 1}\n                  onPress={() => {\n                    if (typeof activeItemIndex === \"number\") {\n                      Option.fromNullable(items[activeItemIndex + 1]).match({\n                        Some: item => onActiveIdChange(keyExtractor(item)),\n                        None: noop,\n                      });\n                    }\n                  }}\n                />\n              </Box>\n            </Box>\n\n            <Space height={12} />\n\n            <View style={styles.detailsContainer}>\n              {activeItem != null\n                ? [\n                    <TransitionView\n                      {...newDetailDirection}\n                      key={activeId}\n                      style={styles.detailsContents}\n                    >\n                      {previousItem != null ? (\n                        <Suspendable\n                          fallback={<LoadingView color={colors.current[500]} delay={0} />}\n                        >\n                          {render(activeItem, large)}\n                        </Suspendable>\n                      ) : (\n                        render(activeItem, large)\n                      )}\n                    </TransitionView>,\n\n                    ...(previousItem != null && previousId !== activeId\n                      ? [\n                          <TransitionView\n                            {...previousDetailDirection}\n                            key={previousId}\n                            style={styles.detailsContents}\n                          >\n                            {null}\n                          </TransitionView>,\n                        ]\n                      : []),\n                  ]\n                : null}\n            </View>\n          </View>\n        )}\n      </RightPanel>\n    );\n  },\n);\n\n// @ts-expect-error this is the only way I found to use generic props with forwardRef\nexport const ListRightPanel: <T>(\n  props: Props<T> & { ref?: MutableRefObject<FocusTrapRef | null> },\n) => React.ReactElement = ListRightPanel_;\n","import { Meta } from \"@storybook/react\";\nimport { useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { LakeButton } from \"../src/components/LakeButton\";\nimport { LakeHeading } from \"../src/components/LakeHeading\";\nimport { ListRightPanel } from \"../src/components/ListRightPanel\";\nimport { StoryBlock } from \"./_StoriesComponents\";\n\nconst styles = StyleSheet.create({\n  button: {\n    alignSelf: \"flex-start\",\n  },\n});\n\nexport default {\n  title: \"Layout/ListRightPanel\",\n  component: ListRightPanel,\n} as Meta<typeof ListRightPanel>;\n\nconst resolved: Record<string, boolean> = {};\n\nconst Item = ({ item }: { item: string }) => {\n  if (resolved[item] !== true) {\n    throw new Promise(resolve => {\n      setTimeout(() => {\n        resolved[item] = true;\n        resolve(undefined);\n      }, 500);\n    });\n  }\n\n  return (\n    <LakeHeading level={1} variant=\"h1\">\n      Item {item}\n    </LakeHeading>\n  );\n};\n\nexport const Default = () => {\n  const [activeId, setActiveId] = useState<string | null>(null);\n\n  return (\n    <StoryBlock\n      title=\"RightPanel\"\n      description={[\n        \"RightPanel is a component that allows you to render a panel on the right side of the screen.\",\n        \"To make this component work, you need a root element with the id `full-page-layer-root` below your #root-app element\",\n        \"You can open it by clicking on the button below.\",\n      ]}\n    >\n      <LakeButton onPress={() => setActiveId(\"1\")} size=\"small\" style={styles.button}>\n        Open right panel\n      </LakeButton>\n\n      <ListRightPanel\n        closeLabel=\"Close\"\n        previousLabel=\"Previous\"\n        nextLabel=\"Next\"\n        keyExtractor={item => item}\n        activeId={activeId}\n        onActiveIdChange={activeId => setActiveId(activeId)}\n        onClose={() => setActiveId(null)}\n        items={[\"1\", \"2\", \"3\"]}\n        render={item => <Item item={item} />}\n      />\n    </StoryBlock>\n  );\n};\n"],"names":["styles","StyleSheet","spacings","ListRightPanel_","forwardRef","items","keyExtractor","activeId","onActiveIdChange","onClose","render","closeLabel","previousLabel","nextLabel","ref","activeItem","item","activeItemIndex","Array","previousId","usePreviousValue","previousItem","previousIndex","newDetailDirection","match","animations","previousDetailDirection","RightPanel","large","jsxs","View","Box","jsx","LakeButton","Option","noop","Space","createElement","TransitionView","Suspendable","LoadingView","colors","ListRightPanel","create","button","alignSelf","ListRightPanel_stories","title","component","resolved","Item","Promise","resolve","setTimeout","undefined","LakeHeading","Default","setActiveId","useState","StoryBlock"],"mappings":"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"}