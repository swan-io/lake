{"version":3,"file":"Breadcrumbs.stories-BQSbEhFP.js","sources":["../../../packages/lake/src/components/Breadcrumbs.tsx","../../../packages/lake/__stories__/Breadcrumbs.stories.tsx"],"sourcesContent":["import {\n  Dispatch,\n  MutableRefObject,\n  ReactNode,\n  SetStateAction,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  NativeSyntheticEvent,\n  Pressable,\n  StyleSheet,\n  TargetedEvent,\n  Text,\n  View,\n} from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport { SetRequired } from \"type-fest\";\nimport { v4 as uuid } from \"uuid\";\nimport {\n  animations,\n  backgroundColor,\n  colors,\n  gray75,\n  radii,\n  shadows,\n  spacings,\n  texts,\n} from \"../constants/design\";\nimport { useHover } from \"../hooks/useHover\";\nimport { usePreviousValue } from \"../hooks/usePreviousValue\";\nimport { noop } from \"../utils/function\";\nimport { isNotNullish, isNullish } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { FocusTrap } from \"./FocusTrap\";\nimport { Icon } from \"./Icon\";\nimport { LakeText } from \"./LakeText\";\nimport { Link } from \"./Link\";\nimport { Space } from \"./Space\";\nimport { TransitionView } from \"./TransitionView\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    zIndex: 10,\n    transform: \"translateZ(0px)\",\n  },\n  item: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderRadius: radii[6],\n    transitionProperty: \"opacity\",\n    transitionDuration: \"150ms\",\n  },\n  itemPressed: {\n    opacity: 0.2,\n  },\n  itemForcedOpen: {\n    backgroundColor: colors.gray[50],\n  },\n  chevron: {\n    padding: spacings[8],\n  },\n  horizontalLink: {\n    paddingVertical: spacings[8],\n  },\n  horizontalLinkText: {\n    paddingHorizontal: spacings[8],\n    alignItems: \"center\",\n    display: \"inline-flex\",\n  },\n  horizontalLinkTextHovered: {\n    color: colors.gray[900],\n    boxShadow: `0 1px currentColor`,\n  },\n  activeHorizontalLinkText: {\n    color: colors.gray[800],\n    backgroundColor: gray75,\n    borderRadius: radii[4],\n    boxShadow: \"none\",\n  },\n  dropdown: {\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    top: \"100%\",\n    backgroundColor: backgroundColor.accented,\n    borderRadius: radii[8],\n    boxShadow: shadows.modal,\n    paddingVertical: spacings[8],\n  },\n  siblingsDropdown: {\n    position: \"absolute\",\n    left: \"50%\",\n    transform: \"translateX(-50%)\",\n    top: \"100%\",\n    backgroundColor: backgroundColor.accented,\n    borderRadius: radii[8],\n    boxShadow: shadows.modal,\n    paddingVertical: spacings[8],\n    alignItems: \"stretch\",\n  },\n  dropdownLink: {\n    paddingHorizontal: spacings[16],\n    paddingVertical: spacings[8],\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  dropdownLinkText: {\n    ...texts.regular,\n    whiteSpace: \"nowrap\",\n  },\n  dropdownLinkTextHovered: {\n    color: colors.gray[500],\n  },\n  dropdownLinkActive: {\n    backgroundColor: colors.gray[50],\n  },\n  dropdownContainer: {\n    position: \"absolute\",\n    left: \"50%\",\n    top: \"100%\",\n  },\n  dropdownLinkContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n  },\n  tick: {\n    position: \"absolute\",\n    top: \"50%\",\n    right: spacings[16],\n    transform: \"translateY(-50%)\",\n  },\n});\n\nexport type Crumb = {\n  label: string;\n  link: string;\n  siblings?: { label: string; url: string; isMatching: boolean }[];\n};\n\ntype CrumbWithId = {\n  id: string;\n  crumb?: Crumb;\n  isRootCrumb: boolean;\n  index?: number;\n};\n\ntype CrumbWithIdAndPosition = {\n  id: string;\n  crumb: Crumb;\n  isFirst: boolean;\n  isLast: boolean;\n  isRootCrumb: boolean;\n};\n\nconst emptyCrumbWithIdArray: readonly CrumbWithId[] = [];\nconst emptyCrumbArray: readonly Crumb[] = [];\n\nconst defaultContext: readonly [\n  readonly CrumbWithId[],\n  readonly CrumbWithId[],\n  Dispatch<SetStateAction<readonly CrumbWithId[]>>,\n  MutableRefObject<number>,\n] = [emptyCrumbWithIdArray, emptyCrumbWithIdArray, noop, { current: -1 }];\n\nconst BreadcrumbsContext = createContext(defaultContext);\n\ntype Props = {\n  rootLevelCrumbs?: readonly Crumb[];\n  children: ReactNode;\n};\n\nexport const BreadcrumbsRoot = ({ rootLevelCrumbs = emptyCrumbArray, children }: Props) => {\n  const [crumbs, setCrumbs] = useState(emptyCrumbWithIdArray);\n  const isFirstRenderRef = useRef(true);\n  const currentIndexRef = useRef(-1);\n\n  const [rootCrumbs, setRootCrumbs] = useState(() =>\n    rootLevelCrumbs.map(crumb => ({ id: uuid(), crumb, isRootCrumb: true })),\n  );\n\n  useEffect(() => {\n    if (isFirstRenderRef.current) {\n      isFirstRenderRef.current = false;\n      return;\n    }\n    setRootCrumbs(rootLevelCrumbs.map(crumb => ({ id: uuid(), crumb, isRootCrumb: true })));\n  }, [rootLevelCrumbs]);\n\n  const orderedCrumbs = useMemo(\n    () => [...crumbs].sort((a, b) => ((b.index ?? -1) > (a.index ?? -1) ? -1 : 1)),\n    [crumbs],\n  );\n\n  const value = useMemo(\n    () => [rootCrumbs, orderedCrumbs, setCrumbs, currentIndexRef] as const,\n    [rootCrumbs, orderedCrumbs, setCrumbs, currentIndexRef],\n  );\n\n  return <BreadcrumbsContext.Provider value={value}>{children}</BreadcrumbsContext.Provider>;\n};\n\nconst useBreadcrumbs = () => {\n  const [initialCrumbs, crumbs] = useContext(BreadcrumbsContext);\n  return useMemo(() => [...initialCrumbs, ...crumbs], [initialCrumbs, crumbs]);\n};\n\nexport const useCrumb = (crumb?: Crumb) => {\n  const [, , setValue, currentIndex] = useContext(BreadcrumbsContext);\n  const [id] = useState(() => uuid());\n  const initialCrumb = useRef(crumb);\n\n  const [index] = useState(() => ++currentIndex.current);\n\n  useEffect(() => {\n    setValue(existingCrumbs => {\n      const nextCrumbs = existingCrumbs.concat([\n        { id, crumb: initialCrumb.current, isRootCrumb: false, index },\n      ]);\n      return nextCrumbs;\n    });\n    return () => {\n      setValue(existingCrumbs => existingCrumbs.filter(existingCrumb => existingCrumb.id !== id));\n    };\n  }, [id, setValue, index]);\n\n  useEffect(() => {\n    setValue(existingCrumbs => {\n      const exisitingCrumb = existingCrumbs.find(existingCrumb => existingCrumb.id === id);\n      if (isNotNullish(exisitingCrumb) && exisitingCrumb.crumb !== crumb) {\n        return existingCrumbs.map(existingCrumb => {\n          return existingCrumb.id === id\n            ? { id, crumb, isRootCrumb: exisitingCrumb.isRootCrumb, index }\n            : existingCrumb;\n        });\n      }\n      return existingCrumbs;\n    });\n  }, [id, crumb, setValue, index]);\n};\n\nconst CHEVRON = (\n  <View style={styles.chevron}>\n    <Icon name=\"chevron-right-filled\" color={colors.gray[500]} size={16} />\n  </View>\n);\n\nconst BreadcrumbsSiblingsDropdown = ({\n  siblings,\n  isLast,\n  onPress,\n}: {\n  siblings: NonNullable<Crumb[\"siblings\"]>;\n  isLast: boolean;\n  onPress: () => void;\n}) => {\n  return (\n    <View style={styles.siblingsDropdown}>\n      {siblings.map(({ url, label, isMatching }) => {\n        return (\n          <Link\n            to={url}\n            key={url}\n            ariaCurrentValue=\"location\"\n            onPress={(event: React.MouseEvent<HTMLAnchorElement>) => {\n              if (isMatching && isLast) {\n                event.preventDefault();\n              }\n              onPress();\n            }}\n            style={styles.dropdownLinkContainer}\n          >\n            {({ hovered }) => (\n              <View style={[styles.dropdownLink, isMatching && styles.dropdownLinkActive]}>\n                <LakeText\n                  style={[styles.dropdownLinkText, hovered && styles.dropdownLinkTextHovered]}\n                >\n                  {label}\n                </LakeText>\n\n                {isMatching && (\n                  <>\n                    <Space width={32} />\n\n                    <Icon\n                      color={colors.positive[500]}\n                      name=\"checkmark-filled\"\n                      size={14}\n                      style={styles.tick}\n                    />\n                  </>\n                )}\n              </View>\n            )}\n          </Link>\n        );\n      })}\n    </View>\n  );\n};\n\nconst BreadcrumbsItem = ({\n  crumb,\n  isFirstItem = false,\n  isLastItem = false,\n  shouldAnimate,\n}: {\n  isFirstItem?: boolean;\n  isLastItem?: boolean;\n  crumb: Crumb;\n  shouldAnimate: boolean;\n}) => {\n  const [isHovered, setIsHovered] = useState(() => false);\n  const hoverRef = useRef(null);\n  const [siblings, setSiblings] = useState<Crumb[\"siblings\"] | null>(null);\n\n  useHover(hoverRef, {\n    onHoverStart: () => setIsHovered(true),\n    onHoverEnd: () => setIsHovered(false),\n  });\n\n  const handlePress = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement>) => {\n      if (crumb.siblings != null) {\n        event.preventDefault();\n        setSiblings(crumb.siblings);\n      }\n    },\n    [crumb.siblings],\n  );\n\n  return (\n    <View style={[styles.item, shouldAnimate ? animations.fadeAndSlideInFromRight.enter : null]}>\n      {!isFirstItem ? CHEVRON : null}\n\n      <View>\n        <Link to={crumb.link} ariaCurrentValue=\"location\" onPress={handlePress}>\n          <View\n            ref={hoverRef}\n            style={[\n              styles.horizontalLink,\n              shouldAnimate && animations.fadeAndSlideInFromRight.enter,\n            ]}\n          >\n            <LakeText\n              color={colors.gray[800]}\n              style={[styles.horizontalLinkText, isLastItem && styles.activeHorizontalLinkText]}\n            >\n              <Text style={isHovered && !isLastItem ? styles.horizontalLinkTextHovered : undefined}>\n                {crumb.label}\n              </Text>\n\n              {crumb.siblings != null ? (\n                <>\n                  <Space width={4} />\n                  <Icon name=\"chevron-down-filled\" color={colors.gray[500]} size={16} />\n                </>\n              ) : null}\n            </LakeText>\n          </View>\n        </Link>\n\n        <View style={styles.dropdownContainer}>\n          <TransitionView {...animations.fadeAndSlideInFromBottom}>\n            {siblings ? (\n              <FocusTrap\n                autoFocus={true}\n                focusLock={true}\n                returnFocus={true}\n                onClickOutside={() => setSiblings(null)}\n                onEscapeKey={() => setSiblings(null)}\n              >\n                <BreadcrumbsSiblingsDropdown\n                  siblings={siblings}\n                  isLast={isLastItem}\n                  onPress={() => setSiblings(null)}\n                />\n              </FocusTrap>\n            ) : null}\n          </TransitionView>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst BreadcrumbsDropdown = ({\n  crumbs,\n  onHoverStart,\n  onHoverEnd,\n  onLinkFocus,\n  onLinkBlur,\n  onLinkPress,\n}: {\n  crumbs: CrumbWithIdAndPosition[];\n  onHoverStart: () => void;\n  onHoverEnd: () => void;\n  onLinkFocus: () => void;\n  onLinkBlur: () => void;\n  onLinkPress: () => void;\n}) => {\n  const containerRef = useRef(null);\n\n  useHover(containerRef, {\n    onHoverStart,\n    onHoverEnd,\n  });\n\n  return (\n    <View style={styles.dropdown} ref={containerRef}>\n      {crumbs.map(({ id, crumb }) => {\n        return (\n          <Link\n            to={crumb.link}\n            key={id}\n            onFocus={onLinkFocus}\n            onBlur={onLinkBlur}\n            onPress={onLinkPress}\n            ariaCurrentValue=\"location\"\n          >\n            {({ hovered }) => (\n              <View style={styles.dropdownLink}>\n                <LakeText\n                  style={[styles.dropdownLinkText, hovered && styles.dropdownLinkTextHovered]}\n                >\n                  {crumb.label}\n                </LakeText>\n              </View>\n            )}\n          </Link>\n        );\n      })}\n    </View>\n  );\n};\n\ntype DropdownOpeningState = \"Open\" | \"OpenFromFocus\" | \"ForcedOpen\" | \"Closed\" | \"ForcedClosed\";\n\ntype DropdownAction = \"Open\" | \"FocusHandle\" | \"Close\" | \"ForceClose\" | \"ForceToggle\";\n\nconst SHOULD_AUTOFOCUS = new Set<DropdownOpeningState>([\"ForcedOpen\", \"OpenFromFocus\"]);\nconst SHOULD_OPEN = new Set<DropdownOpeningState>([\"Open\", \"ForcedOpen\", \"OpenFromFocus\"]);\nconst SHOULD_LOCK_FOCUS = new Set<DropdownOpeningState>([\"ForcedOpen\"]);\n\nconst BreadcrumbsDropdownItems = ({ crumbs }: { crumbs: CrumbWithIdAndPosition[] }) => {\n  const [openingStatus, dispatch] = useReducer(\n    (state: DropdownOpeningState, action: DropdownAction): DropdownOpeningState => {\n      return match([action, state])\n        .returnType<DropdownOpeningState>()\n        .with(\n          [\"ForceToggle\", \"Closed\"],\n          [\"ForceToggle\", \"Open\"],\n          [\"ForceToggle\", \"ForcedClosed\"],\n          () => \"ForcedOpen\",\n        )\n        .with([\"ForceToggle\", \"OpenFromFocus\"], [\"ForceToggle\", \"ForcedOpen\"], () => \"ForcedClosed\")\n        .with([\"ForceClose\", P._], () => \"ForcedClosed\")\n        .with([\"FocusHandle\", \"ForcedClosed\"], () => \"Closed\")\n        .with(\n          [\"Open\", \"ForcedOpen\"],\n          [\"FocusHandle\", \"ForcedOpen\"],\n          [\"Close\", \"ForcedOpen\"],\n          () => \"ForcedOpen\",\n        )\n        .with([\"Open\", P._], () => \"Open\")\n        .with([\"FocusHandle\", P._], () => \"OpenFromFocus\")\n        .with([\"Close\", P._], () => \"Closed\")\n        .exhaustive();\n    },\n    \"Closed\",\n  );\n\n  const timeoutRef = useRef<number | undefined>(undefined);\n  const handleRef = useRef<View>(null);\n  const containerRef = useRef<View>(null);\n\n  const {\n    onHandleFocus,\n    onLinkFocus,\n    onAnyBlur,\n    onHoverStart,\n    onHoverEnd,\n    onPress,\n    onPressOutside,\n    onEscapeKey,\n  } = useMemo(\n    () => ({\n      onHandleFocus: (event: NativeSyntheticEvent<TargetedEvent>) => {\n        if (isNullish(containerRef.current)) {\n          return;\n        }\n        const container = containerRef.current as unknown as Element;\n        const focusEvent = event as unknown as FocusEvent;\n        // Don't reopen if leaving\n        if (!container.contains(focusEvent.relatedTarget as Node | null)) {\n          if (isNotNullish(timeoutRef.current)) {\n            clearTimeout(timeoutRef.current);\n          }\n          dispatch(\"FocusHandle\");\n        }\n      },\n      onLinkFocus: () => {\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        dispatch(\"Open\");\n      },\n      onAnyBlur: () => {\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        timeoutRef.current = window.setTimeout(() => {\n          dispatch(\"Close\");\n        }, 300);\n      },\n      onHoverStart: () => {\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        dispatch(\"Open\");\n      },\n\n      onHoverEnd: () => {\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        timeoutRef.current = window.setTimeout(() => {\n          dispatch(\"Close\");\n        }, 300);\n      },\n\n      onPress: () => {\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        dispatch(\"ForceToggle\");\n      },\n\n      onPressOutside: (event: MouseEvent | TouchEvent) => {\n        if (isNotNullish(handleRef.current)) {\n          const handle = handleRef.current as unknown as Element;\n          if (handle.contains(event.target as Node | null)) {\n            return;\n          }\n        }\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        // Only force closing in case the focus comes directly to the handle\n        // Then put it back to a regular closed state\n        dispatch(\"ForceClose\");\n        timeoutRef.current = window.setTimeout(() => {\n          dispatch(\"Close\");\n        }, 300);\n      },\n\n      onEscapeKey: () => {\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        dispatch(\"ForceClose\");\n        timeoutRef.current = window.setTimeout(() => {\n          dispatch(\"Close\");\n        }, 300);\n      },\n    }),\n    [],\n  );\n\n  useEffect(() => {\n    return () => {\n      if (isNotNullish(timeoutRef.current)) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  const shouldOpen = SHOULD_OPEN.has(openingStatus);\n  const shouldAutoFocus = SHOULD_AUTOFOCUS.has(openingStatus);\n  const shouldLockFocus = SHOULD_LOCK_FOCUS.has(openingStatus);\n\n  useHover(handleRef, {\n    onHoverStart,\n    onHoverEnd,\n  });\n\n  return (\n    <Box direction=\"row\" alignItems=\"center\">\n      {CHEVRON}\n\n      <View ref={containerRef}>\n        <Pressable\n          ref={handleRef}\n          style={({ pressed }) => [\n            styles.item,\n            pressed && styles.itemPressed,\n            openingStatus === \"ForcedOpen\" && styles.itemForcedOpen,\n          ]}\n          tabIndex={0}\n          onFocus={onHandleFocus}\n          onBlur={onAnyBlur}\n          onPress={onPress}\n        >\n          <View style={styles.horizontalLink}>\n            <LakeText style={[styles.horizontalLinkText, styles.activeHorizontalLinkText]}>\n              {\"…\"}\n            </LakeText>\n          </View>\n        </Pressable>\n\n        <TransitionView {...animations.fadeAndSlideInFromBottom}>\n          {shouldOpen ? (\n            <FocusTrap\n              autoFocus={shouldAutoFocus}\n              focusLock={shouldLockFocus}\n              returnFocus={shouldLockFocus}\n              onClickOutside={onPressOutside}\n              onEscapeKey={shouldLockFocus ? onEscapeKey : undefined}\n            >\n              <BreadcrumbsDropdown\n                crumbs={crumbs}\n                onHoverStart={onHoverStart}\n                onHoverEnd={onHoverEnd}\n                onLinkFocus={onLinkFocus}\n                onLinkBlur={onAnyBlur}\n                onLinkPress={onEscapeKey}\n              />\n            </FocusTrap>\n          ) : null}\n        </TransitionView>\n      </View>\n    </Box>\n  );\n};\n\n// In order to preserve the horizontal space, we collapse the breadcrumbs once\n// there's strictly more than three crumbs. In that case, the expected behavior\n// is as follows:\n// - Display the root crumb (the first one) inline\n// - Collapse any crumb between the first and the penultimate item in a dropdown\n// - Display the last two crumbs inline\nconst arrangeArray = <T,>(array: T[]): { start: T[]; collapsed: T[]; end: T[] } => {\n  if (array.length <= 3) {\n    return {\n      start: array,\n      collapsed: [],\n      end: [],\n    };\n  }\n  return {\n    start: array.slice(0, 1),\n    collapsed: array.slice(1, -2),\n    end: array.slice(-2),\n  };\n};\n\nexport const Breadcrumbs = () => {\n  const crumbs = useBreadcrumbs();\n\n  const cleanCrumbs = useMemo(() => {\n    const hasCrumb = (value: CrumbWithId): value is SetRequired<CrumbWithId, \"crumb\"> =>\n      isNotNullish(value.crumb);\n\n    return crumbs.filter(hasCrumb);\n  }, [crumbs]);\n\n  const previousCrumbs = usePreviousValue(\n    useMemo(() => {\n      return new Set(cleanCrumbs.map(crumb => crumb.id));\n    }, [cleanCrumbs]),\n  );\n\n  const { start, collapsed, end } = useMemo(() => {\n    return arrangeArray(\n      cleanCrumbs.map(\n        ({ id, crumb, isRootCrumb }, index): CrumbWithIdAndPosition => ({\n          id,\n          crumb,\n          isFirst: index === 0,\n          isLast: index === cleanCrumbs.length - 1,\n          isRootCrumb,\n        }),\n      ),\n    );\n  }, [cleanCrumbs]);\n\n  return (\n    <View role=\"navigation\" style={styles.container}>\n      {start.map(({ id, crumb, isFirst, isLast, isRootCrumb }) => (\n        <BreadcrumbsItem\n          key={id}\n          crumb={crumb}\n          isFirstItem={isFirst}\n          isLastItem={isLast}\n          shouldAnimate={!previousCrumbs.has(id) && !isRootCrumb}\n        />\n      ))}\n\n      {collapsed.length > 0 ? <BreadcrumbsDropdownItems crumbs={collapsed} /> : null}\n\n      {end.map(({ id, crumb, isLast, isRootCrumb }) => (\n        <BreadcrumbsItem\n          key={id}\n          crumb={crumb}\n          isLastItem={isLast}\n          shouldAnimate={!previousCrumbs.has(id) && !isRootCrumb}\n        />\n      ))}\n    </View>\n  );\n};\n","import { Meta } from \"@storybook/react\";\nimport { useState } from \"react\";\nimport { Box } from \"../src/components/Box\";\nimport { Breadcrumbs, BreadcrumbsRoot, Crumb, useCrumb } from \"../src/components/Breadcrumbs\";\nimport { LakeButton } from \"../src/components/LakeButton\";\nimport { LakeLabel } from \"../src/components/LakeLabel\";\nimport { LakeTextInput } from \"../src/components/LakeTextInput\";\nimport { Space } from \"../src/components/Space\";\nimport { StoryBlock, StoryPart } from \"./_StoriesComponents\";\n\nexport default {\n  title: \"Interactivity/Breadcrumbs\",\n  component: BreadcrumbsRoot,\n} as Meta<typeof BreadcrumbsRoot>;\n\nexport const Variations = () => {\n  return (\n    <StoryBlock title=\"Breadcrumbs\">\n      <StoryPart title=\"With 1 element\">\n        <BreadcrumbsRoot\n          rootLevelCrumbs={[\n            {\n              label: \"All simulator events\",\n              link: \"/simulator\",\n            },\n          ]}\n        >\n          <Breadcrumbs />\n        </BreadcrumbsRoot>\n      </StoryPart>\n\n      <StoryPart title=\"With 2 elements\">\n        <BreadcrumbsRoot\n          rootLevelCrumbs={[\n            {\n              label: \"All simulator events\",\n              link: \"/simulator\",\n            },\n            {\n              label: \"SEPA Credit Transfers\",\n              link: \"/simulator/sct\",\n            },\n          ]}\n        >\n          <Breadcrumbs />\n        </BreadcrumbsRoot>\n      </StoryPart>\n\n      <StoryPart title=\"With siblings\">\n        <BreadcrumbsRoot\n          rootLevelCrumbs={[\n            {\n              label: \"All simulator events\",\n              link: \"/simulator\",\n            },\n            {\n              label: \"SEPA Credit Transfers\",\n              link: \"/simulator/sct\",\n              siblings: [\n                {\n                  label: \"SEPA Credit Transfers\",\n                  url: \"/simulator/sct\",\n                  isMatching: true,\n                },\n                {\n                  label: \"SEPA Direct Debits\",\n                  url: \"/simulator/sdd\",\n                  isMatching: false,\n                },\n                {\n                  label: \"Cards\",\n                  url: \"/simulator/cards\",\n                  isMatching: false,\n                },\n                {\n                  label: \"Apple Pay/Google Pay\",\n                  url: \"/simulator/apple-pay-google-pay\",\n                  isMatching: false,\n                },\n                {\n                  label: \"Account holders\",\n                  url: \"/simulator/account-holders\",\n                  isMatching: false,\n                },\n                {\n                  label: \"Merchant acquiring\",\n                  url: \"/simulator/merchant-acquiring\",\n                  isMatching: false,\n                },\n              ],\n            },\n          ]}\n        >\n          <Breadcrumbs />\n        </BreadcrumbsRoot>\n      </StoryPart>\n    </StoryBlock>\n  );\n};\n\n// We use this component to trigger breadcrumbs animations when we add/remove crumbs\n// Because updating `rootLevelCrumbs` on `BreadcrumbsRoot` doesn't trigger animations\nconst InteractiveCrumb = ({ crumb }: { crumb: Crumb }) => {\n  useCrumb(crumb);\n  return null;\n};\n\nexport const Interactive = () => {\n  const [newCrumbLabel, setNewCrumbLabel] = useState(\"\");\n  const [crumbs, setCrumbs] = useState<Crumb[]>([]);\n\n  const addCrumb = () => {\n    const crumb: Crumb = {\n      label: newCrumbLabel,\n      link: newCrumbLabel,\n    };\n\n    setCrumbs(crumbs => [...crumbs, crumb]);\n    setNewCrumbLabel(\"\");\n  };\n\n  const addSibling = () => {\n    const sibling: NonNullable<Crumb[\"siblings\"]>[number] = {\n      label: newCrumbLabel,\n      url: newCrumbLabel,\n      isMatching: false,\n    };\n\n    setCrumbs(crumbs => {\n      const lastCrumb = crumbs[crumbs.length - 1];\n      if (!lastCrumb) {\n        return crumbs;\n      }\n\n      const lastCrumbSiblings = lastCrumb?.siblings ?? [];\n      const newLastCrumb = { ...lastCrumb, siblings: [...lastCrumbSiblings, sibling] };\n      return [...crumbs.slice(0, -1), newLastCrumb];\n    });\n    setNewCrumbLabel(\"\");\n  };\n\n  const removeLastCrumb = () => {\n    setCrumbs(crumbs => crumbs.slice(0, -1));\n  };\n\n  return (\n    <StoryBlock\n      title=\"Interactive\"\n      description=\"You can add/remove crumbs to see breadcrumbs animations during navigation in apps\"\n    >\n      <Box direction=\"row\">\n        <LakeLabel\n          label=\"New crumb label\"\n          actions={\n            <>\n              <Space width={8} />\n\n              <LakeButton\n                size=\"small\"\n                color=\"positive\"\n                onPress={addCrumb}\n                disabled={!newCrumbLabel}\n              >\n                Add crumb\n              </LakeButton>\n\n              <Space width={8} />\n\n              <LakeButton\n                size=\"small\"\n                color=\"gray\"\n                onPress={addSibling}\n                disabled={!newCrumbLabel || crumbs.length === 0}\n              >\n                Add sibling\n              </LakeButton>\n\n              <Space width={8} />\n\n              <LakeButton\n                size=\"small\"\n                color=\"negative\"\n                onPress={removeLastCrumb}\n                disabled={crumbs.length === 0}\n              >\n                Remove last crumb\n              </LakeButton>\n            </>\n          }\n          render={id => (\n            <LakeTextInput\n              id={id}\n              value={newCrumbLabel}\n              onChange={event => setNewCrumbLabel(event.currentTarget.value)}\n            />\n          )}\n        />\n      </Box>\n\n      <Space height={16} />\n\n      <BreadcrumbsRoot>\n        {crumbs.map(crumb => (\n          <InteractiveCrumb crumb={crumb} />\n        ))}\n\n        <Breadcrumbs />\n      </BreadcrumbsRoot>\n    </StoryBlock>\n  );\n};\n"],"names":["styles","StyleSheet","radii","colors","spacings","gray75","backgroundColor","shadows","texts","emptyCrumbWithIdArray","emptyCrumbArray","defaultContext","noop","BreadcrumbsContext","createContext","BreadcrumbsRoot","rootLevelCrumbs","children","crumbs","setCrumbs","useState","isFirstRenderRef","useRef","currentIndexRef","rootCrumbs","setRootCrumbs","crumb","uuid","useEffect","orderedCrumbs","useMemo","a","b","value","jsx","useBreadcrumbs","initialCrumbs","useContext","useCrumb","setValue","currentIndex","id","initialCrumb","index","existingCrumbs","existingCrumb","exisitingCrumb","isNotNullish","CHEVRON","View","Icon","BreadcrumbsSiblingsDropdown","siblings","isLast","onPress","url","label","isMatching","Link","event","hovered","jsxs","LakeText","Fragment","Space","BreadcrumbsItem","isFirstItem","isLastItem","shouldAnimate","isHovered","setIsHovered","hoverRef","setSiblings","useHover","handlePress","useCallback","animations","Text","TransitionView","FocusTrap","BreadcrumbsDropdown","onHoverStart","onHoverEnd","onLinkFocus","onLinkBlur","onLinkPress","containerRef","SHOULD_AUTOFOCUS","SHOULD_OPEN","SHOULD_LOCK_FOCUS","BreadcrumbsDropdownItems","openingStatus","dispatch","useReducer","state","action","match","P","timeoutRef","handleRef","onHandleFocus","onAnyBlur","onPressOutside","onEscapeKey","isNullish","container","focusEvent","shouldOpen","shouldAutoFocus","shouldLockFocus","Box","Pressable","pressed","arrangeArray","array","Breadcrumbs","cleanCrumbs","hasCrumb","previousCrumbs","usePreviousValue","start","collapsed","end","isRootCrumb","isFirst","Breadcrumbs_stories","title","component","Variations","StoryBlock","StoryPart","link","InteractiveCrumb","Interactive","newCrumbLabel","setNewCrumbLabel","addCrumb","addSibling","sibling","lastCrumb","length","lastCrumbSiblings","newLastCrumb","slice","removeLastCrumb","LakeLabel","LakeButton","LakeTextInput","currentTarget","map"],"mappings":"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"}