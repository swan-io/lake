{"version":3,"file":"VirtualizedListView.stories-BJXuyQk9.js","sources":["../../../packages/lake/src/components/EmptyView.tsx","../../../packages/lake/__stories__/VirtualizedListView.stories.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { colors } from \"../constants/design\";\nimport { BorderedIcon } from \"./BorderedIcon\";\nimport { Icon, IconName } from \"./Icon\";\nimport { LakeHeading } from \"./LakeHeading\";\nimport { LakeText } from \"./LakeText\";\nimport { Space, SpacingValue } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  emptyList: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\ntype Props = {\n  icon: IconName;\n  borderedIcon?: boolean;\n  borderedIconPadding?: SpacingValue | 0;\n  title?: string;\n  subtitle?: ReactNode;\n  children?: ReactNode;\n};\n\nexport const EmptyView = ({\n  icon,\n  borderedIcon = false,\n  borderedIconPadding,\n  title,\n  subtitle,\n  children,\n}: Props) => (\n  <View style={styles.emptyList}>\n    {borderedIcon ? (\n      <BorderedIcon name={icon} padding={borderedIconPadding} />\n    ) : (\n      <Icon name={icon} size={96} color={colors.current.primary} />\n    )}\n\n    <Space height={24} />\n\n    {title != null ? (\n      <>\n        <LakeHeading align=\"center\" level={3} variant=\"h5\">\n          {title}\n        </LakeHeading>\n\n        <Space height={8} />\n      </>\n    ) : null}\n\n    {subtitle != null && <LakeText align=\"center\">{subtitle}</LakeText>}\n    {children}\n  </View>\n);\n","import { Meta, StoryFn } from \"@storybook/react\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { Box } from \"../src/components/Box\";\nimport { Cell, HeaderCell, LinkCell, TextCell } from \"../src/components/Cells\";\nimport { EmptyView } from \"../src/components/EmptyView\";\nimport { LakeButton } from \"../src/components/LakeButton\";\nimport { LakeLabelledCheckbox } from \"../src/components/LakeCheckbox\";\nimport { Pressable } from \"../src/components/Pressable\";\nimport { Space } from \"../src/components/Space\";\nimport { Tag } from \"../src/components/Tag\";\nimport {\n  ColumnCellConfig,\n  ColumnTitleConfig,\n  VirtualizedList,\n  VirtualizedListPlaceholder,\n} from \"../src/components/VirtualizedList\";\n\nexport default {\n  title: \"Layout/VirtualizedList\",\n  component: VirtualizedList,\n} as Meta<typeof VirtualizedList>;\n\ntype TestRow = {\n  id: string;\n  name: string;\n};\n\nconst keyExtractor = ({ id }: TestRow) => id;\n\ntype SortInfo = {\n  key: string;\n  order: \"Asc\" | \"Desc\";\n};\n\nconst generateRandomName = () => {\n  const names = [\n    \"Matthias\",\n    \"John\",\n    \"Jane\",\n    \"Camille\",\n    \"Charlotte\",\n    \"Francis\",\n    \"Émilie\",\n    \"François\",\n    \"Laura\",\n    \"Marie\",\n    \"Natasha\",\n    \"Nicolas\",\n    \"Pierre\",\n    \"Thomas\",\n    \"Valérie\",\n    \"Yann\",\n    \"Zoé\",\n    \"Jérôme\",\n    \"Thomas\",\n  ] as const;\n\n  return names[Math.floor(Math.random() * names.length)] ?? names[0];\n};\n\nconst generateItem = (): TestRow => {\n  return {\n    id: uuid(),\n    name: generateRandomName(),\n  };\n};\n\nconst EditableVirtualizedList = ({ few = false }: { few?: boolean }) => {\n  const [sort, setSort] = useState<SortInfo>({ key: \"name\", order: \"Desc\" });\n  const [endReachedTimes, setEndReachedTimes] = useState(0);\n  const [withInfiniteScroll, setWithInfiniteScroll] = useState(false);\n  const [showFakeLoader, setShowFakeLoader] = useState(false);\n  const [forceIsLoading, setForceIsLoading] = useState(false);\n\n  const [data, setData] = useState(() => Array.from({ length: 20 }, _ => generateItem()));\n\n  const onEndReached = useCallback(() => {\n    setEndReachedTimes(v => v + 1);\n    if (withInfiniteScroll) {\n      setShowFakeLoader(true);\n    }\n  }, [withInfiniteScroll]);\n\n  useEffect(() => {\n    if (showFakeLoader) {\n      const timeout = setTimeout(() => {\n        setShowFakeLoader(false);\n        setData(data => [...data, ...Array.from({ length: 20 }, _ => generateItem())]);\n      }, 1000);\n\n      return () => clearTimeout(timeout);\n    }\n  });\n\n  const { stickedToStartColumns, columns, stickedToEndColumns } = useMemo(() => {\n    const stickedToStartColumns = [\n      {\n        width: 300,\n        id: \"name\",\n        title: \"Name\",\n        renderTitle: ({ title, extraInfo, id }: ColumnTitleConfig<SortInfo>) => (\n          <HeaderCell\n            text={title}\n            sort={extraInfo.key === id ? extraInfo.order : undefined}\n            onPress={() => setSort({ key: id, order: extraInfo.order === \"Desc\" ? \"Asc\" : \"Desc\" })}\n          />\n        ),\n        renderCell: ({ item: { name } }: ColumnCellConfig<TestRow, SortInfo>) => (\n          <TextCell variant=\"medium\" text={name} />\n        ),\n      },\n    ];\n\n    const columns = [\n      {\n        width: few ? 300 : 500,\n        grow: few,\n        id: \"event_id\",\n        title: \"Event ID\",\n        renderTitle: ({ title }: ColumnTitleConfig<SortInfo>) => <HeaderCell text={title} />,\n        renderCell: ({ item: { id } }: ColumnCellConfig<TestRow, SortInfo>) => (\n          <TextCell text={id} />\n        ),\n      },\n      ...(few\n        ? []\n        : [\n            {\n              width: 150,\n              id: \"link_before\",\n              title: \"Link before\",\n              renderTitle: ({ title }: ColumnTitleConfig<SortInfo>) => <HeaderCell text={title} />,\n              renderCell: () => (\n                <LinkCell onPress={() => {}} buttonPosition=\"start\">\n                  <Tag color=\"shakespear\">Demo link</Tag>\n                </LinkCell>\n              ),\n            },\n            {\n              width: 500,\n              id: \"onboarding_id\",\n              title: \"Onboarding ID\",\n              renderTitle: ({ title }: ColumnTitleConfig<SortInfo>) => <HeaderCell text={title} />,\n              renderCell: ({ item: { id } }: ColumnCellConfig<TestRow, SortInfo>) => (\n                <TextCell text={id} />\n              ),\n            },\n            {\n              width: 150,\n              id: \"link_after\",\n              title: \"Link after\",\n              renderTitle: ({ title }: ColumnTitleConfig<SortInfo>) => <HeaderCell text={title} />,\n              renderCell: () => (\n                <LinkCell onPress={() => {}} buttonPosition=\"end\">\n                  <Tag color=\"shakespear\">Demo link</Tag>\n                </LinkCell>\n              ),\n            },\n            {\n              width: 500,\n              id: \"account_id\",\n              title: \"Account ID\",\n              renderTitle: ({ title }: ColumnTitleConfig<SortInfo>) => <HeaderCell text={title} />,\n              renderCell: ({ item: { id } }: ColumnCellConfig<TestRow, SortInfo>) => (\n                <TextCell text={id} />\n              ),\n            },\n          ]),\n    ];\n\n    const stickedToEndColumns = [\n      {\n        width: 72,\n        id: \"dot\",\n        title: \"Settings\",\n        renderTitle: () => <HeaderCell text={\"End\"} align=\"right\" />,\n        renderCell: () => (\n          <Cell align=\"right\">\n            <LakeButton mode=\"tertiary\" icon=\"chevron-right-filled\" ariaLabel=\"test\" size=\"small\" />\n          </Cell>\n        ),\n      },\n    ];\n\n    return { stickedToStartColumns, columns, stickedToEndColumns };\n  }, [few]);\n\n  return (\n    <>\n      <Box direction=\"row\" alignItems=\"center\">\n        <LakeButton\n          icon=\"add-circle-filled\"\n          color=\"live\"\n          size=\"small\"\n          onPress={() => setData(data => [generateItem(), ...data])}\n        >\n          Prepend\n        </LakeButton>\n\n        <Space width={16} />\n\n        <LakeButton\n          icon=\"add-circle-filled\"\n          color=\"live\"\n          size=\"small\"\n          onPress={() => setData(data => [...data.slice(0, 1), generateItem(), ...data.slice(1)])}\n        >\n          Insert in 2nd\n        </LakeButton>\n\n        <Space width={16} />\n\n        <LakeButton\n          icon=\"add-circle-filled\"\n          color=\"live\"\n          size=\"small\"\n          onPress={() => setData(data => [...data, generateItem()])}\n        >\n          Append\n        </LakeButton>\n\n        <Space width={16} />\n\n        <LakeButton icon=\"delete-filled\" color=\"negative\" size=\"small\" onPress={() => setData([])}>\n          Clear\n        </LakeButton>\n\n        <Space width={16} />\n        <Tag label=\"End reached\">{endReachedTimes} times</Tag>\n        <Space width={16} />\n\n        <LakeLabelledCheckbox\n          label=\"With infinite scroll\"\n          value={withInfiniteScroll}\n          onValueChange={setWithInfiniteScroll}\n        />\n\n        <Space width={16} />\n\n        <LakeLabelledCheckbox\n          label=\"Force loading state\"\n          value={forceIsLoading}\n          onValueChange={setForceIsLoading}\n        />\n      </Box>\n\n      <Space height={16} />\n\n      <VirtualizedList\n        variant=\"default\"\n        extraInfo={sort}\n        keyExtractor={keyExtractor}\n        data={data}\n        stickedToStartColumns={stickedToStartColumns}\n        columns={columns}\n        stickedToEndColumns={stickedToEndColumns}\n        rowHeight={48}\n        headerHeight={48}\n        onEndReached={onEndReached}\n        onEndReachedThreshold={300}\n        renderEmptyList={() => <EmptyView icon=\"lake-inbox-empty\" title=\"Nothing to see here\" />}\n        getRowLink={item => <Pressable onPress={() => console.log(item.item)} />}\n        loading={{\n          isLoading: forceIsLoading || showFakeLoader,\n          count: 20,\n        }}\n      />\n    </>\n  );\n};\n\nexport const Primary: StoryFn<typeof VirtualizedList> = () => {\n  return <EditableVirtualizedList />;\n};\n\nexport const WithoutBackground: StoryFn<typeof VirtualizedList> = () => {\n  return <EditableVirtualizedList />;\n};\n\nexport const FewColumn: StoryFn<typeof VirtualizedList> = () => {\n  return <EditableVirtualizedList few={true} />;\n};\n\nexport const Placeholder: StoryFn<typeof VirtualizedList> = () => {\n  return <VirtualizedListPlaceholder rowHeight={48} headerHeight={48} count={3} />;\n};\n"],"names":["styles","StyleSheet","EmptyView","icon","borderedIcon","borderedIconPadding","title","subtitle","children","jsxs","View","BorderedIcon","jsx","Icon","colors","Space","Fragment","LakeHeading","LakeText","VirtualizedListView_stories","component","VirtualizedList","keyExtractor","id","generateRandomName","names","Math","floor","random","length","generateItem","uuid","name","EditableVirtualizedList","few","sort","setSort","useState","key","order","endReachedTimes","setEndReachedTimes","withInfiniteScroll","setWithInfiniteScroll","showFakeLoader","setShowFakeLoader","forceIsLoading","setForceIsLoading","data","setData","Array","from","_","onEndReached","useCallback","v","useEffect","timeout","setTimeout","clearTimeout","stickedToStartColumns","columns","stickedToEndColumns","useMemo","width","renderTitle","extraInfo","HeaderCell","undefined","renderCell","item","TextCell","grow","LinkCell","Tag","Cell","LakeButton","Box","slice","LakeLabelledCheckbox","Pressable","console","log","isLoading","count","Primary","WithoutBackground","FewColumn","Placeholder","VirtualizedListPlaceholder"],"mappings":"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"}