{"version":3,"file":"Toggle.stories-c39e78eb.js","sources":["../../../packages/lake/src/components/Toggle.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { StyleSheet, Text, View, ViewStyle } from \"react-native\";\nimport { colors } from \"../constants/design\";\nimport { Box } from \"./Box\";\nimport { Icon } from \"./Icon\";\nimport { LakeText } from \"./LakeText\";\nimport { Pressable } from \"./Pressable\";\n\nconst HEIGHT = 26;\nconst BORDER_WIDTH = 1;\n\nconst styles = StyleSheet.create({\n  disabled: {\n    opacity: 0.3,\n  },\n  switch: {\n    userSelect: \"none\",\n    flexDirection: \"row\",\n    borderRadius: HEIGHT / 2,\n    transform: \"translateZ(0px)\",\n    width: \"min-content\",\n    borderColor: colors.gray[100],\n    borderWidth: BORDER_WIDTH,\n  },\n  handle: {\n    position: \"absolute\",\n    width: HEIGHT,\n    height: HEIGHT,\n    top: -BORDER_WIDTH,\n    borderRadius: HEIGHT / 2,\n    transitionDuration: \"300ms\",\n    transitionTimingFunction: \"ease-in-out\",\n    borderWidth: BORDER_WIDTH,\n  },\n  switchItem: {\n    paddingHorizontal: 8,\n    height: HEIGHT - BORDER_WIDTH * 2,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n\ntype Props = {\n  value: boolean;\n  disabled?: boolean;\n  onToggle: (next: boolean) => void;\n  mode?: \"desktop\" | \"mobile\";\n  onLabel: string;\n  offLabel: string;\n};\n\nexport const Toggle = ({\n  onToggle,\n  value,\n  disabled = false,\n  mode = \"desktop\",\n  onLabel,\n  offLabel,\n}: Props) => {\n  const containerRef = useRef<View | null>(null);\n  const onItemRef = useRef<Text | null>(null);\n  const offItemRef = useRef<Text | null>(null);\n  const [handleStyle, setHandleStyle] = useState<ViewStyle>();\n  const isMobile = mode === \"mobile\";\n  const onColor = value ? colors.positive[500] : colors.gray[500];\n  const offColor = !value ? colors.negative[500] : colors.gray[500];\n\n  useEffect(() => {\n    (value ? onItemRef : offItemRef).current?.measureLayout(\n      containerRef.current as unknown as number,\n      (left, _, width) => {\n        setHandleStyle(prev => ({\n          transitionProperty: prev ? \"width, transform\" : \"none\",\n          width: width + 2 * BORDER_WIDTH,\n          transform: `translateX(${\n            value ? -BORDER_WIDTH : left - (isMobile ? 2 * BORDER_WIDTH : 0)\n          }px)`,\n        }));\n      },\n      () => {},\n    );\n  }, [value, isMobile, onLabel, offLabel]);\n\n  return (\n    <Pressable\n      style={[styles.switch, disabled && styles.disabled]}\n      onPress={() => onToggle(!value)}\n      aria-disabled={disabled}\n      aria-checked={value}\n      disabled={disabled}\n      ref={containerRef}\n      role=\"switch\"\n    >\n      <View\n        style={[\n          styles.handle,\n          handleStyle,\n          {\n            borderColor: value ? colors.positive[500] : colors.negative[500],\n            backgroundColor: value ? colors.positive[50] : colors.negative[50],\n          },\n        ]}\n      />\n\n      <Box style={styles.switchItem} ref={onItemRef}>\n        {isMobile ? (\n          <Icon size={16} name=\"checkmark-circle-regular\" color={onColor} />\n        ) : (\n          <LakeText variant=\"smallMedium\" color={onColor}>\n            {onLabel}\n          </LakeText>\n        )}\n      </Box>\n\n      <Box style={styles.switchItem} ref={offItemRef}>\n        {isMobile ? (\n          <Icon size={16} name=\"subtract-circle-regular\" color={offColor} />\n        ) : (\n          <LakeText variant=\"smallMedium\" color={offColor}>\n            {offLabel}\n          </LakeText>\n        )}\n      </Box>\n    </Pressable>\n  );\n};\n"],"names":["HEIGHT","BORDER_WIDTH","styles","StyleSheet","colors","Toggle","onToggle","value","disabled","mode","onLabel","offLabel","containerRef","useRef","onItemRef","offItemRef","handleStyle","setHandleStyle","useState","isMobile","onColor","offColor","useEffect","_a","left","_","width","prev","jsxs","Pressable","jsx","View","Box","Icon","LakeText"],"mappings":"oXAQA,MAAAA,EAAA,GACAC,EAAA,EAEAC,EAAAC,EAAA,OAAA,CAAiC,SAAA,CACrB,QAAA,EACC,EACX,OAAA,CACQ,WAAA,OACM,cAAA,MACG,aAAAH,EAAA,EACQ,UAAA,kBACZ,MAAA,cACJ,YAAAI,EAAA,KAAA,GAAA,EACqB,YAAAH,CACf,EACf,OAAA,CACQ,SAAA,WACI,MAAAD,EACH,OAAAA,EACC,IAAA,CAAAC,EACF,aAAAD,EAAA,EACiB,mBAAA,QACH,yBAAA,cACM,YAAAC,CACb,EACf,WAAA,CACY,kBAAA,EACS,OAAAD,EAAAC,EAAA,EACa,QAAA,OACvB,WAAA,SACG,eAAA,QACI,CAEpB,CAAA,EAWOI,EAAA,CAAA,CAAgB,SAAAC,EACrB,MAAAC,EACA,SAAAC,EAAA,GACW,KAAAC,EAAA,UACJ,QAAAC,EACP,SAAAC,CAEF,IAAA,CACE,MAAAC,EAAAC,SAAA,IAAA,EACAC,EAAAD,SAAA,IAAA,EACAE,EAAAF,SAAA,IAAA,EACA,CAAAG,EAAAC,CAAA,EAAAC,EAAA,SAAA,EACAC,EAAAV,IAAA,SACAW,EAAAb,EAAAH,EAAA,SAAA,GAAA,EAAAA,EAAA,KAAA,GAAA,EACAiB,EAAAd,EAAAH,EAAA,KAAA,GAAA,EAAAA,EAAA,SAAA,GAAA,EAEAkB,OAAAA,EAAAA,UAAA,IAAA,QACEC,GAAAhB,EAAAO,EAAAC,GAAA,UAAA,MAAAQ,EAAA,cAA0CX,EAAA,QAC3B,CAAAY,EAAAC,EAAAC,IAAA,CAEXT,EAAAU,IAAA,CAAwB,mBAAAA,EAAA,mBAAA,OAC0B,MAAAD,EAAA,EAAAzB,EAC7B,UAAA,cAAAM,EAAA,CAAAN,EAAAuB,GAAAL,EAAA,EAAAlB,EAAA,EAAA,KAGnB,EAAA,CACA,EACJ,IAAA,CACM,EACR,EAAA,CAAAM,EAAAY,EAAAT,EAAAC,CAAA,CAAA,EAGFiB,EACEC,EAAC,CAAA,MAAA,CAAA3B,EAAA,OAAAM,GAAAN,EAAA,QAAA,EACmD,QAAA,IAAAI,EAAA,CAAAC,CAAA,EACpB,gBAAAC,EACf,eAAAD,EACD,SAAAC,EACd,IAAAI,EACK,KAAA,SACA,SAAA,CAELkB,EAAAC,EAAC,CAAA,MAAA,CACQ7B,EAAA,OACEc,EACP,CACA,YAAAT,EAAAH,EAAA,SAAA,GAAA,EAAAA,EAAA,SAAA,GAAA,EACiE,gBAAAG,EAAAH,EAAA,SAAA,EAAA,EAAAA,EAAA,SAAA,EAAA,CACE,CACnE,CACF,CAAA,EACF0B,EAAAE,EAAA,CAAA,MAAA9B,EAAA,WAAA,IAAAY,EAAA,SAAAK,EAAAW,EAAAG,EAAA,CAAA,KAAA,GAAA,KAAA,2BAAA,MAAAb,CAAA,CAAA,EAAAU,EAAAI,EAAA,CAAA,QAAA,cAAA,MAAAd,EAAA,SAAAV,CAAA,CAAA,CAAA,CAAA,EAUAoB,EAAAE,EAAA,CAAA,MAAA9B,EAAA,WAAA,IAAAa,EAAA,SAAAI,EAAAW,EAAAG,EAAA,CAAA,KAAA,GAAA,KAAA,0BAAA,MAAAZ,CAAA,CAAA,EAAAS,EAAAI,EAAA,CAAA,QAAA,cAAA,MAAAb,EAAA,SAAAV,CAAA,CAAA,CAAA,CAAA,CAUA,CAAA,CAAA,CAGN;;;;;;;;;;;;;;;;;;;"}