{"version":3,"file":"_StoriesComponents-BtP3mAPx.js","sources":["../../../packages/lake/__stories__/_StoriesComponents.tsx"],"sourcesContent":["import { Highlight, themes } from \"prism-react-renderer\";\nimport { CSSProperties, ReactNode, memo, useMemo } from \"react\";\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport { Box } from \"../src/components/Box\";\nimport { LakeText } from \"../src/components/LakeText\";\nimport { ScrollView } from \"../src/components/ScrollView\";\nimport { Separator } from \"../src/components/Separator\";\nimport { Space } from \"../src/components/Space\";\nimport { colors, radii, texts } from \"../src/constants/design\";\n\nconst styles = StyleSheet.create({\n  storyTitle: {\n    ...texts.h1,\n  },\n  partTitle: {\n    ...texts.smallSemibold,\n    textTransform: \"uppercase\",\n  },\n  codeBlock: {\n    backgroundColor: colors.gray[0],\n    borderRadius: radii[8],\n    padding: 16,\n  },\n});\n\ntype StoryIntroductionProps = {\n  title: string;\n  description?: string | string[];\n  children: ReactNode;\n};\n\nexport const StoryBlock = ({ title, description, children }: StoryIntroductionProps) => {\n  return (\n    <ScrollView>\n      <LakeText style={styles.storyTitle}>{title}</LakeText>\n      <Space height={8} />\n\n      {match(description)\n        .with(P.string, description => <LakeText>{description}</LakeText>)\n        .with(P.array(P.string), description =>\n          description.map((description, index) => (\n            <View key={index}>\n              <LakeText>{description}</LakeText>\n            </View>\n          )),\n        )\n        .with(P.nullish, () => null)\n        .exhaustive()}\n\n      <Space height={32} />\n\n      {children}\n    </ScrollView>\n  );\n};\n\ntype StoryPartProps = {\n  title: string;\n  children: ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const StoryPart = ({ title, children, style }: StoryPartProps) => {\n  return (\n    <Box>\n      <LakeText style={styles.partTitle}>{title}</LakeText>\n      <Space height={24} />\n      <View style={style}>{children}</View>\n      <Space height={12} />\n      <Separator />\n      <Space height={24} />\n    </Box>\n  );\n};\n\ntype StoryCodeBlockProps = {\n  title: string;\n  description?: string | string[];\n  children: string;\n};\n\nexport const StoryCodePart = ({ title, description, children }: StoryCodeBlockProps) => {\n  const code = useMemo(() => {\n    // remove first line if empty\n    if (children.startsWith(\"\\n\")) {\n      return children.slice(1);\n    }\n    return children;\n  }, [children]);\n\n  return (\n    <Box>\n      <LakeText style={styles.partTitle}>{title}</LakeText>\n      <Space height={8} />\n\n      {match(description)\n        .with(P.string, description => <LakeText>{description}</LakeText>)\n        .with(P.array(P.string), description =>\n          description.map((description, index) => (\n            <View key={index}>\n              <LakeText>{description}</LakeText>\n            </View>\n          )),\n        )\n        .with(P.nullish, () => null)\n        .exhaustive()}\n\n      <TsCodeBlock>{code}</TsCodeBlock>\n      <Space height={12} />\n      <Separator />\n      <Space height={24} />\n    </Box>\n  );\n};\n\ntype TsCodeHighlightProps = {\n  children: string;\n};\n\nconst codeStyle: CSSProperties = {\n  fontFamily:\n    'ui-monospace, SFMono-Regular, \"SF Mono\", Menlo, Consolas, \"Liberation Mono\", monospace',\n  fontSize: 14,\n  lineHeight: 1.65,\n  whiteSpace: \"pre-wrap\",\n};\n\nconst TsCodeBlock = memo<TsCodeHighlightProps>(({ children }) => {\n  return (\n    <Highlight theme={themes.github} code={children} language=\"tsx\">\n      {({ tokens, getLineProps, getTokenProps }) => (\n        <View style={styles.codeBlock}>\n          {tokens.map((line, i) => {\n            const { style, ...props } = getLineProps({ line });\n\n            return (\n              <code key={i} {...props} style={{ ...style, ...codeStyle }}>\n                {line.map((token, key) => (\n                  <span key={key} {...getTokenProps({ token })} />\n                ))}\n              </code>\n            );\n          })}\n        </View>\n      )}\n    </Highlight>\n  );\n});\n"],"names":["styles","StyleSheet","texts","colors","radii","StoryBlock","title","description","children","ScrollView","jsx","LakeText","Space","match","P","index","View","StoryPart","style","Box","Separator","StoryCodePart","code","useMemo","TsCodeBlock","codeStyle","memo","Highlight","themes","tokens","getLineProps","getTokenProps","line","i","props","token","key"],"mappings":"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"}