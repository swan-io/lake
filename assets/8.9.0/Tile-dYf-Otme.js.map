{"version":3,"file":"Tile-dYf-Otme.js","sources":["../../../packages/lake/src/components/Tile.tsx"],"sourcesContent":["import {\n  Children,\n  cloneElement,\n  Fragment,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useState,\n} from \"react\";\nimport { LayoutChangeEvent, StyleProp, StyleSheet, Text, View, ViewStyle } from \"react-native\";\nimport {\n  backgroundColor,\n  colors,\n  negativeSpacings,\n  radii,\n  shadows,\n  Spacings,\n  spacings,\n  texts,\n} from \"../constants/design\";\nimport { isNotNullish } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { LakeText } from \"./LakeText\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: backgroundColor.accented,\n    borderRadius: radii[8],\n    boxShadow: shadows.tile,\n    overflow: \"hidden\",\n  },\n  unselectedContainer: {\n    backgroundColor: backgroundColor.default,\n    boxShadow: `0 0 0 1px ${colors.gray[100]}`,\n  },\n  unselectedHoveredContainer: {\n    backgroundColor: backgroundColor.default,\n    boxShadow: `0 0 0 1px ${colors.gray[500]}`,\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  hoveredContainer: {\n    boxShadow: shadows.tileHover,\n  },\n  headerContainer: {\n    zIndex: 1,\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    justifyContent: \"space-between\",\n  },\n  title: {\n    ...texts.h3,\n    flexGrow: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  fullWidthContent: {\n    marginHorizontal: negativeSpacings[32],\n  },\n  fitToBottom: {\n    marginBottom: negativeSpacings[32],\n  },\n  column: {\n    flexGrow: 1,\n  },\n  descriptionContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n  },\n  description: {\n    width: 1,\n    flexGrow: 1,\n  },\n  headerTitleIcon: {\n    flexGrow: 1,\n  },\n  row: {\n    alignItems: \"stretch\",\n    marginHorizontal: negativeSpacings[12],\n  },\n  rowCol: {\n    flexGrow: 1,\n    padding: spacings[12],\n  },\n  footer: {\n    marginHorizontal: negativeSpacings[32],\n    alignSelf: \"stretch\",\n  },\n});\n\ntype Props = {\n  icon?: ReactNode;\n  title?: ReactNode;\n  description?: ReactNode;\n  headerEnd?: ReactNode;\n  paddingVertical?: Spacings;\n  paddingHorizontal?: Spacings;\n  children?: ReactNode;\n  footer?: ReactNode;\n  numberOfLines?: number;\n  flexBasis?: string;\n  flexGrow?: number;\n  flexShrink?: number;\n  hovered?: boolean;\n  disabled?: boolean;\n  selected?: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const Tile = ({\n  icon,\n  title,\n  description,\n  headerEnd,\n  footer,\n  flexBasis,\n  children,\n  numberOfLines,\n  paddingVertical = 32,\n  paddingHorizontal = 32,\n  hovered = false,\n  flexGrow = 0,\n  flexShrink = 0,\n  disabled = false,\n  selected,\n  style,\n}: Props) => {\n  return (\n    <View\n      role=\"region\"\n      style={[\n        styles.container,\n        selected === false && styles.unselectedContainer,\n        {\n          paddingVertical: spacings[paddingVertical],\n          paddingHorizontal: spacings[paddingHorizontal],\n          flexGrow,\n          flexShrink,\n          flexBasis,\n        },\n        hovered && styles.hoveredContainer,\n        selected === false && hovered && styles.unselectedHoveredContainer,\n        disabled && styles.disabled,\n        style,\n      ]}\n    >\n      {(isNotNullish(title) || isNotNullish(headerEnd) || isNotNullish(description)) && (\n        <View style={styles.headerContainer}>\n          <View style={styles.header}>\n            <View style={styles.headerTitleIcon}>\n              {isNotNullish(icon) && (\n                <>\n                  {icon}\n\n                  <Space height={12} />\n                </>\n              )}\n\n              {isNotNullish(title) && (\n                <Text style={styles.title} role=\"heading\" aria-level={3}>\n                  {title}\n                </Text>\n              )}\n            </View>\n\n            {isNotNullish(headerEnd) ? <View>{headerEnd}</View> : null}\n          </View>\n\n          {isNotNullish(description) && (\n            <>\n              {isNotNullish(title) && <Space height={12} />}\n\n              <View style={styles.descriptionContainer}>\n                <LakeText numberOfLines={numberOfLines} style={styles.description}>\n                  {description}\n                </LakeText>\n              </View>\n            </>\n          )}\n\n          {isNotNullish(children) && <Space height={24} />}\n        </View>\n      )}\n\n      {children}\n\n      {isNotNullish(footer) && (\n        <View\n          style={[styles.footer, { marginTop: paddingVertical, marginBottom: -paddingVertical }]}\n        >\n          {footer}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport const TileFullWidthContent = ({\n  children,\n  flexGrow,\n  fitToBottom = false,\n}: {\n  children: ReactNode;\n  flexGrow?: number;\n  fitToBottom?: boolean;\n}) => {\n  return (\n    <View style={[styles.fullWidthContent, fitToBottom && styles.fitToBottom, { flexGrow }]}>\n      {children}\n    </View>\n  );\n};\n\ntype TileGridProps = {\n  breakpoint?: number;\n  children: ReactNode;\n};\n\nconst SPACE = <Space height={24} />;\n\nexport const TileGrid = ({ children, breakpoint = 1000 }: TileGridProps) => {\n  const [flexDirection, setFlexDirection] = useState<\"row\" | \"column\">(\"row\");\n\n  const onLayout = useCallback(\n    ({\n      nativeEvent: {\n        layout: { width },\n      },\n    }: LayoutChangeEvent) => {\n      setFlexDirection(() => (width < breakpoint ? \"column\" : \"row\"));\n    },\n    [breakpoint],\n  );\n\n  const childrenArray = Children.toArray(children);\n  const leftColumn: ReactNode[] = [];\n  const rightColumn: ReactNode[] = [];\n\n  const nonNullChildren = childrenArray.filter(isNotNullish);\n\n  nonNullChildren.forEach((item, index) => {\n    if (flexDirection === \"column\" || index % 2 === 0) {\n      leftColumn.push(\n        <Fragment key={index}>\n          {item}\n          {SPACE}\n        </Fragment>,\n      );\n    } else {\n      rightColumn.push(\n        <Fragment key={index}>\n          {item}\n          {SPACE}\n        </Fragment>,\n      );\n    }\n  });\n\n  const isRow = flexDirection === \"row\";\n  return (\n    <Box direction={flexDirection} onLayout={onLayout}>\n      <View style={[isRow && styles.column, isRow && { flexBasis: breakpoint / 2 }]}>\n        {leftColumn}\n      </View>\n\n      <Space width={24} />\n\n      <View style={[isRow && styles.column, isRow && { flexBasis: breakpoint / 2 }]}>\n        {rightColumn}\n      </View>\n    </Box>\n  );\n};\n\nexport const TileRows = ({ children, breakpoint = 1000 }: TileGridProps) => {\n  const [flexDirection, setFlexDirection] = useState<\"row\" | \"column\">(\"row\");\n\n  const onLayout = useCallback(\n    ({\n      nativeEvent: {\n        layout: { width },\n      },\n    }: LayoutChangeEvent) => {\n      setFlexDirection(() => (width < breakpoint ? \"column\" : \"row\"));\n    },\n    [breakpoint],\n  );\n\n  const childrenArray = Children.toArray(children);\n  const nonNullChildren = childrenArray.filter(isNotNullish);\n\n  const isRow = flexDirection === \"row\";\n\n  return (\n    <Box direction={flexDirection} onLayout={onLayout} style={styles.row}>\n      {nonNullChildren.map((item, index) => {\n        return (\n          <View key={index} style={[styles.rowCol, isRow && { flexBasis: breakpoint / 2 }]}>\n            {cloneElement(item as unknown as ReactElement, { flexGrow: 1 })}\n          </View>\n        );\n      })}\n    </Box>\n  );\n};\n"],"names":["styles","StyleSheet","backgroundColor","radii","shadows","colors","texts","negativeSpacings","spacings","Tile","icon","title","description","headerEnd","footer","flexBasis","children","numberOfLines","paddingVertical","paddingHorizontal","hovered","flexGrow","flexShrink","disabled","selected","style","jsxs","View","isNotNullish","Fragment","jsx","Space","Text","LakeText","SPACE","TileGrid","breakpoint","flexDirection","setFlexDirection","useState","onLayout","useCallback","width","childrenArray","Children","leftColumn","rightColumn","item","index","isRow","Box"],"mappings":"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"}