{"version":3,"file":"useMergeRefs-466806cb.js","sources":["../../../node_modules/react-native-web/dist/exports/TextInput/index.js","../../../node_modules/react-native-web/dist/cjs/modules/mergeRefs/index.js","../../../node_modules/react-native-web/dist/cjs/modules/useMergeRefs/index.js","../../../packages/lake/src/hooks/useMergeRefs.ts"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useLayoutEffect from '../../modules/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport { getLocaleDirection, useLocaleContext } from '../../modules/useLocale';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\nimport { warnOnce } from '../../modules/warnOnce';\n\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\nvar isSelectionStale = (node, selection) => {\n  var selectionEnd = node.selectionEnd,\n    selectionStart = node.selectionStart;\n  var start = selection.start,\n    end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\nvar setSelection = (node, selection) => {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n      end = selection.end;\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\nvar pickProps = props => pick(props, forwardPropsList);\n\n// If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\nvar focusTimeout = null;\nvar TextInput = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var _props$autoCapitalize = props.autoCapitalize,\n    autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n    autoComplete = props.autoComplete,\n    autoCompleteType = props.autoCompleteType,\n    _props$autoCorrect = props.autoCorrect,\n    autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n    blurOnSubmit = props.blurOnSubmit,\n    caretHidden = props.caretHidden,\n    clearTextOnFocus = props.clearTextOnFocus,\n    dir = props.dir,\n    editable = props.editable,\n    enterKeyHint = props.enterKeyHint,\n    inputMode = props.inputMode,\n    keyboardType = props.keyboardType,\n    _props$multiline = props.multiline,\n    multiline = _props$multiline === void 0 ? false : _props$multiline,\n    numberOfLines = props.numberOfLines,\n    onBlur = props.onBlur,\n    onChange = props.onChange,\n    onChangeText = props.onChangeText,\n    onContentSizeChange = props.onContentSizeChange,\n    onFocus = props.onFocus,\n    onKeyPress = props.onKeyPress,\n    onLayout = props.onLayout,\n    onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n    onResponderEnd = props.onResponderEnd,\n    onResponderGrant = props.onResponderGrant,\n    onResponderMove = props.onResponderMove,\n    onResponderReject = props.onResponderReject,\n    onResponderRelease = props.onResponderRelease,\n    onResponderStart = props.onResponderStart,\n    onResponderTerminate = props.onResponderTerminate,\n    onResponderTerminationRequest = props.onResponderTerminationRequest,\n    onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n    onSelectionChange = props.onSelectionChange,\n    onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder = props.onStartShouldSetResponder,\n    onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n    onSubmitEditing = props.onSubmitEditing,\n    placeholderTextColor = props.placeholderTextColor,\n    _props$readOnly = props.readOnly,\n    readOnly = _props$readOnly === void 0 ? false : _props$readOnly,\n    returnKeyType = props.returnKeyType,\n    rows = props.rows,\n    _props$secureTextEntr = props.secureTextEntry,\n    secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n    selection = props.selection,\n    selectTextOnFocus = props.selectTextOnFocus,\n    spellCheck = props.spellCheck;\n  var type;\n  var _inputMode;\n  if (inputMode != null) {\n    _inputMode = inputMode;\n    if (inputMode === 'email') {\n      type = 'email';\n    } else if (inputMode === 'tel') {\n      type = 'tel';\n    } else if (inputMode === 'search') {\n      type = 'search';\n    } else if (inputMode === 'url') {\n      type = 'url';\n    } else {\n      type = 'text';\n    }\n  } else if (keyboardType != null) {\n    warnOnce('keyboardType', 'keyboardType is deprecated. Use inputMode.');\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n      case 'number-pad':\n      case 'numeric':\n        _inputMode = 'numeric';\n        break;\n      case 'decimal-pad':\n        _inputMode = 'decimal';\n        break;\n      case 'phone-pad':\n        type = 'tel';\n        break;\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n      case 'url':\n        type = 'url';\n        break;\n      default:\n        type = 'text';\n    }\n  }\n  if (secureTextEntry) {\n    type = 'password';\n  }\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(hostNode => {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(() => hostNode => {\n    // TextInput needs to add more methods to the hostNode in addition to those\n    // added by `usePlatformMethods`. This is temporarily until an API like\n    // `TextInput.clear(hostRef)` is added to React Native.\n    if (hostNode != null) {\n      hostNode.clear = function () {\n        if (hostNode != null) {\n          hostNode.value = '';\n        }\n      };\n      hostNode.isFocused = function () {\n        return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n      };\n      handleContentSizeChange(hostNode);\n    }\n  }, [handleContentSizeChange]);\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n    if (onChange) {\n      onChange(e);\n    }\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n  function handleFocus(e) {\n    var hostNode = e.target;\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n    if (hostNode != null) {\n      TextInputState._currentlyFocusedNode = hostNode;\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n      if (selectTextOnFocus) {\n        // Safari requires selection to occur in a setTimeout\n        if (focusTimeout != null) {\n          clearTimeout(focusTimeout);\n        }\n        focusTimeout = setTimeout(() => {\n          if (hostNode != null) {\n            hostNode.select();\n          }\n        }, 0);\n      }\n    }\n  }\n  function handleKeyDown(e) {\n    var hostNode = e.target;\n    // Prevent key events bubbling (see #612)\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n    if (e.key === 'Enter' && !e.shiftKey &&\n    // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n      if (shouldBlurOnSubmit && hostNode != null) {\n        setTimeout(() => hostNode.blur(), 0);\n      }\n    }\n  }\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n          selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n  useLayoutEffect(() => {\n    var node = hostRef.current;\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture\n  });\n  var _useLocaleContext = useLocaleContext(),\n    contextDirection = _useLocaleContext.direction;\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  // 'auto' by default allows browsers to infer writing direction\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  if (returnKeyType != null) {\n    warnOnce('returnKeyType', 'returnKeyType is deprecated. Use enterKeyHint.');\n  }\n  supportedProps.enterKeyHint = enterKeyHint || returnKeyType;\n  supportedProps.inputMode = _inputMode;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  if (editable != null) {\n    warnOnce('editable', 'editable is deprecated. Use readOnly.');\n  }\n  supportedProps.readOnly = readOnly === true || editable === false;\n  if (numberOfLines != null) {\n    warnOnce('numberOfLines', 'TextInput numberOfLines is deprecated. Use rows.');\n  }\n  supportedProps.rows = multiline ? rows != null ? rows : numberOfLines : 1;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = [{\n    '--placeholderTextColor': placeholderTextColor\n  }, styles.textinput$raw, styles.placeholder, props.style, caretHidden && styles.caretHidden];\n  supportedProps.type = multiline ? undefined : type;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  var langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var element = createElement(component, supportedProps, {\n    writingDirection\n  });\n  return element;\n});\nTextInput.displayName = 'TextInput';\n// $FlowFixMe\nTextInput.State = TextInputState;\nvar styles = StyleSheet.create({\n  textinput$raw: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  },\n  placeholder: {\n    placeholderTextColor: 'var(--placeholderTextColor)'\n  },\n  caretHidden: {\n    caretColor: 'transparent'\n  }\n});\nexport default TextInput;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = mergeRefs;\nvar React = _interopRequireWildcard(require(\"react\"));\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction mergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return function forwardRef(node) {\n    args.forEach(ref => {\n      if (ref == null) {\n        return;\n      }\n      if (typeof ref === 'function') {\n        ref(node);\n        return;\n      }\n      if (typeof ref === 'object') {\n        ref.current = node;\n        return;\n      }\n      console.error(\"mergeRefs cannot handle Refs of type boolean, number or string, received ref \" + String(ref));\n    });\n  };\n}\nmodule.exports = exports.default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nexports.__esModule = true;\nexports.default = useMergeRefs;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _mergeRefs = _interopRequireDefault(require(\"../mergeRefs\"));\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction useMergeRefs() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return React.useMemo(() => (0, _mergeRefs.default)(...args),\n  // eslint-disable-next-line\n  [...args]);\n}\nmodule.exports = exports.default;","// https://github.com/necolas/react-native-web/blob/0.19.1/packages/react-native-web/src/modules/useMergeRefs/index.js\n// https://github.com/theKashey/use-callback-ref (for typing)\n\nimport { MutableRefObject, Ref } from \"react\";\n// @ts-expect-error\nimport originalUseMergeRefs from \"react-native-web/dist/cjs/modules/useMergeRefs\";\n\nexport const useMergeRefs = originalUseMergeRefs as <T>(\n  ...refs: Ref<T>[]\n) => MutableRefObject<T | null>;\n"],"names":["isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","forwardPropsList","forwardedProps.defaultProps","forwardedProps.accessibilityProps","forwardedProps.clickProps","forwardedProps.focusProps","forwardedProps.keyboardProps","forwardedProps.mouseProps","forwardedProps.touchProps","forwardedProps.styleProps","pickProps","props","pick","isEventComposing","nativeEvent","focusTimeout","TextInput","React.forwardRef","forwardedRef","_props$autoCapitalize","autoCapitalize","autoComplete","autoCompleteType","_props$autoCorrect","autoCorrect","blurOnSubmit","caretHidden","clearTextOnFocus","dir","editable","enterKeyHint","inputMode","keyboardType","_props$multiline","multiline","numberOfLines","onBlur","onChange","onChangeText","onContentSizeChange","onFocus","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","_props$readOnly","readOnly","returnKeyType","rows","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","spellCheck","type","_inputMode","dimensions","React.useRef","hostRef","handleContentSizeChange","React.useCallback","hostNode","newHeight","newWidth","imperativeRef","React.useMemo","TextInputState","handleBlur","e","handleChange","text","handleFocus","handleKeyDown","blurOnSubmitDefault","shouldBlurOnSubmit","isComposing","handleSelectionChange","useLayoutEffect","component","useElementLayout","useResponderEvents","_useLocaleContext","useLocaleContext","contextDirection","supportedProps","styles","platformMethodsRef","usePlatformMethods","setRef","useMergeRefs","langDirection","getLocaleDirection","componentDirection","writingDirection","element","createElement","StyleSheet","TextInput$1","_interopRequireWildcard","require$$0","exports","mergeRefs","require$$1","_len","args","_key","ref","module","_interopRequireDefault","React","require$$2","_mergeRefs","require$$3","originalUseMergeRefs"],"mappings":"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","x_google_ignoreList":[0,1,2]}