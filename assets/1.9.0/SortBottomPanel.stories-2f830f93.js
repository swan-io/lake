import{S as B,s as S,j as o,a as e,V,c as d,b as n,L as c,F as k}from"./Space-fc9aeadc.js";import{r as y}from"./index-f1f749bf.js";import{L as D}from"./LakeButton-68234c06.js";import{c as v}from"./commonStyles-d52fedae.js";import{B as _}from"./BottomPanel-c0d54234.js";import{I as h}from"./Icon-04eef6d8.js";import{L as T}from"./LakeHeading-fa98ca6a.js";import{L as g}from"./LakeRadio-febbf9f6.js";import{P as b}from"./Pressable-505e66e3.js";import{c as A,S as O,a as q}from"./_StoriesComponents-894fa075.js";import"./extends-98964cd2.js";import"./_commonjsHelpers-042e6b4d.js";import"./index.module-14e7adfc.js";import"./index-e1d4d2ff.js";import"./useBodyClassName-bd00433d.js";import"./math-da6fe089.js";import"./FocusTrap-7ce5bd24.js";import"./array-b3630b94.js";import"./LoadingView-9ab8b6db.js";import"./colors-298625c7.js";import"./Portal-863d393f.js";import"./index-96c5f47c.js";import"./WithCurrentColor-2cb5499b.js";import"./TransitionView-e11668c7.js";import"./index-eb459b63.js";import"./index-50fc0222.js";import"./Svg-1b5e675d.js";import"./useMergeRefs-946587e8.js";const a=B.create({head:{padding:24,paddingBottom:12},option:{display:"flex",flexDirection:"row",alignItems:"center",paddingHorizontal:S[24],paddingVertical:S[12]},arrowDown:{transform:"rotate(180deg)"},text:{...v.fill}}),p=({visible:l,title:s,value:t,fields:i,onChange:f,onClose:u})=>o(_,{visible:l,onPressClose:u,children:[e(V,{style:a.head,children:e(T,{level:3,variant:"h3",children:s})}),i.map((r,w)=>o(y.Fragment,{children:[o(b,{style:a.option,onPress:()=>{f({field:r.name,direction:"Asc"}),u()},children:[e(h,{name:"arrow-up-filled",size:12,color:d.gray[600],style:a.arrowDown}),e(n,{width:12}),e(c,{variant:"smallRegular",color:d.gray[600],style:a.text,children:r.ascLabel}),e(n,{width:16}),e(g,{value:(t==null?void 0:t.field)===r.name&&t.direction==="Asc"})]}),o(b,{style:a.option,onPress:()=>{f({field:r.name,direction:"Desc"}),u()},children:[e(h,{name:"arrow-up-filled",size:12,color:d.gray[600]}),e(n,{width:12}),e(c,{variant:"smallRegular",color:d.gray[600],style:a.text,children:r.descLabel}),e(n,{width:16}),e(g,{value:(t==null?void 0:t.field)===r.name&&t.direction==="Desc"})]}),w<i.length-1&&e(A,{})]},r.name)),e(n,{height:12})]});try{p.displayName="SortBottomPanel",p.__docgenInfo={description:"",displayName:"SortBottomPanel",props:{visible:{defaultValue:null,description:"",name:"visible",required:!0,type:{name:"boolean"}},title:{defaultValue:null,description:"",name:"title",required:!0,type:{name:"string"}},fields:{defaultValue:null,description:"",name:"fields",required:!0,type:{name:"SortField<T>[]"}},value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"SortValue<T> | undefined"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: SortValue<T>) => void"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"() => void"}}}}}catch{}const C=B.create({button:{alignSelf:"flex-start"}}),me={title:"Forms/SortBottomPanel",component:p},F=[{name:"status",ascLabel:"Status: A-Z",descLabel:"Status: Z-A"},{name:"type",ascLabel:"Type: A-Z",descLabel:"Type: Z-A"},{name:"amount",ascLabel:"Amount: lowest to highest",descLabel:"Amount: highest to lowest"},{name:"executionDate",ascLabel:"Execution date: oldest to newest",descLabel:"Execution date: newest to oldest"}],m=()=>{const[l,s]=y.useState(!1),[t,i]=y.useState();return e(O,{title:"SortBottomPanel",children:o(q,{title:"Default",children:[e(D,{style:C.button,onPress:()=>s(!0),children:"Open sort panel"}),e(n,{height:24}),t!=null&&o(k,{children:[o(c,{children:["Sort by: ",t.field]}),o(c,{children:["Direction: ",t.direction]})]}),e(p,{visible:l,title:"Sort by",fields:F,value:t,onChange:i,onClose:()=>s(!1)})]})})};var L,x,P;m.parameters={...m.parameters,docs:{...(L=m.parameters)==null?void 0:L.docs,source:{originalSource:`() => {
  const [opened, setOpened] = useState(false);
  const [value, setValue] = useState<SortValue<FieldName> | undefined>();
  return <StoryBlock title="SortBottomPanel">
      <StoryPart title="Default">
        <LakeButton style={styles.button} onPress={() => setOpened(true)}>
          Open sort panel
        </LakeButton>

        <Space height={24} />

        {value != null && <>
            <LakeText>Sort by: {value.field}</LakeText>
            <LakeText>Direction: {value.direction}</LakeText>
          </>}

        <SortBottomPanel visible={opened} title="Sort by" fields={fields} value={value} onChange={setValue} onClose={() => setOpened(false)} />
      </StoryPart>
    </StoryBlock>;
}`,...(P=(x=m.parameters)==null?void 0:x.docs)==null?void 0:P.source}}};const ce=["Default"];export{m as Default,ce as __namedExportsOrder,me as default};
//# sourceMappingURL=SortBottomPanel.stories-2f830f93.js.map
