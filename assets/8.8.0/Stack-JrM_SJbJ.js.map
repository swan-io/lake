{"version":3,"file":"Stack-JrM_SJbJ.js","sources":["../../../packages/lake/src/components/Stack.tsx"],"sourcesContent":["import { Children, forwardRef, Fragment } from \"react\";\nimport { View } from \"react-native\";\nimport { isNullish } from \"../utils/nullish\";\nimport { Box, BoxProps } from \"./Box\";\nimport { Space, SpacingValue } from \"./Space\";\n\ntype Props = BoxProps & {\n  space?: SpacingValue;\n};\n\nexport const Stack = forwardRef<View, Props>(\n  // Default <View /> styles https://github.com/necolas/react-native-web/blob/0.19.10/packages/react-native-web/src/exports/View/index.js#L146\n  ({ children, space, ...props }, forwardedRef) => {\n    const { direction = \"column\" } = props;\n    const horizontal = direction === \"row\" || direction === \"rowReverse\";\n\n    return (\n      <Box ref={forwardedRef} {...props}>\n        {Children.map(children, (child, index) => {\n          // null, undefined, true and false are valid children. They simply donâ€™t render\n          if (isNullish(child) || typeof child === \"boolean\") {\n            return child;\n          }\n\n          return (\n            <Fragment>\n              {index !== 0 && (horizontal ? <Space width={space} /> : <Space height={space} />)}\n              {child}\n            </Fragment>\n          );\n        })}\n      </Box>\n    );\n  },\n);\n"],"names":["Stack","forwardRef","children","space","props","forwardedRef","direction","horizontal","jsx","Box","Children","child","index","isNullish","Fragment","Space"],"mappings":"0GAUA,MAAAA,EAAAC,EAAA,WAEA,CAAA,CAAA,SAAAC,EAAA,MAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CACA,KAAA,CAAA,UAAAC,EAAA,QAAA,EAAAF,EACAG,EAAAD,IAAA,OAAAA,IAAA,aAGA,OAAAE,EAAA,IAAAC,EAAA,CAAA,IAAAJ,EAAA,GAAAD,EACA,SAAAM,EAAA,SAAA,IAAAR,EAAA,CAAAS,EAAAC,IAEAC,EAAAF,CAAA,GAAA,OAAAA,GAAA,UACAA,SAIAG,WACA,CAAA,SAAA,CAAAF,IAAA,IAAAL,EAAAC,EAAAA,IAAAO,EAAA,CAAA,MAAAZ,EAAA,EAAAK,EAAA,IAAAO,EAAA,CAAA,OAAAZ,CAAA,CAAA,GACAQ,CACA,CAAA,CAAA,CAEA,CACA,CAAA,CAEA,CACA"}