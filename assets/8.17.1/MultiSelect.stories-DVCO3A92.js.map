{"version":3,"file":"MultiSelect.stories-DVCO3A92.js","sources":["../../../packages/lake/src/components/SectionList.tsx","../../../packages/lake/src/components/MultiSelect.tsx","../../../packages/lake/__stories__/MultiSelect.stories.tsx"],"sourcesContent":["import { ForwardedRef, Fragment, ReactNode, forwardRef, useEffect, useId, useRef } from \"react\";\nimport { StyleProp, StyleSheet, View, ViewStyle, WebRole } from \"react-native\";\nimport { ListRenderItemInfo } from \"./FlatList\";\nimport { ScrollView, ScrollViewProps, ScrollViewRef } from \"./ScrollView\";\n\nconst styles = StyleSheet.create({\n  scrollTracker: {\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    right: 0,\n    bottom: 0,\n  },\n});\n\nexport type SectionListRef = ScrollViewRef;\n\ntype Section<T> = {\n  title: string;\n  data: T[];\n};\n\ntype Props<T> = {\n  ItemSeparatorComponent?: ReactNode;\n  ListEmptyComponent?: ReactNode;\n  ListFooterComponent?: ReactNode;\n  ListHeaderComponent?: ReactNode;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  horizontal?: boolean;\n  keyExtractor: (item: T, index: number) => string;\n  onEndReached?: () => void;\n  onEndReachedThresholdPx?: number;\n  onKeyDown?: ScrollViewProps[\"onKeyDown\"];\n  onScroll?: ScrollViewProps[\"onScroll\"];\n  renderItem: (info: ListRenderItemInfo<T>) => ReactNode;\n  renderSectionHeader?: (section: Section<T>) => ReactNode;\n  role?: WebRole;\n  scrollEventThrottle?: number;\n  sections: Section<T>[];\n  showsScrollIndicators?: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst SectionListWithRef = <T,>(\n  {\n    ItemSeparatorComponent,\n    ListEmptyComponent,\n    ListFooterComponent,\n    ListHeaderComponent,\n    contentContainerStyle,\n    horizontal = false,\n    keyExtractor,\n    onEndReached,\n    onEndReachedThresholdPx = 200,\n    onKeyDown,\n    onScroll,\n    renderItem,\n    renderSectionHeader,\n    role,\n    scrollEventThrottle = 16,\n    sections,\n    showsScrollIndicators = true,\n    style,\n  }: Props<T>,\n  forwardedRef: ForwardedRef<SectionListRef>,\n) => {\n  const groupId = useId();\n  const scrollTrackerRef = useRef<View>(null);\n\n  const scrollTrackerStyle = horizontal\n    ? { top: 0, width: onEndReachedThresholdPx }\n    : { left: 0, height: onEndReachedThresholdPx };\n\n  useEffect(() => {\n    const element = scrollTrackerRef.current as unknown as HTMLElement;\n\n    if (element != null) {\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            onEndReached?.();\n          }\n        });\n      });\n\n      observer.observe(element);\n\n      return () => {\n        observer.unobserve(element);\n      };\n    }\n    // re-create an observer only on list length change\n  }, [sections.length]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <ScrollView\n      contentContainerStyle={contentContainerStyle}\n      horizontal={horizontal}\n      onKeyDown={onKeyDown}\n      onScroll={onScroll}\n      ref={forwardedRef}\n      role={role}\n      scrollEventThrottle={scrollEventThrottle}\n      showsScrollIndicators={showsScrollIndicators}\n      style={style}\n    >\n      {ListHeaderComponent}\n\n      {sections.length <= 0\n        ? ListEmptyComponent\n        : sections.map(section => (\n            <Fragment key={`group-${groupId}-${section.title}`}>\n              {renderSectionHeader?.(section)}\n\n              {section.data.map((item, index) => (\n                <Fragment key={keyExtractor(item, index)}>\n                  {index !== 0 && ItemSeparatorComponent}\n                  {renderItem({ item, index })}\n                </Fragment>\n              ))}\n            </Fragment>\n          ))}\n\n      {ListFooterComponent}\n\n      <View role=\"none\" ref={scrollTrackerRef} style={[styles.scrollTracker, scrollTrackerStyle]} />\n    </ScrollView>\n  );\n};\n\nexport const SectionList = forwardRef(SectionListWithRef) as <T>(\n  props: Props<T> & { ref?: ForwardedRef<SectionListRef> },\n) => ReturnType<typeof SectionListWithRef>;\n","import { Array, Dict, Option } from \"@swan-io/boxed\";\nimport { memo, useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextInput,\n  TextStyle,\n  View,\n  ViewStyle,\n} from \"react-native\";\nimport { ColorVariants, backgroundColor, colors, radii, shadows, texts } from \"../constants/design\";\nimport { useBoolean } from \"../hooks/useBoolean\";\nimport { useDisclosure } from \"../hooks/useDisclosure\";\nimport { groupBy } from \"../utils/array\";\nimport { isNotNullish, isNotNullishOrEmpty } from \"../utils/nullish\";\nimport { safeSplitAround } from \"../utils/string\";\nimport { Box } from \"./Box\";\nimport { FlatList } from \"./FlatList\";\nimport { Icon } from \"./Icon\";\nimport { InputError } from \"./InputError\";\nimport { Popover } from \"./Popover\";\nimport { PressableText } from \"./Pressable\";\nimport { SectionList } from \"./SectionList\";\nimport { Space } from \"./Space\";\nimport { Tag } from \"./Tag\";\n\nconst MAX_INPUT_HEIGHT = 120;\nconst ITEM_ELEMENT_HEIGHT = 32;\nconst NB_SUGGESTION_DISPLAYED = 10.5;\n\nconst styles = StyleSheet.create({\n  base: {\n    ...texts.regular,\n    backgroundColor: backgroundColor.accented,\n    borderColor: colors.gray[100],\n    borderRadius: radii[6],\n    borderWidth: 1,\n    cursor: \"default\",\n    overflow: \"hidden\",\n    transitionDuration: \"150ms\",\n    transitionProperty: \"border-color, box-shadow\",\n  },\n  errored: {\n    borderColor: colors.negative[500],\n  },\n  tag: {\n    marginRight: 4,\n    marginVertical: 2,\n  },\n  hovered: {\n    boxShadow: shadows.tile,\n  },\n  focused: {\n    borderColor: colors.gray[500],\n    boxShadow: shadows.tile,\n    outlineStyle: \"none\",\n  },\n  disabled: {\n    backgroundColor: colors.gray[50],\n    borderColor: colors.gray[100],\n    cursor: \"not-allowed\",\n  },\n  actions: {\n    marginVertical: \"auto\",\n    position: \"absolute\",\n    bottom: 0,\n    top: 0,\n    right: 20,\n  },\n  placeholder: {\n    ...texts.regular,\n    color: colors.gray[300],\n    userSelect: \"none\",\n  },\n  list: {\n    marginVertical: 4,\n    maxHeight: ITEM_ELEMENT_HEIGHT * NB_SUGGESTION_DISPLAYED,\n    minHeight: 224,\n  },\n  filterContainer: {\n    flexGrow: 1,\n    flexShrink: 1,\n    margin: 16,\n  },\n  filterInput: {\n    ...texts.regular,\n    backgroundColor: backgroundColor.accented,\n    borderColor: colors.gray[100],\n    borderRadius: 4,\n    borderWidth: 1,\n    flexGrow: 1,\n    flexShrink: 1,\n    height: 40,\n    outlineStyle: \"none\",\n    paddingHorizontal: 12,\n    paddingLeft: 40,\n    placeholderTextColor: colors.gray[300],\n  },\n  filterFocused: {\n    borderColor: colors.gray[200],\n  },\n  searchIcon: {\n    position: \"absolute\",\n    left: 14,\n  },\n  tagsList: {\n    flexWrap: \"wrap\",\n    maxHeight: MAX_INPUT_HEIGHT,\n    minHeight: 40,\n    overflowY: \"auto\",\n    paddingHorizontal: 16,\n    paddingRight: 60,\n    paddingVertical: 8,\n  },\n  groupTitleBase: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    flexGrow: 1,\n    flexShrink: 1,\n    justifyContent: \"space-between\",\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    transitionDuration: \"200ms\",\n    transitionProperty: \"background-color\",\n  },\n  groupTitle: {\n    ...texts.semibold,\n    userSelect: \"none\",\n  },\n  line: {\n    ...texts.regular,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    transitionDuration: \"200ms\",\n    transitionProperty: \"background-color\",\n    userSelect: \"none\",\n  },\n  lineInGroup: {\n    paddingLeft: 24,\n  },\n  emptyList: {\n    height: 136,\n  },\n  emptyListText: {\n    color: colors.gray.primary,\n  },\n});\n\nexport type MultiSelectItem = {\n  disabled?: boolean;\n  group: string;\n  label: string;\n  value: string;\n};\n\nexport type MultiSelectProps<I> = {\n  color?: ColorVariants;\n  disabled?: boolean;\n  error?: string;\n  emptyResultText?: string;\n  enableGroups?: boolean;\n  filterPlaceholder?: string;\n  items: I[];\n  onValueChange: (values: string[]) => void;\n  placeholder?: string;\n  renderTagGroup?: (items: readonly MultiSelectItem[]) => string;\n  style?: StyleProp<ViewStyle>;\n  values: string[];\n  id?: string;\n};\n\nexport const MultiSelect = memo<MultiSelectProps<MultiSelectItem>>(\n  ({\n    color = \"gray\",\n    disabled = false,\n    emptyResultText,\n    enableGroups = true,\n    filterPlaceholder,\n    items,\n    onValueChange,\n    placeholder,\n    renderTagGroup,\n    error,\n    style,\n    values,\n    id,\n  }) => {\n    const [filter, setFilter] = useState<string>(\"\");\n    const [filterFocused, setFilterFocused] = useBoolean(false);\n\n    const shouldScrollToBottomRef = useRef(false);\n    const selectedTagListRef = useRef<View & Element>(null);\n    const inputRef = useRef<View>(null);\n    const [visible, { open, close }] = useDisclosure(false);\n\n    const tint50 = colors[color][50];\n    const tint100 = colors[color][100];\n\n    useEffect(() => {\n      if (!visible) {\n        setFilter(\"\");\n      }\n    }, [visible]);\n\n    useEffect(() => {\n      if (shouldScrollToBottomRef.current) {\n        const top = selectedTagListRef.current?.scrollHeight;\n        selectedTagListRef.current?.scrollTo({ top });\n      }\n\n      shouldScrollToBottomRef.current = false;\n    }, [values]);\n\n    const handleSelectItem = (item: MultiSelectItem) => {\n      shouldScrollToBottomRef.current = true;\n      onValueChange([...values, item.value]);\n    };\n\n    const handleRemoveItem = (item: MultiSelectItem) => {\n      onValueChange(values.filter(index => index !== item.value));\n    };\n\n    const handleClearAll = () => {\n      onValueChange([]);\n    };\n\n    const handleSelectGroup = (groupItems: readonly MultiSelectItem[]) => {\n      shouldScrollToBottomRef.current = true;\n      const items = groupItems.map(item => item.value);\n      const newValue = [...new Set([...values, ...items])];\n      onValueChange(newValue);\n    };\n\n    // Used to get full selected value informations in O(1).\n    const valueItemMapping = useMemo(\n      () =>\n        items.reduce((acc: Record<string, MultiSelectItem>, item) => {\n          acc[item.value] = item;\n          return acc;\n        }, {}),\n      [items],\n    );\n\n    const selectedTags = useMemo(\n      () => values.map(value => valueItemMapping[value]).filter(isNotNullish),\n      [values, valueItemMapping],\n    );\n\n    const filteredItems = useMemo(() => {\n      const remainingTags = items.filter(item => !values.includes(item.value));\n      const cleanedFilter = filter.trim().toLowerCase();\n\n      return cleanedFilter === \"\"\n        ? remainingTags\n        : remainingTags.filter(({ label }) => label.toLowerCase().includes(cleanedFilter));\n    }, [filter, items, values]);\n\n    const sections = useMemo(() => {\n      return Array.filterMap(\n        Dict.entries(groupBy(filteredItems, ({ group }) => group)),\n        ([groupName, data]) =>\n          data === undefined ? Option.None() : Option.Some({ title: groupName, data }),\n      );\n    }, [filteredItems]);\n\n    const ListHeaderComponent = useMemo(\n      () => (\n        <Box direction=\"row\" alignItems=\"center\" style={styles.filterContainer}>\n          <TextInput\n            autoComplete=\"off\"\n            inputMode=\"search\"\n            multiline={false}\n            rows={1}\n            onChangeText={filterValue => setFilter(filterValue)}\n            placeholder={filterPlaceholder}\n            value={filter}\n            onFocus={setFilterFocused.on}\n            onBlur={setFilterFocused.off}\n            style={[styles.filterInput, filterFocused && styles.filterFocused]}\n          />\n\n          <Icon\n            name=\"search-filled\"\n            color={colors[color].primary}\n            size={20}\n            style={styles.searchIcon}\n          />\n        </Box>\n      ),\n      [filter, filterFocused, setFilterFocused, filterPlaceholder, color],\n    );\n\n    const ListEmptyComponent = useMemo(\n      () => (\n        <Box justifyContent=\"center\" alignItems=\"center\" style={styles.emptyList}>\n          <Icon name=\"clipboard-search-regular\" size={24} color={colors.gray.primary} />\n\n          {isNotNullishOrEmpty(emptyResultText) && (\n            <>\n              <Space height={8} />\n              <Text style={styles.emptyListText}>{emptyResultText}</Text>\n            </>\n          )}\n        </Box>\n      ),\n      [emptyResultText],\n    );\n\n    return (\n      <View style={style}>\n        <Pressable\n          id={id}\n          ref={inputRef}\n          aria-haspopup=\"listbox\"\n          role=\"button\"\n          aria-expanded={visible}\n          disabled={disabled}\n          onPress={open}\n          style={({ hovered, focused }) => [\n            styles.base,\n            hovered && styles.hovered,\n            (focused || visible) && styles.focused,\n            disabled && styles.disabled,\n            isNotNullish(error) && styles.errored,\n          ]}\n        >\n          <Box ref={selectedTagListRef} alignItems=\"center\" direction=\"row\" style={styles.tagsList}>\n            {selectedTags.length > 0 ? (\n              selectedTags.map(item => (\n                <Tag\n                  key={item.value}\n                  color={color}\n                  onPressRemove={disabled ? undefined : () => handleRemoveItem(item)}\n                  style={styles.tag}\n                >\n                  {item.label}\n                </Tag>\n              ))\n            ) : placeholder !== \"\" ? (\n              <Text role=\"label\" numberOfLines={1} style={styles.placeholder}>\n                {placeholder}\n              </Text>\n            ) : null}\n          </Box>\n\n          <Box direction=\"row\" alignItems=\"center\" style={styles.actions}>\n            {selectedTags.length >= 1 && !disabled && (\n              <>\n                <Pressable role=\"button\" onPress={handleClearAll}>\n                  <Icon name=\"dismiss-filled\" color={colors.gray.primary} size={15} />\n                </Pressable>\n\n                <Space width={8} />\n              </>\n            )}\n\n            <Icon\n              color={colors.gray.primary}\n              name={visible ? \"chevron-up-filled\" : \"chevron-down-filled\"}\n              size={20}\n            />\n          </Box>\n        </Pressable>\n\n        <Popover\n          role=\"listbox\"\n          matchReferenceWidth={true}\n          onDismiss={close}\n          referenceRef={inputRef}\n          returnFocus={true}\n          visible={visible}\n        >\n          <View style={styles.list}>\n            {enableGroups ? (\n              <SectionList\n                role=\"listbox\"\n                aria-multiselectable={true}\n                keyExtractor={(item, index) => `group-field-${item.value}-${index}`}\n                ListHeaderComponent={ListHeaderComponent}\n                ListEmptyComponent={ListEmptyComponent}\n                ListFooterComponent={<Space height={16} />}\n                sections={sections}\n                renderSectionHeader={({ title, data }) => (\n                  <Pressable\n                    role=\"listitem\"\n                    onPress={() => handleSelectGroup(data)}\n                    style={({ hovered, pressed, focused }) => [\n                      styles.groupTitleBase,\n                      (hovered || focused) && { backgroundColor: tint50 },\n                      pressed && { backgroundColor: tint100 },\n                    ]}\n                  >\n                    <Text numberOfLines={1} style={styles.groupTitle}>\n                      {title}\n                    </Text>\n\n                    {isNotNullish(renderTagGroup) && (\n                      <Tag color={color}>{renderTagGroup(data)}</Tag>\n                    )}\n                  </Pressable>\n                )}\n                renderItem={({ item }) => (\n                  <LineItem\n                    color={color}\n                    filter={filter}\n                    item={item}\n                    handleSelectItem={handleSelectItem}\n                    style={styles.lineInGroup}\n                  />\n                )}\n              />\n            ) : (\n              <FlatList\n                role=\"list\"\n                data={filteredItems}\n                keyExtractor={item => `field-${item.value}`}\n                ListHeaderComponent={ListHeaderComponent}\n                ListEmptyComponent={ListEmptyComponent}\n                ListFooterComponent={<Space height={8} />}\n                renderItem={({ item }) => (\n                  <LineItem\n                    color={color}\n                    filter={filter}\n                    item={item}\n                    handleSelectItem={handleSelectItem}\n                  />\n                )}\n              />\n            )}\n          </View>\n        </Popover>\n\n        <InputError message={error} />\n      </View>\n    );\n  },\n);\n\ntype LineItemProps = {\n  color: ColorVariants;\n  filter: string;\n  handleSelectItem: (item: MultiSelectItem) => void;\n  item: MultiSelectItem;\n  style?: StyleProp<TextStyle>;\n};\n\nconst LineItem = ({ item, color, filter, handleSelectItem, style }: LineItemProps) => {\n  const { label, disabled = false } = item;\n  const cleanFilter = filter.trim().toLowerCase();\n\n  const tint50 = colors[color][50];\n  const tint100 = colors[color][100];\n\n  const tokens = useMemo(\n    () => (disabled || cleanFilter === \"\" ? label : safeSplitAround(label, cleanFilter)),\n    [label, disabled, cleanFilter],\n  );\n\n  return (\n    <PressableText\n      role=\"listitem\"\n      disabled={disabled}\n      numberOfLines={1}\n      onPress={() => handleSelectItem(item)}\n      style={({ hovered, pressed }) => [\n        styles.line,\n        style,\n        hovered && { backgroundColor: tint50 },\n        pressed && { backgroundColor: tint100 },\n        disabled && { backgroundColor: colors.gray[50], color: colors.gray[100] },\n      ]}\n    >\n      {typeof tokens === \"string\"\n        ? tokens\n        : tokens.map((token, index) => {\n            const colored = token.toLowerCase() === cleanFilter;\n\n            if (!colored) {\n              return token;\n            }\n\n            return (\n              <Text key={index} style={{ color }}>\n                {token}\n              </Text>\n            );\n          })}\n    </PressableText>\n  );\n};\n","import { Meta } from \"@storybook/react\";\nimport { useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Except } from \"type-fest\";\nimport { MultiSelect, MultiSelectItem, MultiSelectProps } from \"../src/components/MultiSelect\";\nimport { ColorVariants, colors } from \"../src/constants/design\";\nimport { StoryBlock, StoryPart } from \"./_StoriesComponents\";\n\nconst styles = StyleSheet.create({\n  select: {\n    maxWidth: 400,\n  },\n});\n\nexport default {\n  title: \"Forms/MultiSelect\",\n  component: MultiSelect,\n} as Meta<typeof MultiSelect>;\n\nconst items: MultiSelectItem[] = [\n  { label: \"Camille\", value: \"camille\", group: \"C\" },\n  { label: \"Charlotte\", value: \"charlotte\", group: \"C\" },\n  { label: \"Francis\", value: \"francis\", group: \"F\" },\n  { label: \"Émilie\", value: \"emilie\", group: \"E\" },\n  { label: \"François\", value: \"francois\", group: \"F\" },\n  { label: \"Laura\", value: \"laura\", group: \"L\" },\n  { label: \"Marie-Anne\", value: \"marie_anne\", group: \"M\" },\n  { label: \"Natasha\", value: \"natasha\", group: \"N\", disabled: true },\n  { label: \"Nicolas\", value: \"nicolas\", group: \"N\" },\n  { label: \"Pierre\", value: \"pierre\", group: \"P\" },\n];\n\nconst EditableMultiSelect = ({\n  initialValues = [],\n  ...props\n}: Except<MultiSelectProps<MultiSelectItem>, \"onValueChange\" | \"items\" | \"values\"> & {\n  items?: MultiSelectItem[];\n  initialValues?: string[];\n}) => {\n  const [values, setValues] = useState(initialValues);\n\n  return (\n    <MultiSelect\n      placeholder=\"Select people...\"\n      filterPlaceholder=\"Search...\"\n      emptyResultText=\"No result\"\n      values={values}\n      items={items}\n      onValueChange={setValues}\n      style={styles.select}\n      {...props}\n    />\n  );\n};\n\nexport const Variations = () => {\n  return (\n    <StoryBlock title=\"MultiSelect variations\">\n      <StoryPart title=\"Default\">\n        <EditableMultiSelect />\n      </StoryPart>\n\n      <StoryPart title=\"Without groups\">\n        <EditableMultiSelect enableGroups={false} />\n      </StoryPart>\n\n      <StoryPart title=\"Disabled\">\n        <EditableMultiSelect disabled={true} />\n      </StoryPart>\n\n      <StoryPart title=\"Disabled with a value\">\n        <EditableMultiSelect disabled={true} initialValues={[\"charlotte\"]} />\n      </StoryPart>\n\n      <StoryPart title=\"Without any option\">\n        <EditableMultiSelect items={[]} />\n      </StoryPart>\n    </StoryBlock>\n  );\n};\n\nexport const Colors = () => {\n  return (\n    <StoryBlock title=\"MultiSelect colors\">\n      {Object.keys(colors).map(color => (\n        <StoryPart key={color} title={color}>\n          <EditableMultiSelect color={color as ColorVariants} />\n        </StoryPart>\n      ))}\n    </StoryBlock>\n  );\n};\n"],"names":["styles","StyleSheet","SectionListWithRef","ItemSeparatorComponent","ListEmptyComponent","ListFooterComponent","ListHeaderComponent","contentContainerStyle","horizontal","keyExtractor","onEndReached","onEndReachedThresholdPx","onKeyDown","onScroll","renderItem","renderSectionHeader","role","scrollEventThrottle","sections","showsScrollIndicators","style","forwardedRef","groupId","useId","scrollTrackerRef","useRef","scrollTrackerStyle","useEffect","element","observer","entries","entry","jsxs","ScrollView","section","Fragment","item","index","jsx","View","SectionList","forwardRef","MAX_INPUT_HEIGHT","ITEM_ELEMENT_HEIGHT","NB_SUGGESTION_DISPLAYED","texts","backgroundColor","colors","radii","shadows","MultiSelect","memo","color","disabled","emptyResultText","enableGroups","filterPlaceholder","items","onValueChange","placeholder","renderTagGroup","error","values","id","filter","setFilter","useState","filterFocused","setFilterFocused","useBoolean","shouldScrollToBottomRef","selectedTagListRef","inputRef","visible","open","close","useDisclosure","tint50","tint100","top","_a","_b","handleSelectItem","handleRemoveItem","handleClearAll","handleSelectGroup","groupItems","newValue","valueItemMapping","useMemo","acc","selectedTags","value","isNotNullish","filteredItems","remainingTags","cleanedFilter","label","Array","Dict","groupBy","group","groupName","data","Option","Box","TextInput","filterValue","Icon","isNotNullishOrEmpty","Space","Text","Pressable","hovered","focused","Tag","Popover","title","pressed","LineItem","FlatList","InputError","cleanFilter","tokens","safeSplitAround","PressableText","token","create","select","maxWidth","MultiSelect_stories","component","EditableMultiSelect","initialValues","props","setValues","Variations","StoryBlock","StoryPart","Colors","Object","keys","map"],"mappings":"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"}