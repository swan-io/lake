{"version":3,"file":"useResponsive-awT94KYr.js","sources":["../../../packages/lake/src/utils/windowSize.ts","../../../packages/lake/src/hooks/useBreakpoint.ts","../../../packages/lake/src/hooks/useResponsive.ts"],"sourcesContent":["// Based on https://github.com/necolas/react-native-web/blob/0.20.0/packages/react-native-web/src/exports/Dimensions/index.js\n\nexport type WindowSize = {\n  width: number;\n  height: number;\n};\n\nconst get = (): WindowSize => {\n  const viewport = window.visualViewport;\n\n  /**\n   * iOS does not update viewport dimensions on keyboard open/close.\n   * window.visualViewport(https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport)\n   * is used instead of document.documentElement.clientHeight (which remains as a fallback)\n   */\n  if (viewport != null) {\n    /**\n     * We are multiplying by scale because height and width from visual viewport\n     * also react to pinch zoom, and become smaller when zoomed. But it is not desired\n     * behaviour, since originally documentElement client height and width were used,\n     * and they do not react to pinch zoom.\n     */\n    return {\n      width: Math.round(viewport.width * viewport.scale),\n      height: Math.round(viewport.height * viewport.scale),\n    };\n  }\n\n  const documentElement = window.document.documentElement;\n\n  return {\n    width: documentElement.clientWidth,\n    height: documentElement.clientHeight,\n  };\n};\n\nconst callbacks = new Set<(value: WindowSize) => void>();\n\nlet currentSize: WindowSize = get();\n\nconst onResize = () => {\n  currentSize = get();\n  callbacks.forEach(callback => callback(currentSize));\n};\n\nexport const windowSize = {\n  get: () => currentSize,\n\n  subscribe: (callback: (size: WindowSize) => void) => {\n    callbacks.add(callback);\n\n    return () => {\n      callbacks.delete(callback);\n    };\n  },\n};\n\nif (window.visualViewport != null) {\n  window.visualViewport.addEventListener(\"resize\", onResize, false);\n} else {\n  window.addEventListener(\"resize\", onResize, false);\n}\n","// Based on https://github.com/necolas/react-native-web/blob/0.20.0/packages/react-native-web/src/exports/useWindowDimensions/index.js\n\nimport { useCallback, useSyncExternalStore } from \"react\";\nimport { windowSize } from \"../utils/windowSize\";\n\nexport const useBreakpoint = (breakpoint: number) =>\n  useSyncExternalStore(\n    useCallback(onStoreChange => {\n      const unsubscribe = windowSize.subscribe(onStoreChange);\n      return unsubscribe;\n    }, []),\n    useCallback(() => {\n      return windowSize.get().width >= breakpoint;\n    }, [breakpoint]),\n  );\n","import { useCallback } from \"react\";\nimport { useBreakpoint } from \"./useBreakpoint\";\n\nexport const useResponsive = (breakpoint = 992) => {\n  const desktop = useBreakpoint(breakpoint);\n\n  const media = useCallback(\n    <T>(values: { mobile: T; desktop?: T }): T =>\n      desktop ? (values.desktop ?? values.mobile) : values.mobile,\n    [desktop],\n  );\n\n  return { desktop, media };\n};\n"],"names":["get","viewport","documentElement","callbacks","currentSize","onResize","callback","windowSize","useBreakpoint","breakpoint","useSyncExternalStore","useCallback","onStoreChange","useResponsive","desktop","media","values"],"mappings":"yCAOA,MAAMA,EAAM,IAAkB,CAC5B,MAAMC,EAAW,OAAO,eAOxB,GAAIA,GAAY,KAOd,MAAO,CACL,MAAO,KAAK,MAAMA,EAAS,MAAQA,EAAS,KAAK,EACjD,OAAQ,KAAK,MAAMA,EAAS,OAASA,EAAS,KAAK,CAAA,EAIvD,MAAMC,EAAkB,OAAO,SAAS,gBAExC,MAAO,CACL,MAAOA,EAAgB,YACvB,OAAQA,EAAgB,YAAA,CAE5B,EAEMC,MAAgB,IAEtB,IAAIC,EAA0BJ,EAAA,EAE9B,MAAMK,EAAW,IAAM,CACrBD,EAAcJ,EAAA,EACdG,EAAU,QAAQG,GAAYA,EAASF,CAAW,CAAC,CACrD,EAEaG,EAAa,CACxB,IAAK,IAAMH,EAEX,UAAYE,IACVH,EAAU,IAAIG,CAAQ,EAEf,IAAM,CACXH,EAAU,OAAOG,CAAQ,CAC3B,EAEJ,EAEI,OAAO,gBAAkB,KAC3B,OAAO,eAAe,iBAAiB,SAAUD,EAAU,EAAK,EAEhE,OAAO,iBAAiB,SAAUA,EAAU,EAAK,ECvD5C,MAAMG,EAAiBC,GAC5BC,EAAAA,qBACEC,EAAAA,YAAYC,GACUL,EAAW,UAAUK,CAAa,EAErD,CAAA,CAAE,EACLD,EAAAA,YAAY,IACHJ,EAAW,MAAM,OAASE,EAChC,CAACA,CAAU,CAAC,CACjB,ECXWI,EAAgB,CAACJ,EAAa,MAAQ,CACjD,MAAMK,EAAUN,EAAcC,CAAU,EAElCM,EAAQJ,EAAAA,YACRK,GACFF,EAAWE,EAAO,SAAWA,EAAO,OAAUA,EAAO,OACvD,CAACF,CAAO,CAAA,EAGV,MAAO,CAAE,QAAAA,EAAS,MAAAC,CAAA,CACpB"}