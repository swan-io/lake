{"version":3,"file":"LakeModal-CBNwPgnY.js","sources":["../../../node_modules/fbjs/lib/invariant.js","../../../node_modules/react-native-web/dist/exports/Dimensions/index.js","../../../node_modules/react-native-web/dist/modules/dismissKeyboard/index.js","../../../node_modules/react-native-web/dist/exports/ScrollView/ScrollViewBase.js","../../../node_modules/fbjs/lib/emptyFunction.js","../../../node_modules/fbjs/lib/warning.js","../../../node_modules/react-native-web/dist/exports/ScrollView/index.js","../../../packages/shared-business/src/components/LakeModal.tsx"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nvar validateFormat = process.env.NODE_ENV !== \"production\" ? function (format) {\n  if (format === undefined) {\n    throw new Error('invariant(...): Second argument must be a string.');\n  }\n} : function (format) {};\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments to provide\n * information about what broke and what you were expecting.\n *\n * The invariant message will be stripped in production, but the invariant will\n * remain to ensure logic does not differ in production.\n */\n\nfunction invariant(condition, format) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return String(args[argIndex++]);\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // Skip invariant's own stack frame.\n\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar dimensions = {\n  window: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  },\n  screen: {\n    fontScale: 1,\n    height: 0,\n    scale: 1,\n    width: 0\n  }\n};\nvar listeners = {};\nvar shouldInit = canUseDOM;\nfunction update() {\n  if (!canUseDOM) {\n    return;\n  }\n  var win = window;\n  var height;\n  var width;\n\n  /**\n   * iOS does not update viewport dimensions on keyboard open/close.\n   * window.visualViewport(https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport)\n   * is used instead of document.documentElement.clientHeight (which remains as a fallback)\n   */\n  if (win.visualViewport) {\n    var visualViewport = win.visualViewport;\n    /**\n     * We are multiplying by scale because height and width from visual viewport\n     * also react to pinch zoom, and become smaller when zoomed. But it is not desired\n     * behaviour, since originally documentElement client height and width were used,\n     * and they do not react to pinch zoom.\n     */\n    height = Math.round(visualViewport.height * visualViewport.scale);\n    width = Math.round(visualViewport.width * visualViewport.scale);\n  } else {\n    var docEl = win.document.documentElement;\n    height = docEl.clientHeight;\n    width = docEl.clientWidth;\n  }\n  dimensions.window = {\n    fontScale: 1,\n    height,\n    scale: win.devicePixelRatio || 1,\n    width\n  };\n  dimensions.screen = {\n    fontScale: 1,\n    height: win.screen.height,\n    scale: win.devicePixelRatio || 1,\n    width: win.screen.width\n  };\n}\nfunction handleResize() {\n  update();\n  if (Array.isArray(listeners['change'])) {\n    listeners['change'].forEach(handler => handler(dimensions));\n  }\n}\nexport default class Dimensions {\n  static get(dimension) {\n    if (shouldInit) {\n      shouldInit = false;\n      update();\n    }\n    invariant(dimensions[dimension], \"No dimension set for key \" + dimension);\n    return dimensions[dimension];\n  }\n  static set(initialDimensions) {\n    if (initialDimensions) {\n      if (canUseDOM) {\n        invariant(false, 'Dimensions cannot be set in the browser');\n      } else {\n        if (initialDimensions.screen != null) {\n          dimensions.screen = initialDimensions.screen;\n        }\n        if (initialDimensions.window != null) {\n          dimensions.window = initialDimensions.window;\n        }\n      }\n    }\n  }\n  static addEventListener(type, handler) {\n    listeners[type] = listeners[type] || [];\n    listeners[type].push(handler);\n    return {\n      remove: () => {\n        this.removeEventListener(type, handler);\n      }\n    };\n  }\n  static removeEventListener(type, handler) {\n    if (Array.isArray(listeners[type])) {\n      listeners[type] = listeners[type].filter(_handler => _handler !== handler);\n    }\n  }\n}\nif (canUseDOM) {\n  if (window.visualViewport) {\n    window.visualViewport.addEventListener('resize', handleResize, false);\n  } else {\n    window.addEventListener('resize', handleResize, false);\n  }\n}","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport TextInputState from '../TextInputState';\nvar dismissKeyboard = () => {\n  TextInputState.blurTextInput(TextInputState.currentlyFocusedField());\n};\nexport default dismissKeyboard;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"onScroll\", \"onTouchMove\", \"onWheel\", \"scrollEnabled\", \"scrollEventThrottle\", \"showsHorizontalScrollIndicator\", \"showsVerticalScrollIndicator\", \"style\"];\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport * as React from 'react';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\nimport useMergeRefs from '../../modules/useMergeRefs';\nfunction normalizeScrollEvent(e) {\n  return {\n    nativeEvent: {\n      contentOffset: {\n        get x() {\n          return e.target.scrollLeft;\n        },\n        get y() {\n          return e.target.scrollTop;\n        }\n      },\n      contentSize: {\n        get height() {\n          return e.target.scrollHeight;\n        },\n        get width() {\n          return e.target.scrollWidth;\n        }\n      },\n      layoutMeasurement: {\n        get height() {\n          return e.target.offsetHeight;\n        },\n        get width() {\n          return e.target.offsetWidth;\n        }\n      }\n    },\n    timeStamp: Date.now()\n  };\n}\nfunction shouldEmitScrollEvent(lastTick, eventThrottle) {\n  var timeSinceLastTick = Date.now() - lastTick;\n  return eventThrottle > 0 && timeSinceLastTick >= eventThrottle;\n}\n\n/**\n * Encapsulates the Web-specific scroll throttling and disabling logic\n */\nvar ScrollViewBase = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var onScroll = props.onScroll,\n    onTouchMove = props.onTouchMove,\n    onWheel = props.onWheel,\n    _props$scrollEnabled = props.scrollEnabled,\n    scrollEnabled = _props$scrollEnabled === void 0 ? true : _props$scrollEnabled,\n    _props$scrollEventThr = props.scrollEventThrottle,\n    scrollEventThrottle = _props$scrollEventThr === void 0 ? 0 : _props$scrollEventThr,\n    showsHorizontalScrollIndicator = props.showsHorizontalScrollIndicator,\n    showsVerticalScrollIndicator = props.showsVerticalScrollIndicator,\n    style = props.style,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var scrollState = React.useRef({\n    isScrolling: false,\n    scrollLastTick: 0\n  });\n  var scrollTimeout = React.useRef(null);\n  var scrollRef = React.useRef(null);\n  function createPreventableScrollHandler(handler) {\n    return e => {\n      if (scrollEnabled) {\n        if (handler) {\n          handler(e);\n        }\n      }\n    };\n  }\n  function handleScroll(e) {\n    e.stopPropagation();\n    if (e.target === scrollRef.current) {\n      e.persist();\n      // A scroll happened, so the scroll resets the scrollend timeout.\n      if (scrollTimeout.current != null) {\n        clearTimeout(scrollTimeout.current);\n      }\n      scrollTimeout.current = setTimeout(() => {\n        handleScrollEnd(e);\n      }, 100);\n      if (scrollState.current.isScrolling) {\n        // Scroll last tick may have changed, check if we need to notify\n        if (shouldEmitScrollEvent(scrollState.current.scrollLastTick, scrollEventThrottle)) {\n          handleScrollTick(e);\n        }\n      } else {\n        // Weren't scrolling, so we must have just started\n        handleScrollStart(e);\n      }\n    }\n  }\n  function handleScrollStart(e) {\n    scrollState.current.isScrolling = true;\n    handleScrollTick(e);\n  }\n  function handleScrollTick(e) {\n    scrollState.current.scrollLastTick = Date.now();\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  }\n  function handleScrollEnd(e) {\n    scrollState.current.isScrolling = false;\n    if (onScroll) {\n      onScroll(normalizeScrollEvent(e));\n    }\n  }\n  var hideScrollbar = showsHorizontalScrollIndicator === false || showsVerticalScrollIndicator === false;\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {\n    onScroll: handleScroll,\n    onTouchMove: createPreventableScrollHandler(onTouchMove),\n    onWheel: createPreventableScrollHandler(onWheel),\n    ref: useMergeRefs(scrollRef, forwardedRef),\n    style: [style, !scrollEnabled && styles.scrollDisabled, hideScrollbar && styles.hideScrollbar]\n  }));\n});\n\n// Chrome doesn't support e.preventDefault in this case; touch-action must be\n// used to disable scrolling.\n// https://developers.google.com/web/updates/2017/01/scrolling-intervention\nvar styles = StyleSheet.create({\n  scrollDisabled: {\n    overflowX: 'hidden',\n    overflowY: 'hidden',\n    touchAction: 'none'\n  },\n  hideScrollbar: {\n    scrollbarWidth: 'none'\n  }\n});\nexport default ScrollViewBase;","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\n\n\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\n\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar emptyFunction = require(\"./emptyFunction\");\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\n\nfunction printWarning(format) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var argIndex = 0;\n  var message = 'Warning: ' + format.replace(/%s/g, function () {\n    return args[argIndex++];\n  });\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    // --- Welcome to debugging React ---\n    // This error was thrown as a convenience so that you can use this stack\n    // to find the callsite that caused this warning to fire.\n    throw new Error(message);\n  } catch (x) {}\n}\n\nvar warning = process.env.NODE_ENV !== \"production\" ? function (condition, format) {\n  if (format === undefined) {\n    throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n  }\n\n  if (!condition) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    printWarning.apply(void 0, [format].concat(args));\n  }\n} : emptyFunction;\nmodule.exports = warning;","import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"contentContainerStyle\", \"horizontal\", \"onContentSizeChange\", \"refreshControl\", \"stickyHeaderIndices\", \"pagingEnabled\", \"forwardedRef\", \"keyboardDismissMode\", \"onScroll\", \"centerContent\"];\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport Dimensions from '../Dimensions';\nimport dismissKeyboard from '../../modules/dismissKeyboard';\nimport invariant from 'fbjs/lib/invariant';\nimport mergeRefs from '../../modules/mergeRefs';\nimport Platform from '../Platform';\nimport ScrollViewBase from './ScrollViewBase';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\nimport UIManager from '../UIManager';\nimport View from '../View';\nimport React from 'react';\nimport warning from 'fbjs/lib/warning';\nvar emptyObject = {};\nvar IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;\nclass ScrollView extends React.Component {\n  constructor() {\n    super(...arguments);\n    this._scrollNodeRef = null;\n    this._innerViewRef = null;\n    this.isTouching = false;\n    this.lastMomentumScrollBeginTime = 0;\n    this.lastMomentumScrollEndTime = 0;\n    this.observedScrollSinceBecomingResponder = false;\n    this.becameResponderWhileAnimating = false;\n    this.scrollResponderHandleScrollShouldSetResponder = () => {\n      return this.isTouching;\n    };\n    this.scrollResponderHandleStartShouldSetResponderCapture = e => {\n      // First see if we want to eat taps while the keyboard is up\n      // var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\n      // if (!this.props.keyboardShouldPersistTaps &&\n      //   currentlyFocusedTextInput != null &&\n      //   e.target !== currentlyFocusedTextInput) {\n      //   return true;\n      // }\n      return this.scrollResponderIsAnimating();\n    };\n    this.scrollResponderHandleTerminationRequest = () => {\n      return !this.observedScrollSinceBecomingResponder;\n    };\n    this.scrollResponderHandleTouchEnd = e => {\n      var nativeEvent = e.nativeEvent;\n      this.isTouching = nativeEvent.touches.length !== 0;\n      this.props.onTouchEnd && this.props.onTouchEnd(e);\n    };\n    this.scrollResponderHandleResponderRelease = e => {\n      this.props.onResponderRelease && this.props.onResponderRelease(e);\n\n      // By default scroll views will unfocus a textField\n      // if another touch occurs outside of it\n      var currentlyFocusedTextInput = TextInputState.currentlyFocusedField();\n      if (!this.props.keyboardShouldPersistTaps && currentlyFocusedTextInput != null && e.target !== currentlyFocusedTextInput && !this.observedScrollSinceBecomingResponder && !this.becameResponderWhileAnimating) {\n        this.props.onScrollResponderKeyboardDismissed && this.props.onScrollResponderKeyboardDismissed(e);\n        TextInputState.blurTextInput(currentlyFocusedTextInput);\n      }\n    };\n    this.scrollResponderHandleScroll = e => {\n      this.observedScrollSinceBecomingResponder = true;\n      this.props.onScroll && this.props.onScroll(e);\n    };\n    this.scrollResponderHandleResponderGrant = e => {\n      this.observedScrollSinceBecomingResponder = false;\n      this.props.onResponderGrant && this.props.onResponderGrant(e);\n      this.becameResponderWhileAnimating = this.scrollResponderIsAnimating();\n    };\n    this.scrollResponderHandleScrollBeginDrag = e => {\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n    this.scrollResponderHandleScrollEndDrag = e => {\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n    this.scrollResponderHandleMomentumScrollBegin = e => {\n      this.lastMomentumScrollBeginTime = Date.now();\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n    this.scrollResponderHandleMomentumScrollEnd = e => {\n      this.lastMomentumScrollEndTime = Date.now();\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n    this.scrollResponderHandleTouchStart = e => {\n      this.isTouching = true;\n      this.props.onTouchStart && this.props.onTouchStart(e);\n    };\n    this.scrollResponderHandleTouchMove = e => {\n      this.props.onTouchMove && this.props.onTouchMove(e);\n    };\n    this.scrollResponderIsAnimating = () => {\n      var now = Date.now();\n      var timeSinceLastMomentumScrollEnd = now - this.lastMomentumScrollEndTime;\n      var isAnimating = timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS || this.lastMomentumScrollEndTime < this.lastMomentumScrollBeginTime;\n      return isAnimating;\n    };\n    this.scrollResponderScrollTo = (x, y, animated) => {\n      if (typeof x === 'number') {\n        console.warn('`scrollResponderScrollTo(x, y, animated)` is deprecated. Use `scrollResponderScrollTo({x: 5, y: 5, animated: true})` instead.');\n      } else {\n        var _ref = x || emptyObject;\n        x = _ref.x;\n        y = _ref.y;\n        animated = _ref.animated;\n      }\n      var node = this.getScrollableNode();\n      var left = x || 0;\n      var top = y || 0;\n      if (node != null) {\n        if (typeof node.scroll === 'function') {\n          node.scroll({\n            top,\n            left,\n            behavior: !animated ? 'auto' : 'smooth'\n          });\n        } else {\n          node.scrollLeft = left;\n          node.scrollTop = top;\n        }\n      }\n    };\n    this.scrollResponderZoomTo = (rect, animated) => {\n      if (Platform.OS !== 'ios') {\n        invariant('zoomToRect is not implemented');\n      }\n    };\n    this.scrollResponderScrollNativeHandleToKeyboard = (nodeHandle, additionalOffset, preventNegativeScrollOffset) => {\n      this.additionalScrollOffset = additionalOffset || 0;\n      this.preventNegativeScrollOffset = !!preventNegativeScrollOffset;\n      UIManager.measureLayout(nodeHandle, this.getInnerViewNode(), this.scrollResponderTextInputFocusError, this.scrollResponderInputMeasureAndScrollToKeyboard);\n    };\n    this.scrollResponderInputMeasureAndScrollToKeyboard = (left, top, width, height) => {\n      var keyboardScreenY = Dimensions.get('window').height;\n      if (this.keyboardWillOpenTo) {\n        keyboardScreenY = this.keyboardWillOpenTo.endCoordinates.screenY;\n      }\n      var scrollOffsetY = top - keyboardScreenY + height + this.additionalScrollOffset;\n\n      // By default, this can scroll with negative offset, pulling the content\n      // down so that the target component's bottom meets the keyboard's top.\n      // If requested otherwise, cap the offset at 0 minimum to avoid content\n      // shifting down.\n      if (this.preventNegativeScrollOffset) {\n        scrollOffsetY = Math.max(0, scrollOffsetY);\n      }\n      this.scrollResponderScrollTo({\n        x: 0,\n        y: scrollOffsetY,\n        animated: true\n      });\n      this.additionalOffset = 0;\n      this.preventNegativeScrollOffset = false;\n    };\n    this.scrollResponderKeyboardWillShow = e => {\n      this.keyboardWillOpenTo = e;\n      this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);\n    };\n    this.scrollResponderKeyboardWillHide = e => {\n      this.keyboardWillOpenTo = null;\n      this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);\n    };\n    this.scrollResponderKeyboardDidShow = e => {\n      // TODO(7693961): The event for DidShow is not available on iOS yet.\n      // Use the one from WillShow and do not assign.\n      if (e) {\n        this.keyboardWillOpenTo = e;\n      }\n      this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);\n    };\n    this.scrollResponderKeyboardDidHide = e => {\n      this.keyboardWillOpenTo = null;\n      this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);\n    };\n    this.flashScrollIndicators = () => {\n      this.scrollResponderFlashScrollIndicators();\n    };\n    this.getScrollResponder = () => {\n      return this;\n    };\n    this.getScrollableNode = () => {\n      return this._scrollNodeRef;\n    };\n    this.getInnerViewRef = () => {\n      return this._innerViewRef;\n    };\n    this.getInnerViewNode = () => {\n      return this._innerViewRef;\n    };\n    this.getNativeScrollRef = () => {\n      return this._scrollNodeRef;\n    };\n    this.scrollTo = (y, x, animated) => {\n      if (typeof y === 'number') {\n        console.warn('`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, animated: true})` instead.');\n      } else {\n        var _ref2 = y || emptyObject;\n        x = _ref2.x;\n        y = _ref2.y;\n        animated = _ref2.animated;\n      }\n      this.scrollResponderScrollTo({\n        x: x || 0,\n        y: y || 0,\n        animated: animated !== false\n      });\n    };\n    this.scrollToEnd = options => {\n      // Default to true\n      var animated = (options && options.animated) !== false;\n      var horizontal = this.props.horizontal;\n      var scrollResponderNode = this.getScrollableNode();\n      var x = horizontal ? scrollResponderNode.scrollWidth : 0;\n      var y = horizontal ? 0 : scrollResponderNode.scrollHeight;\n      this.scrollResponderScrollTo({\n        x,\n        y,\n        animated\n      });\n    };\n    this._handleContentOnLayout = e => {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n        width = _e$nativeEvent$layout.width,\n        height = _e$nativeEvent$layout.height;\n      this.props.onContentSizeChange(width, height);\n    };\n    this._handleScroll = e => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this.props.onScroll && this.props.scrollEventThrottle == null) {\n          console.log('You specified `onScroll` on a <ScrollView> but not ' + '`scrollEventThrottle`. You will only receive one event. ' + 'Using `16` you get all the events but be aware that it may ' + \"cause frame drops, use a bigger number if you don't need as \" + 'much precision.');\n        }\n      }\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        dismissKeyboard();\n      }\n      this.scrollResponderHandleScroll(e);\n    };\n    this._setInnerViewRef = node => {\n      this._innerViewRef = node;\n    };\n    this._setScrollNodeRef = node => {\n      this._scrollNodeRef = node;\n      // ScrollView needs to add more methods to the hostNode in addition to those\n      // added by `usePlatformMethods`. This is temporarily until an API like\n      // `ScrollView.scrollTo(hostNode, { x, y })` is added to React Native.\n      if (node != null) {\n        node.getScrollResponder = this.getScrollResponder;\n        node.getInnerViewNode = this.getInnerViewNode;\n        node.getInnerViewRef = this.getInnerViewRef;\n        node.getNativeScrollRef = this.getNativeScrollRef;\n        node.getScrollableNode = this.getScrollableNode;\n        node.scrollTo = this.scrollTo;\n        node.scrollToEnd = this.scrollToEnd;\n        node.flashScrollIndicators = this.flashScrollIndicators;\n        node.scrollResponderZoomTo = this.scrollResponderZoomTo;\n        node.scrollResponderScrollNativeHandleToKeyboard = this.scrollResponderScrollNativeHandleToKeyboard;\n      }\n      var ref = mergeRefs(this.props.forwardedRef);\n      ref(node);\n    };\n  }\n  /**\n   * ------------------------------------------------------\n   * START SCROLLRESPONDER\n   * ------------------------------------------------------\n   */\n  // Reset to false every time becomes responder. This is used to:\n  // - Determine if the scroll view has been scrolled and therefore should\n  // refuse to give up its responder lock.\n  // - Determine if releasing should dismiss the keyboard when we are in\n  // tap-to-dismiss mode (!this.props.keyboardShouldPersistTaps).\n  /**\n   * Invoke this from an `onScroll` event.\n   */\n  /**\n   * Merely touch starting is not sufficient for a scroll view to become the\n   * responder. Being the \"responder\" means that the very next touch move/end\n   * event will result in an action/movement.\n   *\n   * Invoke this from an `onStartShouldSetResponder` event.\n   *\n   * `onStartShouldSetResponder` is used when the next move/end will trigger\n   * some UI movement/action, but when you want to yield priority to views\n   * nested inside of the view.\n   *\n   * There may be some cases where scroll views actually should return `true`\n   * from `onStartShouldSetResponder`: Any time we are detecting a standard tap\n   * that gives priority to nested views.\n   *\n   * - If a single tap on the scroll view triggers an action such as\n   *   recentering a map style view yet wants to give priority to interaction\n   *   views inside (such as dropped pins or labels), then we would return true\n   *   from this method when there is a single touch.\n   *\n   * - Similar to the previous case, if a two finger \"tap\" should trigger a\n   *   zoom, we would check the `touches` count, and if `>= 2`, we would return\n   *   true.\n   *\n   */\n  scrollResponderHandleStartShouldSetResponder() {\n    return false;\n  }\n\n  /**\n   * There are times when the scroll view wants to become the responder\n   * (meaning respond to the next immediate `touchStart/touchEnd`), in a way\n   * that *doesn't* give priority to nested views (hence the capture phase):\n   *\n   * - Currently animating.\n   * - Tapping anywhere that is not the focused input, while the keyboard is\n   *   up (which should dismiss the keyboard).\n   *\n   * Invoke this from an `onStartShouldSetResponderCapture` event.\n   */\n\n  /**\n   * Invoke this from an `onResponderReject` event.\n   *\n   * Some other element is not yielding its role as responder. Normally, we'd\n   * just disable the `UIScrollView`, but a touch has already began on it, the\n   * `UIScrollView` will not accept being disabled after that. The easiest\n   * solution for now is to accept the limitation of disallowing this\n   * altogether. To improve this, find a way to disable the `UIScrollView` after\n   * a touch has already started.\n   */\n  scrollResponderHandleResponderReject() {\n    warning(false, \"ScrollView doesn't take rejection well - scrolls anyway\");\n  }\n\n  /**\n   * We will allow the scroll view to give up its lock iff it acquired the lock\n   * during an animation. This is a very useful default that happens to satisfy\n   * many common user experiences.\n   *\n   * - Stop a scroll on the left edge, then turn that into an outer view's\n   *   backswipe.\n   * - Stop a scroll mid-bounce at the top, continue pulling to have the outer\n   *   view dismiss.\n   * - However, without catching the scroll view mid-bounce (while it is\n   *   motionless), if you drag far enough for the scroll view to become\n   *   responder (and therefore drag the scroll view a bit), any backswipe\n   *   navigation of a swipe gesture higher in the view hierarchy, should be\n   *   rejected.\n   */\n\n  /**\n   * Invoke this from an `onTouchEnd` event.\n   *\n   * @param {SyntheticEvent} e Event.\n   */\n\n  /**\n   * Invoke this from an `onResponderRelease` event.\n   */\n\n  /**\n   * Invoke this from an `onResponderGrant` event.\n   */\n\n  /**\n   * Unfortunately, `onScrollBeginDrag` also fires when *stopping* the scroll\n   * animation, and there's not an easy way to distinguish a drag vs. stopping\n   * momentum.\n   *\n   * Invoke this from an `onScrollBeginDrag` event.\n   */\n\n  /**\n   * Invoke this from an `onScrollEndDrag` event.\n   */\n\n  /**\n   * Invoke this from an `onMomentumScrollBegin` event.\n   */\n\n  /**\n   * Invoke this from an `onMomentumScrollEnd` event.\n   */\n\n  /**\n   * Invoke this from an `onTouchStart` event.\n   *\n   * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n   * order, after `ResponderEventPlugin`, we can detect that we were *not*\n   * permitted to be the responder (presumably because a contained view became\n   * responder). The `onResponderReject` won't fire in that case - it only\n   * fires when a *current* responder rejects our request.\n   *\n   * @param {SyntheticEvent} e Touch Start event.\n   */\n\n  /**\n   * Invoke this from an `onTouchMove` event.\n   *\n   * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n   * order, after `ResponderEventPlugin`, we can detect that we were *not*\n   * permitted to be the responder (presumably because a contained view became\n   * responder). The `onResponderReject` won't fire in that case - it only\n   * fires when a *current* responder rejects our request.\n   *\n   * @param {SyntheticEvent} e Touch Start event.\n   */\n\n  /**\n   * A helper function for this class that lets us quickly determine if the\n   * view is currently animating. This is particularly useful to know when\n   * a touch has just started or ended.\n   */\n\n  /**\n   * A helper function to scroll to a specific point in the scrollview.\n   * This is currently used to help focus on child textviews, but can also\n   * be used to quickly scroll to any element we want to focus. Syntax:\n   *\n   * scrollResponderScrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\n   *\n   * Note: The weird argument signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as as alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n\n  /**\n   * A helper function to zoom to a specific rect in the scrollview. The argument has the shape\n   * {x: number; y: number; width: number; height: number; animated: boolean = true}\n   *\n   * @platform ios\n   */\n\n  /**\n   * Displays the scroll indicators momentarily.\n   */\n  scrollResponderFlashScrollIndicators() {}\n\n  /**\n   * This method should be used as the callback to onFocus in a TextInputs'\n   * parent view. Note that any module using this mixin needs to return\n   * the parent view's ref in getScrollViewRef() in order to use this method.\n   * @param {any} nodeHandle The TextInput node handle\n   * @param {number} additionalOffset The scroll view's top \"contentInset\".\n   *        Default is 0.\n   * @param {bool} preventNegativeScrolling Whether to allow pulling the content\n   *        down to make it meet the keyboard's top. Default is false.\n   */\n\n  /**\n   * The calculations performed here assume the scroll view takes up the entire\n   * screen - even if has some content inset. We then measure the offsets of the\n   * keyboard, and compensate both for the scroll view's \"contentInset\".\n   *\n   * @param {number} left Position of input w.r.t. table view.\n   * @param {number} top Position of input w.r.t. table view.\n   * @param {number} width Width of the text input.\n   * @param {number} height Height of the text input.\n   */\n\n  scrollResponderTextInputFocusError(e) {\n    console.error('Error measuring text field: ', e);\n  }\n\n  /**\n   * Warning, this may be called several times for a single keyboard opening.\n   * It's best to store the information in this method and then take any action\n   * at a later point (either in `keyboardDidShow` or other).\n   *\n   * Here's the order that events occur in:\n   * - focus\n   * - willShow {startCoordinates, endCoordinates} several times\n   * - didShow several times\n   * - blur\n   * - willHide {startCoordinates, endCoordinates} several times\n   * - didHide several times\n   *\n   * The `ScrollResponder` providesModule callbacks for each of these events.\n   * Even though any user could have easily listened to keyboard events\n   * themselves, using these `props` callbacks ensures that ordering of events\n   * is consistent - and not dependent on the order that the keyboard events are\n   * subscribed to. This matters when telling the scroll view to scroll to where\n   * the keyboard is headed - the scroll responder better have been notified of\n   * the keyboard destination before being instructed to scroll to where the\n   * keyboard will be. Stick to the `ScrollResponder` callbacks, and everything\n   * will work.\n   *\n   * WARNING: These callbacks will fire even if a keyboard is displayed in a\n   * different navigation pane. Filter out the events to determine if they are\n   * relevant to you. (For example, only if you receive these callbacks after\n   * you had explicitly focused a node etc).\n   */\n\n  /**\n   * ------------------------------------------------------\n   * END SCROLLRESPONDER\n   * ------------------------------------------------------\n   */\n\n  /**\n   * Returns a reference to the underlying scroll responder, which supports\n   * operations like `scrollTo`. All ScrollView-like components should\n   * implement this method so that they can be composed while providing access\n   * to the underlying scroll responder's methods.\n   */\n\n  /**\n   * Scrolls to a given x, y offset, either immediately or with a smooth animation.\n   * Syntax:\n   *\n   * scrollTo(options: {x: number = 0; y: number = 0; animated: boolean = true})\n   *\n   * Note: The weird argument signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as as alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n\n  /**\n   * If this is a vertical ScrollView scrolls to the bottom.\n   * If this is a horizontal ScrollView scrolls to the right.\n   *\n   * Use `scrollToEnd({ animated: true })` for smooth animated scrolling,\n   * `scrollToEnd({ animated: false })` for immediate scrolling.\n   * If no options are passed, `animated` defaults to true.\n   */\n\n  render() {\n    var _this$props = this.props,\n      contentContainerStyle = _this$props.contentContainerStyle,\n      horizontal = _this$props.horizontal,\n      onContentSizeChange = _this$props.onContentSizeChange,\n      refreshControl = _this$props.refreshControl,\n      stickyHeaderIndices = _this$props.stickyHeaderIndices,\n      pagingEnabled = _this$props.pagingEnabled,\n      forwardedRef = _this$props.forwardedRef,\n      keyboardDismissMode = _this$props.keyboardDismissMode,\n      onScroll = _this$props.onScroll,\n      centerContent = _this$props.centerContent,\n      other = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    if (process.env.NODE_ENV !== 'production' && this.props.style) {\n      var style = StyleSheet.flatten(this.props.style);\n      var childLayoutProps = ['alignItems', 'justifyContent'].filter(prop => style && style[prop] !== undefined);\n      invariant(childLayoutProps.length === 0, \"ScrollView child layout (\" + JSON.stringify(childLayoutProps) + \") \" + 'must be applied through the contentContainerStyle prop.');\n    }\n    var contentSizeChangeProps = {};\n    if (onContentSizeChange) {\n      contentSizeChangeProps = {\n        onLayout: this._handleContentOnLayout\n      };\n    }\n    var hasStickyHeaderIndices = !horizontal && Array.isArray(stickyHeaderIndices);\n    var children = hasStickyHeaderIndices || pagingEnabled ? React.Children.map(this.props.children, (child, i) => {\n      var isSticky = hasStickyHeaderIndices && stickyHeaderIndices.indexOf(i) > -1;\n      if (child != null && (isSticky || pagingEnabled)) {\n        return /*#__PURE__*/React.createElement(View, {\n          style: [isSticky && styles.stickyHeader, pagingEnabled && styles.pagingEnabledChild]\n        }, child);\n      } else {\n        return child;\n      }\n    }) : this.props.children;\n    var contentContainer = /*#__PURE__*/React.createElement(View, _extends({}, contentSizeChangeProps, {\n      children: children,\n      collapsable: false,\n      ref: this._setInnerViewRef,\n      style: [horizontal && styles.contentContainerHorizontal, centerContent && styles.contentContainerCenterContent, contentContainerStyle]\n    }));\n    var baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n    var pagingEnabledStyle = horizontal ? styles.pagingEnabledHorizontal : styles.pagingEnabledVertical;\n    var props = _objectSpread(_objectSpread({}, other), {}, {\n      style: [baseStyle, pagingEnabled && pagingEnabledStyle, this.props.style],\n      onTouchStart: this.scrollResponderHandleTouchStart,\n      onTouchMove: this.scrollResponderHandleTouchMove,\n      onTouchEnd: this.scrollResponderHandleTouchEnd,\n      onScrollBeginDrag: this.scrollResponderHandleScrollBeginDrag,\n      onScrollEndDrag: this.scrollResponderHandleScrollEndDrag,\n      onMomentumScrollBegin: this.scrollResponderHandleMomentumScrollBegin,\n      onMomentumScrollEnd: this.scrollResponderHandleMomentumScrollEnd,\n      onStartShouldSetResponder: this.scrollResponderHandleStartShouldSetResponder,\n      onStartShouldSetResponderCapture: this.scrollResponderHandleStartShouldSetResponderCapture,\n      onScrollShouldSetResponder: this.scrollResponderHandleScrollShouldSetResponder,\n      onScroll: this._handleScroll,\n      onResponderGrant: this.scrollResponderHandleResponderGrant,\n      onResponderTerminationRequest: this.scrollResponderHandleTerminationRequest,\n      onResponderTerminate: this.scrollResponderHandleTerminate,\n      onResponderRelease: this.scrollResponderHandleResponderRelease,\n      onResponderReject: this.scrollResponderHandleResponderReject\n    });\n    var ScrollViewClass = ScrollViewBase;\n    invariant(ScrollViewClass !== undefined, 'ScrollViewClass must not be undefined');\n    var scrollView = /*#__PURE__*/React.createElement(ScrollViewClass, _extends({}, props, {\n      ref: this._setScrollNodeRef\n    }), contentContainer);\n    if (refreshControl) {\n      return /*#__PURE__*/React.cloneElement(refreshControl, {\n        style: props.style\n      }, scrollView);\n    }\n    return scrollView;\n  }\n}\nvar commonStyle = {\n  flexGrow: 1,\n  flexShrink: 1,\n  // Enable hardware compositing in modern browsers.\n  // Creates a new layer with its own backing surface that can significantly\n  // improve scroll performance.\n  transform: 'translateZ(0)',\n  // iOS native scrolling\n  WebkitOverflowScrolling: 'touch'\n};\nvar styles = StyleSheet.create({\n  baseVertical: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: 'column',\n    overflowX: 'hidden',\n    overflowY: 'auto'\n  }),\n  baseHorizontal: _objectSpread(_objectSpread({}, commonStyle), {}, {\n    flexDirection: 'row',\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  }),\n  contentContainerHorizontal: {\n    flexDirection: 'row'\n  },\n  contentContainerCenterContent: {\n    justifyContent: 'center',\n    flexGrow: 1\n  },\n  stickyHeader: {\n    position: 'sticky',\n    top: 0,\n    zIndex: 10\n  },\n  pagingEnabledHorizontal: {\n    scrollSnapType: 'x mandatory'\n  },\n  pagingEnabledVertical: {\n    scrollSnapType: 'y mandatory'\n  },\n  pagingEnabledChild: {\n    scrollSnapAlign: 'start'\n  }\n});\nvar ForwardedScrollView = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  return /*#__PURE__*/React.createElement(ScrollView, _extends({}, props, {\n    forwardedRef: forwardedRef\n  }));\n});\nForwardedScrollView.displayName = 'ScrollView';\nexport default ForwardedScrollView;","import { FocusTrap } from \"@swan-io/lake/src/components/FocusTrap\";\nimport { Icon, IconName } from \"@swan-io/lake/src/components/Icon\";\nimport { LakeButton } from \"@swan-io/lake/src/components/LakeButton\";\nimport { LakeHeading } from \"@swan-io/lake/src/components/LakeHeading\";\nimport { LoadingView } from \"@swan-io/lake/src/components/LoadingView\";\nimport { Portal } from \"@swan-io/lake/src/components/Portal\";\nimport { Pressable } from \"@swan-io/lake/src/components/Pressable\";\nimport { Context, ResponsiveContainer } from \"@swan-io/lake/src/components/ResponsiveContainer\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport { Suspendable } from \"@swan-io/lake/src/components/Suspendable\";\nimport { TransitionView } from \"@swan-io/lake/src/components/TransitionView\";\nimport { commonStyles } from \"@swan-io/lake/src/constants/commonStyles\";\nimport {\n  ColorVariants,\n  backgroundColor,\n  breakpoints,\n  colors,\n  negativeSpacings,\n  shadows,\n  spacings,\n} from \"@swan-io/lake/src/constants/design\";\nimport { useBodyClassName } from \"@swan-io/lake/src/hooks/useBodyClassName\";\nimport { ReactNode, useEffect, useState } from \"react\";\nimport { ScrollView, StyleSheet, View } from \"react-native\";\nimport { t } from \"../utils/i18n\";\n\nexport type LakeModalProps = {\n  visible: boolean;\n  title?: string;\n  icon?: IconName;\n  color?: ColorVariants;\n  children: ReactNode | ((context: Context) => ReactNode);\n  maxWidth?: number;\n  onPressClose?: () => void;\n};\n\nconst BACKGROUND_COLOR = \"rgba(0, 0, 0, 0.6)\";\n\nconst styles = StyleSheet.create({\n  root: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    position: \"fixed\",\n  },\n  inert: {\n    pointerEvents: \"none\",\n  },\n  fill: {\n    ...StyleSheet.absoluteFillObject,\n    animationFillMode: \"forwards\",\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    position: \"fixed\",\n    backgroundColor: BACKGROUND_COLOR,\n  },\n  overlayEnter: {\n    animationKeyframes: {\n      \"0%\": { opacity: 0 },\n    },\n    animationDuration: \"200ms\",\n    animationTimingFunction: \"ease-in-out\",\n  },\n  overlayLeave: {\n    animationKeyframes: {\n      \"100%\": { opacity: 0 },\n    },\n    animationDuration: \"200ms\",\n    animationTimingFunction: \"ease-in-out\",\n  },\n  modalEnter: {\n    animationKeyframes: {\n      \"0%\": {\n        opacity: 0,\n        transform: \"translateY(-20px)\",\n      },\n    },\n    animationDuration: \"300ms\",\n    animationTimingFunction: \"ease-in-out\",\n  },\n  modalLeave: {\n    animationKeyframes: {\n      \"100%\": {\n        opacity: 0,\n        transform: \"translateY(-20px)\",\n      },\n    },\n    animationDuration: \"300ms\",\n    animationTimingFunction: \"ease-in-out\",\n  },\n  modalContainer: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  modalContentContainer: {\n    padding: spacings[24],\n    justifyContent: \"center\",\n    flexGrow: 1,\n  },\n  modalContentContainerSmall: {\n    padding: spacings[8],\n    flexGrow: 1,\n    justifyContent: \"center\",\n  },\n  modal: {\n    backgroundColor: backgroundColor.default,\n    borderRadius: 24,\n    padding: spacings[48],\n    boxShadow: shadows.modal,\n    alignSelf: \"stretch\",\n    width: \"100%\",\n    marginHorizontal: \"auto\",\n  },\n  modalSmall: {\n    borderRadius: 16,\n    backgroundColor: backgroundColor.default,\n    width: \"100%\",\n    padding: spacings[24],\n    alignSelf: \"stretch\",\n    marginHorizontal: \"auto\",\n  },\n  modalHeader: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  modalIconTitle: {\n    ...commonStyles.fill,\n  },\n  trap: {\n    ...commonStyles.fill,\n  },\n  pressableOverlay: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  closeButton: {\n    top: negativeSpacings[16],\n    right: negativeSpacings[16],\n  },\n});\n\nexport const LakeModal = ({\n  visible,\n  icon,\n  title,\n  color = \"current\",\n  children,\n  maxWidth = 570,\n\n  onPressClose,\n}: LakeModalProps) => {\n  const [rootElement, setRootElement] = useState<Element | undefined>(() => undefined);\n\n  useEffect(() => {\n    const rootElement = document.createElement(\"div\");\n    document.body.append(rootElement);\n    setRootElement(rootElement);\n    return () => {\n      rootElement.remove();\n      setRootElement(undefined);\n    };\n  }, []);\n\n  useBodyClassName(\"ModalOpen\", { enabled: visible });\n\n  if (rootElement == null) {\n    return null;\n  }\n\n  return (\n    <Portal container={rootElement}>\n      <View aria-modal={true} style={[styles.container, !visible && styles.inert]}>\n        <TransitionView style={styles.fill} enter={styles.overlayEnter} leave={styles.overlayLeave}>\n          {visible ? <View style={styles.overlay} /> : null}\n        </TransitionView>\n\n        <Suspendable fallback={<LoadingView color={backgroundColor.accented} delay={0} />}>\n          <TransitionView style={styles.fill} enter={styles.modalEnter} leave={styles.modalLeave}>\n            {visible ? (\n              <ResponsiveContainer style={styles.root} breakpoint={breakpoints.tiny}>\n                {({ large, small }) => (\n                  <FocusTrap\n                    autoFocus={true}\n                    focusLock={true}\n                    returnFocus={true}\n                    onEscapeKey={onPressClose}\n                    style={styles.trap}\n                  >\n                    <ScrollView\n                      style={styles.modalContainer}\n                      contentContainerStyle={\n                        large ? styles.modalContentContainer : styles.modalContentContainerSmall\n                      }\n                    >\n                      {onPressClose != null ? (\n                        <Pressable onPress={onPressClose} style={styles.pressableOverlay} />\n                      ) : null}\n\n                      <View\n                        role=\"dialog\"\n                        style={[large ? styles.modal : styles.modalSmall, { maxWidth }]}\n                      >\n                        <View style={styles.modalHeader}>\n                          <View style={styles.modalIconTitle}>\n                            {icon != null ? (\n                              <Icon name={icon} size={large ? 40 : 32} color={colors[color][500]} />\n                            ) : null}\n\n                            {icon != null && title != null ? <Space height={12} /> : null}\n\n                            {title != null ? (\n                              <>\n                                <LakeHeading level={2} variant=\"h3\">\n                                  {title}\n                                </LakeHeading>\n\n                                <Space height={12} />\n                              </>\n                            ) : null}\n                          </View>\n\n                          {onPressClose != null ? (\n                            <LakeButton\n                              style={styles.closeButton}\n                              mode=\"tertiary\"\n                              onPress={onPressClose}\n                              icon=\"lake-close\"\n                              ariaLabel={t(\"common.close\")}\n                            />\n                          ) : null}\n                        </View>\n\n                        {typeof children == \"function\" ? children({ large, small }) : children}\n                      </View>\n                    </ScrollView>\n                  </FocusTrap>\n                )}\n              </ResponsiveContainer>\n            ) : null}\n          </TransitionView>\n        </Suspendable>\n      </View>\n    </Portal>\n  );\n};\n"],"names":["invariant","condition","format","_len","args","_key","error","argIndex","invariant_1","dimensions","listeners","shouldInit","canUseDOM","update","win","height","width","visualViewport","docEl","handleResize","handler","Dimensions","dimension","initialDimensions","type","_handler","dismissKeyboard","TextInputState","_excluded","normalizeScrollEvent","e","shouldEmitScrollEvent","lastTick","eventThrottle","timeSinceLastTick","ScrollViewBase","React.forwardRef","props","forwardedRef","onScroll","onTouchMove","onWheel","_props$scrollEnabled","scrollEnabled","_props$scrollEventThr","scrollEventThrottle","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","style","rest","_objectWithoutPropertiesLoose","scrollState","React.useRef","scrollTimeout","scrollRef","createPreventableScrollHandler","handleScroll","handleScrollEnd","handleScrollTick","handleScrollStart","hideScrollbar","React.createElement","View","_extends","useMergeRefs","styles","StyleSheet","makeEmptyFunction","arg","emptyFunction","emptyFunction_1","require$$0","warning","warning_1","emptyObject","IS_ANIMATING_TOUCH_START_THRESHOLD_MS","ScrollView","React","nativeEvent","currentlyFocusedTextInput","now","timeSinceLastMomentumScrollEnd","isAnimating","x","y","animated","_ref","node","left","top","rect","nodeHandle","additionalOffset","preventNegativeScrollOffset","UIManager","keyboardScreenY","scrollOffsetY","_ref2","options","horizontal","scrollResponderNode","_e$nativeEvent$layout","ref","mergeRefs","_this$props","contentContainerStyle","onContentSizeChange","refreshControl","stickyHeaderIndices","pagingEnabled","centerContent","other","contentSizeChangeProps","hasStickyHeaderIndices","children","child","i","isSticky","contentContainer","baseStyle","pagingEnabledStyle","_objectSpread","ScrollViewClass","scrollView","commonStyle","ForwardedScrollView","BACKGROUND_COLOR","spacings","backgroundColor","shadows","commonStyles","negativeSpacings","LakeModal","visible","icon","title","color","maxWidth","onPressClose","rootElement","setRootElement","useState","useEffect","useBodyClassName","Portal","jsxs","jsx","TransitionView","Suspendable","LoadingView","ResponsiveContainer","breakpoints","large","small","FocusTrap","Pressable","Icon","colors","Space","Fragment","LakeHeading","LakeButton","t"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}