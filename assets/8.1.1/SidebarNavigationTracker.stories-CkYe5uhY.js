import{s as S,j as i,w as j,V as g,B as C,c as u,L as _}from"./Space-DxS88d1Z.js";import{r as n}from"./index-CBqU2yxZ.js";import{S as B}from"./_StoriesComponents-H5f3cy_d.js";import{P as I}from"./index-xZ0yBGGp.js";import"./extends-CCbyfPlC.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-BtM5VmRH.js";import"./commonStyles-t4XfA7cz.js";const y=S.create({track:{position:"absolute",top:0,right:0,bottom:0,width:3},marker:{pointerEvents:"none",position:"absolute",top:0,right:0,bottom:0,width:3},trackIndicator:{width:3,height:1,position:"absolute",right:0,transformOrigin:"right top",transition:"150ms ease-in-out",transitionProperty:"transform, background-color"}}),b=n.createContext(t=>{}),w=(t,r)=>{var a;const o=((a=r.parentElement)==null?void 0:a.getBoundingClientRect().top)??0,e=t.getBoundingClientRect();return{top:e.top-o,height:e.height}},h=({style:t,contentContainerStyle:r,children:o})=>{const[e,a]=n.useState(null),c=n.useRef(null),d=n.useRef(null),R=n.useCallback(({color:p,element:l})=>{if(c.current!=null){d.current=l;const{top:N,height:P}=w(l,c.current);a({color:p,top:N,height:P})}},[]),T=n.useCallback(()=>{if(d.current!=null&&(e==null?void 0:e.color)!=null){const{top:p,height:l}=w(d.current,c.current);a({color:e==null?void 0:e.color,top:p,height:l})}},[e]);return i.jsx(b.Provider,{value:R,children:i.jsxs(j,{scrollEventThrottle:30,onLayout:T,style:t,contentContainerStyle:r,role:"banner",children:[o,i.jsx(g,{style:y.track,ref:c,children:e!=null?i.jsx(g,{style:[y.trackIndicator,{transform:`translateY(${e.top}px)`,height:e.height,backgroundColor:e.color}]}):null})]})})},x=({color:t})=>{const r=n.useContext(b),o=n.useRef(null),e=n.useCallback(()=>{o.current!=null&&r({color:t,element:o.current})},[r,t]);return n.useEffect(()=>{o.current!=null&&r({color:t,element:o.current})},[r,t]),i.jsx(g,{ref:o,onLayout:e,style:y.marker})};h.__docgenInfo={description:"",methods:[],displayName:"SidebarNavigationTracker",props:{style:{required:!1,tsType:{name:'ScrollViewProps["style"]',raw:'ScrollViewProps["style"]'},description:""},contentContainerStyle:{required:!1,tsType:{name:'ScrollViewProps["style"]',raw:'ScrollViewProps["style"]'},description:""},children:{required:!0,tsType:{name:'ScrollViewProps["children"]',raw:'ScrollViewProps["children"]'},description:""}}};x.__docgenInfo={description:"",methods:[],displayName:"SidebarNavigationTrackerActiveMarker",props:{color:{required:!0,tsType:{name:"string"},description:""}}};const m=S.create({container:{maxWidth:200},row:{height:32,width:"100%"},item:{boxShadow:"0 1px rgba(0, 0, 0, 0.1)"}}),W={title:"Interactivity/SidebarNavigationTracker",component:h},V=(t,r)=>new Array(r-t+1).fill(0).map((o,e)=>t+e),E=V(1,10).map(t=>({id:t.toString(),title:`Row ${t}`})),s=()=>{const[t,r]=n.useState(""),o=e=>()=>{r(e)};return i.jsx(B,{title:"SidebarNavigationTracker",description:"You can click on a row to display the navigation tracker",children:i.jsx(h,{contentContainerStyle:m.container,children:E.map(e=>i.jsx(I,{onPress:o(e.id),style:m.item,children:i.jsxs(C,{style:m.row,direction:"row",alignItems:"center",children:[t===e.id&&i.jsx(x,{color:u.positive.primary}),i.jsx(_,{color:t===e.id?u.positive.primary:u.gray.primary,variant:t===e.id?"semibold":"regular",children:e.title})]})},e.id))})})};s.__docgenInfo={description:"",methods:[],displayName:"Default"};var k,v,f;s.parameters={...s.parameters,docs:{...(k=s.parameters)==null?void 0:k.docs,source:{originalSource:`() => {
  const [activeRow, setActiveRow] = useState("");
  const selectRow = (id: string) => () => {
    setActiveRow(id);
  };
  return <StoryBlock title="SidebarNavigationTracker" description="You can click on a row to display the navigation tracker">
      <SidebarNavigationTracker contentContainerStyle={styles.container}>
        {rows.map(row => <Pressable key={row.id} onPress={selectRow(row.id)} style={styles.item}>
            <Box style={styles.row} direction="row" alignItems="center">
              {activeRow === row.id && <SidebarNavigationTrackerActiveMarker color={colors.positive.primary} />}

              <LakeText color={activeRow === row.id ? colors.positive.primary : colors.gray.primary} variant={activeRow === row.id ? "semibold" : "regular"}>
                {row.title}
              </LakeText>
            </Box>
          </Pressable>)}
      </SidebarNavigationTracker>
    </StoryBlock>;
}`,...(f=(v=s.parameters)==null?void 0:v.docs)==null?void 0:f.source}}};const z=["Default"];export{s as Default,z as __namedExportsOrder,W as default};
//# sourceMappingURL=SidebarNavigationTracker.stories-CkYe5uhY.js.map
