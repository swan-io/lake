{"version":3,"file":"Switch-tvnjcZRH.js","sources":["../../../packages/lake/src/hooks/useAnimatedValue.ts","../../../packages/lake/src/components/Switch.tsx"],"sourcesContent":["import { MutableRefObject, useRef } from \"react\";\nimport { Animated } from \"react-native\";\n\nconst UNSET = Symbol(\"unset\");\n\nexport const useAnimatedValue = (value: number): Animated.Value => {\n  const ref = useRef<Animated.Value | typeof UNSET>(UNSET);\n\n  if (ref.current === UNSET) {\n    ref.current = new Animated.Value(value);\n  }\n\n  return (ref as MutableRefObject<Animated.Value>).current;\n};\n","import { forwardRef, memo, useEffect, useRef } from \"react\";\nimport { Animated, Pressable, StyleSheet, View } from \"react-native\";\nimport { backgroundColor, colors, shadows } from \"../constants/design\";\nimport { useAnimatedValue } from \"../hooks/useAnimatedValue\";\nimport { interpolate } from \"../utils/math\";\nimport { Icon } from \"./Icon\";\n\nconst WIDTH = 36;\nconst BUTTON_SIZE = 16;\nconst PADDING = 2;\n\nconst styles = StyleSheet.create({\n  base: {\n    backgroundColor: colors.gray[300],\n    borderRadius: 10,\n    height: 20,\n    width: WIDTH,\n    boxSizing: \"content-box\",\n    transitionProperty: \"background-color\",\n    transitionDuration: \"300ms\",\n    boxShadow: \"inset 0 0 0 1px rgba(0, 0, 0, 0.2)\",\n  },\n  active: {\n    backgroundColor: colors.positive[500],\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  opaque: {\n    opacity: 1,\n  },\n  button: {\n    alignItems: \"center\",\n    backgroundColor: backgroundColor.accented,\n    borderRadius: 8,\n    boxShadow: shadows.tile,\n    height: 16,\n    justifyContent: \"center\",\n    left: 0,\n    position: \"absolute\",\n    top: PADDING,\n    width: BUTTON_SIZE,\n  },\n  icon: {\n    opacity: 0,\n    transitionProperty: \"opacity\",\n    transitionDuration: \"300ms\",\n  },\n  shadow: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 10,\n    boxShadow: shadows.tile,\n    opacity: 0,\n    transitionProperty: \"opacity\",\n    transitionDuration: \"300ms\",\n  },\n});\n\ntype Props = {\n  value: boolean;\n  onValueChange?: (value: boolean) => void;\n  disabled?: boolean;\n};\n\nexport const Switch = memo(\n  forwardRef<View, Props>(({ value, disabled = false, onValueChange }, ref) => {\n    const animatedValue = value ? 1 : 0;\n    const animation = useAnimatedValue(animatedValue);\n    const buttonRef = useRef<View>(null);\n\n    useEffect(() => {\n      const interpolateValue = interpolate({\n        inputRange: [0, 1],\n        outputRange: [PADDING, WIDTH - BUTTON_SIZE - PADDING],\n      });\n\n      const id = animation.addListener(({ value }) => {\n        if (buttonRef.current instanceof HTMLElement) {\n          buttonRef.current.style.transform = `translateX(${interpolateValue(value)}px)`;\n        }\n      });\n\n      return () => {\n        animation.removeListener(id);\n      };\n    }, [animation]);\n\n    useEffect(() => {\n      Animated.spring(animation, {\n        bounciness: 6,\n        speed: 25,\n        toValue: animatedValue,\n        useNativeDriver: false,\n      }).start();\n    }, [animation, animatedValue]);\n\n    return (\n      <Pressable\n        ref={ref}\n        role=\"switch\"\n        aria-checked={value}\n        disabled={disabled}\n        onPress={() => onValueChange?.(!value)}\n      >\n        {({ hovered }) => (\n          <>\n            <View style={[styles.shadow, hovered && styles.opaque]} />\n\n            <View style={[styles.base, value && styles.active, disabled && styles.disabled]}>\n              <View ref={buttonRef} style={styles.button}>\n                <Icon\n                  color={colors.positive[400]}\n                  name=\"checkmark-filled\"\n                  size={10}\n                  style={[styles.icon, value && styles.opaque]}\n                />\n              </View>\n            </View>\n          </>\n        )}\n      </Pressable>\n    );\n  }),\n);\n"],"names":["UNSET","useAnimatedValue","value","ref","useRef","Animated","WIDTH","BUTTON_SIZE","PADDING","styles","StyleSheet","colors","backgroundColor","shadows","Switch","memo","forwardRef","disabled","onValueChange","animatedValue","animation","buttonRef","useEffect","interpolateValue","interpolate","id","jsx","Pressable","hovered","jsxs","Fragment","View","Icon"],"mappings":"+OAGA,MAAMA,EAAQ,OAAO,OAAO,EAEfC,EAAoBC,GAAkC,CAC3D,MAAAC,EAAMC,SAAsCJ,CAAK,EAEnD,OAAAG,EAAI,UAAYH,IAClBG,EAAI,QAAU,IAAIE,EAAS,MAAMH,CAAK,GAGhCC,EAAyC,OACnD,ECNAG,EAAA,GACAC,EAAA,GACAC,EAAA,EAEAC,EAAAC,EAAA,OAAA,CACA,KAAA,CACA,gBAAAC,EAAA,KAAA,GAAA,EACA,aAAA,GACA,OAAA,GACA,MAAAL,EACA,UAAA,cACA,mBAAA,mBACA,mBAAA,QACA,UAAA,oCACA,EACA,OAAA,CACA,gBAAAK,EAAA,SAAA,GAAA,CACA,EACA,SAAA,CACA,QAAA,EACA,EACA,OAAA,CACA,QAAA,CACA,EACA,OAAA,CACA,WAAA,SACA,gBAAAC,EAAA,SACA,aAAA,EACA,UAAAC,EAAA,KACA,OAAA,GACA,eAAA,SACA,KAAA,EACA,SAAA,WACA,IAAAL,EACA,MAAAD,CACA,EACA,KAAA,CACA,QAAA,EACA,mBAAA,UACA,mBAAA,OACA,EACA,OAAA,CACA,SAAA,WACA,MAAA,OACA,OAAA,OACA,aAAA,GACA,UAAAM,EAAA,KACA,QAAA,EACA,mBAAA,UACA,mBAAA,OACA,CACA,CAAA,EAQAC,EAAAC,EAAA,KACAC,EAAA,WAAA,CAAA,CAAA,MAAAd,EAAA,SAAAe,EAAA,GAAA,cAAAC,GAAAf,IAAA,CACA,MAAAgB,EAAAjB,EAAA,EAAA,EACAkB,EAAAnB,EAAAkB,CAAA,EACAE,EAAAjB,SAAA,IAAA,EAEAkB,OAAAA,EAAAA,UAAA,IAAA,CACA,MAAAC,EAAAC,EAAA,CACA,WAAA,CAAA,EAAA,CAAA,EACA,YAAA,CAAAhB,EAAAF,EAAAC,EAAAC,CAAA,CAAA,CACA,EAEAiB,EAAAL,EAAA,YAAA,CAAA,CAAA,MAAAlB,KAAA,CACAmB,EAAA,mBAAA,cACAA,EAAA,QAAA,MAAA,UAAA,cAAAE,EAAArB,CAAA,CAAA,MACA,CACA,EAEA,MAAA,IAAA,CACAkB,EAAA,eAAAK,CAAA,CAAA,CACA,EACA,CAAAL,CAAA,CAAA,EAEAE,EAAAA,UAAA,IAAA,CACAjB,EAAA,OAAAe,EAAA,CACA,WAAA,EACA,MAAA,GACA,QAAAD,EACA,gBAAA,EAAA,CACA,EAAA,MAAA,CAAA,EACA,CAAAC,EAAAD,CAAA,CAAA,EAGAO,EAAA,IAAAC,EAAA,CACA,IAAAxB,EACA,KAAA,SACA,eAAAD,EACA,SAAAe,EACA,QAAA,IAAAC,GAAA,YAAAA,EAAA,CAAAhB,GAEA,SAAA,CAAA,CAAA,QAAA0B,CAAA,IAEAC,EAAAA,KAAAC,EAAAA,SAAA,CAAA,SAAA,CAAAJ,MAAAK,EAAA,CAAA,MAAA,CAAAtB,EAAA,OAAAmB,GAAAnB,EAAA,MAAA,EAAA,QAEAsB,EAAA,CAAA,MAAA,CAAAtB,EAAA,KAAAP,GAAAO,EAAA,OAAAQ,GAAAR,EAAA,QAAA,EACA,SAAAiB,EAAAA,IAAAK,EAAA,CAAA,IAAAV,EAAA,MAAAZ,EAAA,OACA,SAAAiB,EAAA,IAAAM,EAAA,CACA,MAAArB,EAAA,SAAA,GAAA,EACA,KAAA,mBACA,KAAA,GACA,MAAA,CAAAF,EAAA,KAAAP,GAAAO,EAAA,MAAA,CAAA,GAEA,CACA,CAAA,CAAA,EACA,CAAA,CAAA,CAEA,CAEA,CACA"}