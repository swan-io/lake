{"version":3,"file":"CollapsibleAlert.stories-cuCvt0ZL.js","sources":["../../../packages/shared-business/src/components/CollapsibleLakeAlert.tsx"],"sourcesContent":["import { LakeAlert } from \"@swan-io/lake/src/components/LakeAlert\";\nimport { LakeButton } from \"@swan-io/lake/src/components/LakeButton\";\nimport { useBoolean } from \"@swan-io/lake/src/hooks/useBoolean\";\nimport { isNotNullish } from \"@swan-io/lake/src/utils/nullish\";\nimport { ComponentProps, ReactNode } from \"react\";\nimport { t } from \"../utils/i18n\";\n\ntype CollapsibleLakeAlertProps = ComponentProps<typeof LakeAlert> & {\n  showMoreLabel?: string;\n  showLessLabel?: string;\n  initialCollapsed?: boolean;\n  children?: ReactNode;\n};\n\nexport const CollapsibleLakeAlert = ({\n  showMoreLabel = t(\"common.showMore\"),\n  showLessLabel = t(\"common.showLess\"),\n  initialCollapsed = false,\n  children,\n  ...rest\n}: CollapsibleLakeAlertProps) => {\n  const [visible, { toggle }] = useBoolean(initialCollapsed);\n\n  return (\n    <LakeAlert\n      anchored={true}\n      {...rest}\n      callToAction={\n        isNotNullish(children) ? (\n          <LakeButton onPress={toggle} mode=\"tertiary\" size=\"small\">\n            {visible ? showLessLabel : showMoreLabel}\n          </LakeButton>\n        ) : null\n      }\n    >\n      {visible ? children : null}\n    </LakeAlert>\n  );\n};\n"],"names":["CollapsibleLakeAlert","showMoreLabel","t","showLessLabel","initialCollapsed","children","rest","visible","toggle","useBoolean","jsx","LakeAlert","isNotNullish","LakeButton"],"mappings":"2mBAcA,MAAAA,EAAA,CAAA,CACA,cAAAC,EAAAC,EAAA,iBAAA,EACA,cAAAC,EAAAD,EAAA,iBAAA,EACA,iBAAAE,EAAA,GACA,SAAAC,EACA,GAAAC,CACA,IAAA,CACA,KAAA,CAAAC,EAAA,CAAA,OAAAC,CAAA,CAAA,EAAAC,EAAAL,CAAA,EAGA,OAAAM,EAAA,IAAAC,EAAA,CACA,SAAA,GACA,GAAAL,EACA,aACAM,EAAAP,CAAA,QACAQ,EAAA,CAAA,QAAAL,EAAA,KAAA,WAAA,KAAA,QACA,SAAAD,EAAAJ,EAAAF,CACA,CAAA,EACA,KAGA,WAAAI,EAAA,IAAA,CAAA,CAGA;;;;;;;;;;;;;;;;;;;;;;;;"}