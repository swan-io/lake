{"version":3,"file":"TagInput.stories-jNJClR6H.js","sources":["../../../packages/lake/src/components/LakeTagInput.tsx","../../../packages/shared-business/__stories__/TagInput.stories.tsx"],"sourcesContent":["import { Ref, useCallback, useImperativeHandle, useRef, useState } from \"react\";\nimport {\n  NativeSyntheticEvent,\n  StyleSheet,\n  TextInput,\n  TextInputFocusEventData,\n  TextInputKeyPressEventData,\n  TextInputProps,\n  View,\n} from \"react-native\";\nimport { match, P } from \"ts-pattern\";\nimport { Merge } from \"type-fest\";\nimport { backgroundColor, colors, radii, shadows, spacings } from \"../constants/design\";\nimport { useHover } from \"../hooks/useHover\";\nimport { useMergeRefs } from \"../hooks/useMergeRefs\";\nimport { isNotNullish, isNotNullishOrEmpty, isNullishOrEmpty } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { LakeText } from \"./LakeText\";\nimport { Pressable } from \"./Pressable\";\nimport { Tag } from \"./Tag\";\n\nconst TRANSPARENT = \"transparent\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexDirection: \"row\",\n    alignItems: \"stretch\",\n  },\n  root: {\n    flexDirection: \"row\",\n    display: \"flex\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    borderRadius: radii[6],\n    backgroundColor: backgroundColor.accented,\n    borderColor: colors.gray[100],\n    borderWidth: 1,\n    paddingHorizontal: spacings[4],\n    paddingTop: spacings[4],\n    outlineStyle: \"none\",\n    cursor: \"text\",\n  },\n  focused: {\n    borderColor: colors.gray[500],\n    boxShadow: shadows.tile,\n  },\n  hovered: {\n    boxShadow: shadows.tile,\n  },\n  disabled: {\n    backgroundColor: colors.gray[50],\n    borderColor: colors.gray[50],\n    color: colors.gray[900],\n    cursor: \"not-allowed\",\n  },\n  readOnly: {\n    backgroundColor: colors.gray[50],\n    borderColor: colors.gray[50],\n    color: colors.gray[900],\n  },\n  readOnlyError: {\n    borderColor: TRANSPARENT,\n    paddingRight: spacings[32],\n  },\n  error: {\n    borderColor: colors.negative[400],\n  },\n  valid: {\n    borderColor: colors.positive[500],\n  },\n  input: {\n    height: 28,\n    marginBottom: spacings[4],\n    marginLeft: spacings[4],\n    outlineStyle: \"none\",\n    flexGrow: 1,\n  },\n  tag: {\n    marginRight: spacings[4],\n    marginBottom: spacings[4],\n    maxWidth: 350,\n  },\n  errorContainer: {\n    paddingTop: spacings[4],\n  },\n});\n\nexport type TagInputRef = TextInput & {\n  pushPendingValue: () => void;\n};\n\nexport type LakeTagInputProps = Merge<\n  TextInputProps,\n  {\n    ref?: Ref<TagInputRef>;\n    readOnly?: boolean;\n    error?: string;\n    disabled?: boolean;\n    valid?: boolean;\n    hideErrors?: boolean;\n    validateOnBlur?: boolean;\n    help?: string;\n    validator?: (value: string) => boolean;\n    values: string[];\n    onValuesChanged: (values: string[]) => void;\n    placeholder?: string;\n  }\n>;\n\nconst SEPARATORS_REGEX = /,| /;\n\nexport const LakeTagInput = ({\n  ref,\n  validator = () => true,\n  onFocus: originalOnFocus,\n  onBlur: originalOnBlur,\n  validateOnBlur = true,\n  values,\n  onValuesChanged,\n  readOnly = false,\n  disabled = false,\n  valid = false,\n  hideErrors = false,\n  placeholder,\n  help,\n  error,\n}: LakeTagInputProps) => {\n  const inputRef = useRef<TextInput>(null);\n  const containerRef = useRef<View>(null);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const mergedRef = useMergeRefs(inputRef, ref);\n\n  useHover(containerRef, {\n    onHoverStart: () => setIsHovered(true),\n    onHoverEnd: () => setIsHovered(false),\n  });\n\n  const pushNewValues = useCallback(\n    (vals: string[]) => {\n      onValuesChanged([...values, ...vals.filter(v => !values.includes(v))]);\n      inputRef.current?.clear();\n    },\n    [values, onValuesChanged],\n  );\n\n  const onTextInputChange = useCallback(\n    (value: string) => {\n      const input = [...new Set(value.split(SEPARATORS_REGEX).filter(s => s.length > 0))];\n      if (input.length > 1 || input[0] !== value) {\n        pushNewValues(input);\n      }\n    },\n    [pushNewValues],\n  );\n\n  const onTextInputKeyPress = useCallback(\n    ({ nativeEvent }: NativeSyntheticEvent<TextInputKeyPressEventData>) => {\n      if (disabled || readOnly) {\n        return;\n      }\n\n      match({ key: nativeEvent.key, input: inputRef.current })\n        .with({ key: \"Backspace\", input: P.instanceOf(HTMLInputElement) }, ({ input }) => {\n          if (isNullishOrEmpty(input.value)) {\n            onValuesChanged(values.filter(current => current !== values[values.length - 1]));\n          }\n        })\n        .with({ key: \"Enter\", input: P.instanceOf(HTMLInputElement) }, ({ input }) => {\n          if (isNotNullishOrEmpty(input.value)) {\n            pushNewValues([input.value]);\n          }\n        });\n    },\n    [onValuesChanged, pushNewValues, values, disabled, readOnly],\n  );\n\n  const autoFocus = useCallback(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  const onFocus = useCallback(\n    (event: NativeSyntheticEvent<TextInputFocusEventData>) => {\n      setIsFocused(true);\n      originalOnFocus?.(event);\n    },\n    [originalOnFocus],\n  );\n\n  const onBlur = useCallback(\n    (event: NativeSyntheticEvent<TextInputFocusEventData>) => {\n      const input = inputRef.current;\n      if (input instanceof HTMLInputElement && isNotNullishOrEmpty(input.value) && validateOnBlur) {\n        pushNewValues([input.value]);\n      }\n\n      setIsFocused(false);\n      originalOnBlur?.(event);\n    },\n    [pushNewValues, originalOnBlur, validateOnBlur],\n  );\n\n  useImperativeHandle<Pick<TagInputRef, \"pushPendingValue\">, Pick<TagInputRef, \"pushPendingValue\">>(\n    ref,\n    () => ({\n      pushPendingValue: () => {\n        const input = inputRef.current;\n        if (\n          input instanceof HTMLInputElement &&\n          isNotNullishOrEmpty(input.value) &&\n          validateOnBlur\n        ) {\n          pushNewValues([input.value]);\n        }\n      },\n    }),\n    [pushNewValues, validateOnBlur],\n  );\n\n  const hasError = isNotNullishOrEmpty(error);\n\n  return (\n    <View>\n      <Pressable\n        style={[\n          styles.root,\n          readOnly && hasError && styles.readOnlyError,\n          disabled && styles.disabled,\n          readOnly && styles.readOnly,\n          isFocused && styles.focused,\n          hasError && styles.error,\n          valid && styles.valid,\n          isHovered && styles.hovered,\n        ]}\n        aria-errormessage={error}\n        onPress={autoFocus}\n        ref={containerRef}\n      >\n        {values.map((value, i) => (\n          <Tag\n            key={i}\n            onPressRemove={\n              !readOnly && !disabled\n                ? () => onValuesChanged(values.filter(current => current !== value))\n                : undefined\n            }\n            style={styles.tag}\n            color={validator(value) ? \"gray\" : \"negative\"}\n          >\n            {value}\n          </Tag>\n        ))}\n\n        <TextInput\n          ref={mergedRef}\n          style={[styles.input, disabled && styles.disabled]}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          aria-disabled={disabled}\n          onChangeText={onTextInputChange}\n          onKeyPress={onTextInputKeyPress}\n          readOnly={readOnly}\n          placeholder={placeholder}\n        />\n      </Pressable>\n\n      {!hideErrors && (\n        <Box direction=\"row\" style={styles.errorContainer}>\n          {isNotNullish(error) ? (\n            <LakeText variant=\"smallRegular\" color={colors.negative[500]}>\n              {error}\n            </LakeText>\n          ) : (\n            <LakeText variant=\"smallRegular\" color={colors.gray[500]}>\n              {help ?? \" \"}\n            </LakeText>\n          )}\n        </Box>\n      )}\n    </View>\n  );\n};\n","import { Meta } from \"@storybook/react\";\nimport { LakeTagInput, LakeTagInputProps } from \"@swan-io/lake/src/components/LakeTagInput\";\nimport { LakeTextInput } from \"@swan-io/lake/src/components/LakeTextInput\";\nimport { useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Except } from \"type-fest\";\nimport { isValidEmail } from \"../src/utils/validation\";\nimport { StoryBlock, StoryPart } from \"./_StoriesComponents\";\n\nconst styles = StyleSheet.create({\n  input: {\n    maxWidth: 400,\n  },\n});\n\nexport default {\n  title: \"Forms/TagInput\",\n  component: LakeTextInput,\n} as Meta<typeof LakeTextInput>;\n\nconst EditableTagInput = (props: Except<LakeTagInputProps, \"onValuesChanged\" | \"values\">) => {\n  const [values, setValues] = useState<string[]>([\"toto\", \"dfghj@iouy.fr\"]);\n\n  return (\n    <View style={styles.input}>\n      <LakeTagInput\n        validator={isValidEmail}\n        onValuesChanged={setValues}\n        values={values}\n        {...props}\n      />\n    </View>\n  );\n};\n\nexport const Variations = () => {\n  return (\n    <StoryBlock title=\"Input variations\">\n      <StoryPart title=\"Default\">\n        <EditableTagInput />\n      </StoryPart>\n\n      <StoryPart title=\"Disabled\">\n        <EditableTagInput disabled={true} />\n      </StoryPart>\n\n      <StoryPart title=\"Error\">\n        <EditableTagInput error=\"Nop\" />\n      </StoryPart>\n\n      <StoryPart title=\"Hidden errors\">\n        <EditableTagInput error=\"Nop\" hideErrors={true} />\n      </StoryPart>\n\n      <StoryPart title=\"Valid\">\n        <EditableTagInput valid={true} />\n      </StoryPart>\n\n      <StoryPart title=\"With help\">\n        <EditableTagInput help=\"Fill me\" />\n      </StoryPart>\n\n      <StoryPart title=\"Read only\">\n        <EditableTagInput readOnly={true} />\n      </StoryPart>\n    </StoryBlock>\n  );\n};\n"],"names":["TRANSPARENT","styles","StyleSheet","radii","backgroundColor","colors","spacings","shadows","SEPARATORS_REGEX","LakeTagInput","ref","validator","originalOnFocus","originalOnBlur","validateOnBlur","values","onValuesChanged","readOnly","disabled","valid","hideErrors","placeholder","help","error","inputRef","useRef","containerRef","isFocused","setIsFocused","useState","isHovered","setIsHovered","mergedRef","useMergeRefs","useHover","pushNewValues","useCallback","vals","v","onTextInputChange","value","input","s","onTextInputKeyPress","nativeEvent","match","P","isNullishOrEmpty","current","isNotNullishOrEmpty","autoFocus","onFocus","event","onBlur","useImperativeHandle","hasError","View","jsxs","Pressable","i","jsx","Tag","TextInput","Box","LakeText","create","maxWidth","TagInput_stories","title","component","LakeTextInput","EditableTagInput","props","setValues","isValidEmail","Variations","StoryBlock","StoryPart"],"mappings":"upCAqBA,MAAMA,GAAc,cAEdC,EAASC,EAAW,OAAO,CAC/B,UAAW,CACT,SAAU,EACV,WAAY,EACZ,cAAe,MACf,WAAY,SAAA,EAEd,KAAM,CACJ,cAAe,MACf,QAAS,OACT,WAAY,SACZ,SAAU,OACV,aAAcC,EAAM,CAAC,EACrB,gBAAiBC,EAAgB,SACjC,YAAaC,EAAO,KAAK,GAAG,EAC5B,YAAa,EACb,kBAAmBC,EAAS,CAAC,EAC7B,WAAYA,EAAS,CAAC,EACtB,aAAc,OACd,OAAQ,MAAA,EAEV,QAAS,CACP,YAAaD,EAAO,KAAK,GAAG,EAC5B,UAAWE,EAAQ,IAAA,EAErB,QAAS,CACP,UAAWA,EAAQ,IAAA,EAErB,SAAU,CACR,gBAAiBF,EAAO,KAAK,EAAE,EAC/B,YAAaA,EAAO,KAAK,EAAE,EAC3B,MAAOA,EAAO,KAAK,GAAG,EACtB,OAAQ,aAAA,EAEV,SAAU,CACR,gBAAiBA,EAAO,KAAK,EAAE,EAC/B,YAAaA,EAAO,KAAK,EAAE,EAC3B,MAAOA,EAAO,KAAK,GAAG,CAAA,EAExB,cAAe,CACb,YAAaL,GACb,aAAcM,EAAS,EAAE,CAAA,EAE3B,MAAO,CACL,YAAaD,EAAO,SAAS,GAAG,CAAA,EAElC,MAAO,CACL,YAAaA,EAAO,SAAS,GAAG,CAAA,EAElC,MAAO,CACL,OAAQ,GACR,aAAcC,EAAS,CAAC,EACxB,WAAYA,EAAS,CAAC,EACtB,aAAc,OACd,SAAU,CAAA,EAEZ,IAAK,CACH,YAAaA,EAAS,CAAC,EACvB,aAAcA,EAAS,CAAC,EACxB,SAAU,GAAA,EAEZ,eAAgB,CACd,WAAYA,EAAS,CAAC,CAAA,CAE1B,CAAC,EAwBKE,GAAmB,MAEZC,EAAe,CAAC,CAC3B,IAAAC,EACA,UAAAC,EAAY,IAAM,GAClB,QAASC,EACT,OAAQC,EACR,eAAAC,EAAiB,GACjB,OAAAC,EACA,gBAAAC,EACA,SAAAC,EAAW,GACX,SAAAC,EAAW,GACX,MAAAC,EAAQ,GACR,WAAAC,EAAa,GACb,YAAAC,EACA,KAAAC,EACA,MAAAC,CACF,IAAyB,CACvB,MAAMC,EAAWC,EAAAA,OAAkB,IAAI,EACjCC,EAAeD,EAAAA,OAAa,IAAI,EAChC,CAACE,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAC1C,CAACC,EAAWC,CAAY,EAAIF,EAAAA,SAAS,EAAK,EAE1CG,EAAYC,EAAaT,EAAUd,CAAG,EAE5CwB,EAASR,EAAc,CACrB,aAAc,IAAMK,EAAa,EAAI,EACrC,WAAY,IAAMA,EAAa,EAAK,CAAA,CACrC,EAED,MAAMI,EAAgBC,EAAAA,YACnBC,GAAmB,CAClBrB,EAAgB,CAAC,GAAGD,EAAQ,GAAGsB,EAAK,OAAOC,GAAK,CAACvB,EAAO,SAASuB,CAAC,CAAC,CAAC,CAAC,EACrEd,EAAS,SAAS,MAAA,CACpB,EACA,CAACT,EAAQC,CAAe,CAAA,EAGpBuB,EAAoBH,EAAAA,YACvBI,GAAkB,CACjB,MAAMC,EAAQ,CAAC,GAAG,IAAI,IAAID,EAAM,MAAMhC,EAAgB,EAAE,OAAOkC,GAAKA,EAAE,OAAS,CAAC,CAAC,CAAC,GAC9ED,EAAM,OAAS,GAAKA,EAAM,CAAC,IAAMD,IACnCL,EAAcM,CAAK,CAEvB,EACA,CAACN,CAAa,CAAA,EAGVQ,EAAsBP,EAAAA,YAC1B,CAAC,CAAE,YAAAQ,CAAA,IAAoE,CACjE1B,GAAYD,GAIhB4B,EAAM,CAAE,IAAKD,EAAY,IAAK,MAAOpB,EAAS,OAAA,CAAS,EACpD,KAAK,CAAE,IAAK,YAAa,MAAOsB,EAAE,WAAW,gBAAgB,GAAK,CAAC,CAAE,MAAAL,KAAY,CAC5EM,EAAiBN,EAAM,KAAK,GAC9BzB,EAAgBD,EAAO,OAAOiC,GAAWA,IAAYjC,EAAOA,EAAO,OAAS,CAAC,CAAC,CAAC,CAEnF,CAAC,EACA,KAAK,CAAE,IAAK,QAAS,MAAO+B,EAAE,WAAW,gBAAgB,CAAA,EAAK,CAAC,CAAE,MAAAL,KAAY,CACxEQ,EAAoBR,EAAM,KAAK,GACjCN,EAAc,CAACM,EAAM,KAAK,CAAC,CAE/B,CAAC,CACL,EACA,CAACzB,EAAiBmB,EAAepB,EAAQG,EAAUD,CAAQ,CAAA,EAGvDiC,EAAYd,EAAAA,YAAY,IAAM,CAClCZ,EAAS,SAAS,MAAA,CACpB,EAAG,CAAA,CAAE,EAEC2B,EAAUf,EAAAA,YACbgB,GAAyD,CACxDxB,EAAa,EAAI,EACjBhB,IAAkBwC,CAAK,CACzB,EACA,CAACxC,CAAe,CAAA,EAGZyC,EAASjB,EAAAA,YACZgB,GAAyD,CACxD,MAAMX,EAAQjB,EAAS,QACnBiB,aAAiB,kBAAoBQ,EAAoBR,EAAM,KAAK,GAAK3B,GAC3EqB,EAAc,CAACM,EAAM,KAAK,CAAC,EAG7Bb,EAAa,EAAK,EAClBf,IAAiBuC,CAAK,CACxB,EACA,CAACjB,EAAetB,EAAgBC,CAAc,CAAA,EAGhDwC,EAAAA,oBACE5C,EACA,KAAO,CACL,iBAAkB,IAAM,CACtB,MAAM+B,EAAQjB,EAAS,QAErBiB,aAAiB,kBACjBQ,EAAoBR,EAAM,KAAK,GAC/B3B,GAEAqB,EAAc,CAACM,EAAM,KAAK,CAAC,CAE/B,CAAA,GAEF,CAACN,EAAerB,CAAc,CAAA,EAGhC,MAAMyC,EAAWN,EAAoB1B,CAAK,EAE1C,cACGiC,EAAA,CACC,SAAA,CAAAC,EAAAA,KAACC,GAAA,CACC,MAAO,CACLzD,EAAO,KACPgB,GAAYsC,GAAYtD,EAAO,cAC/BiB,GAAYjB,EAAO,SACnBgB,GAAYhB,EAAO,SACnB0B,GAAa1B,EAAO,QACpBsD,GAAYtD,EAAO,MACnBkB,GAASlB,EAAO,MAChB6B,GAAa7B,EAAO,OAAA,EAEtB,oBAAmBsB,EACnB,QAAS2B,EACT,IAAKxB,EAEJ,SAAA,CAAAX,EAAO,IAAI,CAACyB,EAAOmB,IAClBC,EAAAA,IAACC,GAAA,CAEC,cACE,CAAC5C,GAAY,CAACC,EACV,IAAMF,EAAgBD,EAAO,OAAOiC,GAAWA,IAAYR,CAAK,CAAC,EACjE,OAEN,MAAOvC,EAAO,IACd,MAAOU,EAAU6B,CAAK,EAAI,OAAS,WAElC,SAAAA,CAAA,EATImB,CAAA,CAWR,EAEDC,EAAAA,IAACE,GAAA,CACC,IAAK9B,EACL,MAAO,CAAC/B,EAAO,MAAOiB,GAAYjB,EAAO,QAAQ,EACjD,QAAAkD,EACA,OAAAE,EACA,gBAAenC,EACf,aAAcqB,EACd,WAAYI,EACZ,SAAA1B,EACA,YAAAI,CAAA,CAAA,CACF,CAAA,CAAA,EAGD,CAACD,GACAwC,EAAAA,IAACG,EAAA,CAAI,UAAU,MAAM,MAAO9D,EAAO,eAChC,WAAasB,CAAK,EACjBqC,EAAAA,IAACI,EAAA,CAAS,QAAQ,eAAe,MAAO3D,EAAO,SAAS,GAAG,EACxD,SAAAkB,CAAA,CACH,QAECyC,EAAA,CAAS,QAAQ,eAAe,MAAO3D,EAAO,KAAK,GAAG,EACpD,SAAAiB,GAAQ,IACX,CAAA,CAEJ,CAAA,EAEJ,CAEJ,qiBCnRA,MAAMrB,GAASC,EAAW+D,OAAO,CAC/BxB,MAAO,CACLyB,SAAU,GAAA,CAEd,CAAC,EAEDC,GAAe,CACbC,MAAO,iBACPC,UAAWC,EACb,EAEMC,EAAoBC,GAAmE,CAC3F,KAAM,CAACzD,EAAQ0D,CAAS,EAAI5C,EAAAA,SAAmB,CAAC,OAAQ,eAAe,CAAC,EAExE,OACE+B,EAAAA,IAACJ,EAAA,CAAK,MAAOvD,GAAOwC,MAClB,SAAAmB,MAACnD,EAAA,CACC,UAAWiE,GACX,gBAAiBD,EACjB,OAAA1D,KACIyD,EAAK,EAEb,CAEJ,EAEaG,EAAaA,IAEtBlB,EAAAA,KAACmB,GAAA,CAAW,MAAM,mBAChB,SAAA,CAAAhB,MAACiB,EAAA,CAAU,MAAM,UACf,SAAAjB,MAACW,IAAgB,EACnB,EAEAX,EAAAA,IAACiB,GAAU,MAAM,WACf,eAACN,EAAA,CAAiB,SAAU,GAAK,CAAA,CACnC,EAEAX,EAAAA,IAACiB,GAAU,MAAM,QACf,eAACN,EAAA,CAAiB,MAAM,MAAK,CAAA,CAC/B,EAEAX,EAAAA,IAACiB,EAAA,CAAU,MAAM,gBACf,SAAAjB,EAAAA,IAACW,GAAiB,MAAM,MAAM,WAAY,EAAA,CAAK,CAAA,CACjD,EAEAX,EAAAA,IAACiB,GAAU,MAAM,QACf,eAACN,EAAA,CAAiB,MAAO,GAAK,CAAA,CAChC,EAEAX,EAAAA,IAACiB,GAAU,MAAM,YACf,eAACN,EAAA,CAAiB,KAAK,UAAS,CAAA,CAClC,EAEAX,EAAAA,IAACiB,GAAU,MAAM,YACf,eAACN,EAAA,CAAiB,SAAU,GAAK,CAAA,CACnC,CAAA,EACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}