{"version":3,"file":"Stack-D-iYQYJl.js","sources":["../../../packages/lake/src/components/Stack.tsx"],"sourcesContent":["import { Children, Fragment, Ref } from \"react\";\nimport { View } from \"react-native\";\nimport { isNullish } from \"../utils/nullish\";\nimport { Box, BoxProps } from \"./Box\";\nimport { Space, SpacingValue } from \"./Space\";\n\ntype Props = BoxProps & {\n  ref?: Ref<View>;\n  space?: SpacingValue;\n};\n\n// Default <View /> styles https://github.com/necolas/react-native-web/blob/0.20.0/packages/react-native-web/src/exports/View/index.js#L149\nexport const Stack = ({ ref, children, space, ...props }: Props) => {\n  const { direction = \"column\" } = props;\n  const horizontal = direction === \"row\" || direction === \"rowReverse\";\n\n  return (\n    <Box ref={ref} {...props}>\n      {Children.map(children, (child, index) => {\n        // null, undefined, true and false are valid children. They simply donâ€™t render\n        if (isNullish(child) || typeof child === \"boolean\") {\n          return child;\n        }\n\n        return (\n          <Fragment>\n            {index !== 0 && (horizontal ? <Space width={space} /> : <Space height={space} />)}\n            {child}\n          </Fragment>\n        );\n      })}\n    </Box>\n  );\n};\n"],"names":["Stack","ref","children","space","props","direction","horizontal","jsx","Box","child","index","isNullish","Fragment","Space"],"mappings":"2GAYO,MAAMA,EAAQ,CAAC,CAAE,IAAAC,EAAK,SAAAC,EAAU,MAAAC,EAAO,GAAGC,KAAmB,CAClE,KAAM,CAAE,UAAAC,EAAY,QAAA,EAAaD,EAC3BE,EAAaD,IAAc,OAASA,IAAc,aAExD,OACEE,MAACC,EAAA,CAAI,IAAAP,EAAW,GAAGG,EAChB,oBAAS,IAAIF,EAAU,CAACO,EAAOC,IAE1BC,EAAUF,CAAK,GAAK,OAAOA,GAAU,UAChCA,SAING,WAAA,CACE,SAAA,CAAAF,IAAU,IAAMJ,EAAaC,EAAAA,IAACM,EAAA,CAAM,MAAOV,EAAO,EAAKI,EAAAA,IAACM,EAAA,CAAM,OAAQV,CAAA,CAAO,GAC7EM,CAAA,EACH,CAEH,CAAA,CACH,CAEJ"}