{"version":3,"file":"LakeTextInput-B5vV3C9E.js","sources":["../../../packages/lake/src/hooks/useNativeProp.ts","../../../packages/lake/src/components/LakeTextInput.tsx"],"sourcesContent":["import { RefObject, useLayoutEffect } from \"react\";\nimport { isNotNullish } from \"../utils/nullish\";\n\nexport const useNativeProp = <T>(\n  ref: RefObject<T | null>,\n  name: string,\n  value: number | string | undefined,\n) => {\n  useLayoutEffect(() => {\n    if (isNotNullish(value) && ref.current instanceof Element) {\n      ref.current.setAttribute(name, String(value));\n    }\n  }, [ref, name, value]);\n};\n","import { ChangeEventHandler, ReactNode, Ref, useCallback, useRef, useState } from \"react\";\nimport {\n  ActivityIndicator,\n  NativeSyntheticEvent,\n  StyleSheet,\n  TextInput,\n  TextInputFocusEventData,\n  TextInputProps,\n  View,\n  ViewProps,\n} from \"react-native\";\nimport { Except } from \"type-fest\";\nimport { commonStyles } from \"../constants/commonStyles\";\nimport {\n  backgroundColor,\n  colors,\n  ColorVariants,\n  radii,\n  shadows,\n  spacings,\n  texts,\n} from \"../constants/design\";\nimport { useHover } from \"../hooks/useHover\";\nimport { useMergeRefs } from \"../hooks/useMergeRefs\";\nimport { useNativeProp } from \"../hooks/useNativeProp\";\nimport { isNotNullish, isNotNullishOrEmpty, isNullish } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { Fill } from \"./Fill\";\nimport { Icon, IconName } from \"./Icon\";\nimport { LakeSelect } from \"./LakeSelect\";\nimport { LakeText } from \"./LakeText\";\n\nconst TRANSPARENT = \"transparent\";\n\nconst styles = StyleSheet.create({\n  root: {\n    flexGrow: 1,\n    flexDirection: \"row\",\n  },\n  container: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexDirection: \"row\",\n    alignItems: \"stretch\",\n  },\n  contents: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexDirection: \"row\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: radii[6],\n    backgroundColor: backgroundColor.accented,\n    borderColor: colors.gray[100],\n    borderWidth: 1,\n    paddingHorizontal: spacings[8],\n  },\n  input: {\n    ...texts.regular,\n    flexGrow: 1,\n    outlineStyle: \"none\",\n    placeholderTextColor: colors.gray[400],\n    color: colors.gray[900],\n    paddingHorizontal: spacings[8],\n    height: 38,\n    minWidth: 0,\n  },\n  multilineInput: {\n    height: \"100%\",\n    padding: spacings[8],\n  },\n  inputWithUnit: {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n  hovered: {\n    boxShadow: shadows.tile,\n  },\n  disabled: {\n    backgroundColor: colors.gray[50],\n    borderColor: colors.gray[50],\n    color: colors.gray[900],\n    cursor: \"not-allowed\",\n  },\n  readOnly: {\n    backgroundColor: colors.gray[50],\n    borderColor: colors.gray[50],\n    color: colors.gray[900],\n  },\n  error: {\n    borderColor: colors.negative[400],\n  },\n  valid: {\n    borderColor: colors.positive[500],\n  },\n  readOnlyError: {\n    borderColor: TRANSPARENT,\n    paddingRight: spacings[32],\n  },\n  endIcon: {\n    marginHorizontal: spacings[8],\n  },\n  endComponents: {\n    flexDirection: \"row\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginLeft: spacings[8],\n  },\n  icon: {\n    marginLeft: spacings[8],\n    margiRight: spacings[4],\n  },\n  readOnlyEndIcon: {\n    right: 0,\n  },\n  unit: {\n    backgroundColor: colors.gray[50],\n    paddingHorizontal: spacings[16],\n    paddingVertical: spacings[8],\n    maxHeight: 40,\n    borderTopRightRadius: radii[6],\n    borderBottomRightRadius: radii[6],\n    borderColor: colors.gray[100],\n    borderWidth: 1,\n    borderLeftWidth: 0,\n    flexShrink: 0,\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n  unitDisabled: {\n    borderColor: colors.gray[50],\n  },\n  focused: {\n    borderColor: colors.gray[500],\n    boxShadow: shadows.tile,\n  },\n  descriptionLimitation: {\n    flexShrink: 0,\n  },\n  errorContainer: {\n    paddingTop: spacings[4],\n  },\n});\n\n// The `onChange` type change is for compatibity with Rifm\nexport type LakeTextInputProps = Except<\n  TextInputProps,\n  \"editable\" | \"keyboardType\" | \"onChange\"\n> & {\n  ref?: Ref<TextInput>;\n  ariaExpanded?: boolean;\n  ariaControls?: string;\n  error?: string;\n  readOnly?: boolean;\n  validating?: boolean;\n  valid?: boolean;\n  disabled?: boolean;\n  color?: ColorVariants;\n  multiline?: boolean;\n  icon?: IconName;\n  unit?: string;\n  units?: string[];\n  inputMode?: TextInputProps[\"inputMode\"];\n  pattern?: string;\n  children?: ReactNode;\n  hideErrors?: boolean;\n  style?: TextInputProps[\"style\"];\n  containerStyle?: ViewProps[\"style\"];\n  onChange?: ChangeEventHandler<HTMLInputElement>;\n  onUnitChange?: (value: string) => void;\n  maxCharCount?: number;\n  help?: string;\n  info?: ReactNode | null | undefined;\n  warning?: boolean;\n  renderEnd?: () => ReactNode;\n  containerRef?: Ref<View>;\n};\n\nexport const LakeTextInput = ({\n  ref,\n  ariaExpanded,\n  ariaControls,\n  error,\n  disabled = false,\n  validating = false,\n  valid = false,\n  readOnly = false,\n  icon,\n  children,\n  unit,\n  units,\n  color = \"gray\",\n  inputMode = \"text\",\n  hideErrors = false,\n  onChange,\n  onUnitChange,\n  pattern,\n  style: stylesFromProps,\n  containerStyle: containerStylesFromProps,\n  onFocus: originalOnFocus,\n  onBlur: originalOnBlur,\n  value,\n  defaultValue,\n  multiline = false,\n  containerRef,\n  //maxCharCount is different from maxLength(props inherited of TextInput)\n  //maxLength truncates the text in the limitation asked,\n  //maxCharCount doesn't have limitation but displays a counter of characters\n  maxCharCount,\n  help,\n  warning = false,\n  info,\n  renderEnd,\n  ...props\n}: LakeTextInputProps) => {\n  const inputRef = useRef<TextInput>(null);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n\n  useNativeProp(inputRef, \"pattern\", pattern);\n\n  useHover(inputRef, {\n    onHoverStart: () => setIsHovered(true),\n    onHoverEnd: () => setIsHovered(false),\n  });\n\n  const onFocus = useCallback(\n    (event: NativeSyntheticEvent<TextInputFocusEventData>) => {\n      setIsFocused(true);\n      originalOnFocus?.(event);\n    },\n    [originalOnFocus],\n  );\n\n  const onBlur = useCallback(\n    (event: NativeSyntheticEvent<TextInputFocusEventData>) => {\n      setIsFocused(false);\n      originalOnBlur?.(event);\n    },\n    [originalOnBlur],\n  );\n\n  const mergedRef = useMergeRefs(inputRef, ref);\n  const isInteractive = !disabled && !readOnly;\n  const hasError = isNotNullishOrEmpty(error);\n  const hasInfo = isNotNullish(info);\n  const charCount = isNullish(value) ? 0 : value.length;\n\n  return (\n    <View style={commonStyles.fill}>\n      <View style={styles.root} aria-errormessage={error}>\n        <View style={[styles.container, containerStylesFromProps]}>\n          <View\n            style={[\n              styles.contents,\n              isHovered && isInteractive && styles.hovered,\n              isFocused && { borderColor: colors[color][500] },\n              readOnly && hasError && styles.readOnlyError,\n              disabled && styles.disabled,\n              readOnly && styles.readOnly,\n              isFocused && styles.focused,\n              isNotNullish(unit ?? units) && styles.inputWithUnit,\n              warning && { borderColor: colors.warning[500] },\n              hasInfo && { borderColor: colors.shakespear[500] },\n              hasError && styles.error,\n              valid && styles.valid,\n              stylesFromProps,\n            ]}\n            ref={containerRef}\n          >\n            {isNotNullish(icon) && (\n              <Icon name={icon} size={20} color={colors.current.primary} style={styles.icon} />\n            )}\n\n            <TextInput\n              aria-expanded={ariaExpanded}\n              aria-controls={ariaControls}\n              inputMode={inputMode}\n              {...props}\n              defaultValue={defaultValue}\n              value={isNullish(defaultValue) ? (value ?? \"\") : value}\n              onFocus={onFocus}\n              onBlur={onBlur}\n              readOnly={!isInteractive}\n              onChange={onChange as TextInputProps[\"onChange\"]}\n              multiline={multiline}\n              ref={mergedRef}\n              style={[\n                styles.input,\n                multiline && styles.multilineInput,\n                readOnly && hasError && styles.readOnlyError,\n                disabled && styles.disabled,\n                readOnly && styles.readOnly,\n              ]}\n            />\n\n            {isNotNullish(renderEnd) && <View style={styles.endComponents}>{renderEnd()}</View>}\n\n            {validating && (\n              <ActivityIndicator size=\"small\" style={styles.endIcon} color={colors.current[500]} />\n            )}\n\n            {!validating && hasError && (\n              <Icon\n                name=\"warning-regular\"\n                size={20}\n                color={colors.negative[400]}\n                style={[styles.endIcon, readOnly && styles.readOnlyEndIcon]}\n              />\n            )}\n\n            {!validating && warning && !hasError && (\n              <Icon\n                name=\"warning-regular\"\n                size={20}\n                color={colors.warning[500]}\n                style={[styles.endIcon, readOnly && styles.readOnlyEndIcon]}\n              />\n            )}\n\n            {!validating && info && !hasError && (\n              <Icon\n                name=\"info-regular\"\n                size={20}\n                color={colors.shakespear[500]}\n                style={[styles.endIcon, readOnly && styles.readOnlyEndIcon]}\n              />\n            )}\n\n            {!validating && !hasError && valid && (\n              <Icon\n                name=\"checkmark-filled\"\n                size={20}\n                color={colors.positive[400]}\n                style={[styles.endIcon, readOnly && styles.readOnlyEndIcon]}\n              />\n            )}\n          </View>\n\n          {isNotNullish(units) && isNotNullish(onUnitChange) ? (\n            <Box>\n              <LakeSelect\n                value={unit}\n                onValueChange={onUnitChange}\n                items={units.map(value => ({ name: value, value }))}\n                disabled={disabled}\n                style={[styles.unit, (disabled || readOnly) && styles.unitDisabled]}\n                mode=\"borderless\"\n                hideErrors={true}\n              />\n            </Box>\n          ) : isNotNullish(unit) ? (\n            <LakeText\n              color={colors.gray[900]}\n              style={[styles.unit, (disabled || readOnly) && styles.unitDisabled]}\n            >\n              {unit}\n            </LakeText>\n          ) : null}\n        </View>\n\n        {children}\n      </View>\n\n      {!hideErrors && (\n        <Box direction=\"row\" style={styles.errorContainer}>\n          {isNotNullish(error) ? (\n            <LakeText variant=\"smallRegular\" color={colors.negative[500]}>\n              {error}\n            </LakeText>\n          ) : (\n            <LakeText variant=\"smallRegular\" color={colors.gray[500]}>\n              {help ?? \" \"}\n            </LakeText>\n          )}\n          {isNotNullish(info) && (\n            <LakeText variant=\"smallRegular\" color={colors.shakespear[500]}>\n              {info}\n            </LakeText>\n          )}\n\n          {isNotNullish(maxCharCount) && (\n            <>\n              <Fill minWidth={4} />\n\n              <LakeText\n                variant=\"smallRegular\"\n                color={charCount > maxCharCount ? colors.negative[500] : colors.gray[400]}\n                style={styles.descriptionLimitation}\n              >\n                {charCount} / {maxCharCount}\n              </LakeText>\n            </>\n          )}\n        </Box>\n      )}\n    </View>\n  );\n};\n"],"names":["useNativeProp","ref","name","value","useLayoutEffect","isNotNullish","TRANSPARENT","styles","StyleSheet","radii","backgroundColor","colors","spacings","texts","shadows","LakeTextInput","ariaExpanded","ariaControls","error","disabled","validating","valid","readOnly","icon","children","unit","units","color","inputMode","hideErrors","onChange","onUnitChange","pattern","stylesFromProps","containerStylesFromProps","originalOnFocus","originalOnBlur","defaultValue","multiline","containerRef","maxCharCount","help","warning","info","renderEnd","props","inputRef","useRef","isHovered","setIsHovered","useState","isFocused","setIsFocused","useHover","onFocus","useCallback","event","onBlur","mergedRef","useMergeRefs","isInteractive","hasError","isNotNullishOrEmpty","hasInfo","charCount","isNullish","jsxs","View","commonStyles","jsx","Icon","TextInput","ActivityIndicator","Box","LakeSelect","LakeText","Fragment","Fill"],"mappings":"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"}