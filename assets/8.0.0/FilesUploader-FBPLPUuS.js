import{s as L,d as V,g as O,b as E,M as C,c as j,j as e,B as k,L as U,S as w,V as x,$ as T,p as H,m as M,I as B,h as N,i as X}from"./Space-BWfEUChJ.js";import{r as s}from"./index-CBqU2yxZ.js";import{g as z,F as G}from"./FileInput-D6CwsBwp.js";import{L as h}from"./LakeAlert-CYY2BVkB.js";import{L as I}from"./LakeButton-Dc18w6LU.js";import{P as D}from"./Pressable-BWpnb3-9.js";import{T as _}from"./Tag-au5iXAuk.js";import{c as W}from"./commonStyles-t4XfA7cz.js";import{t as m}from"./i18n-D1UsVC7v.js";import{C as A}from"./index-DGaDRGzj.js";const $=a=>{const[g,i]=s.useState(a.initialFiles),v=s.useCallback(u=>{i(n=>n.some(r=>r.id===u.id)?n.map(r=>r.id===u.id?u:r):[...n,u])},[]),f=s.useCallback((u,n)=>a.generateUpload(u).tapError(r=>{a.onError!=null&&a.onError(r)}).flatMapOk(({upload:r,id:l})=>{i(t=>[...t.filter(o=>o.id!==l),{id:l,statusInfo:{status:"Uploading",progress:0},name:n.name}]);const c=t=>{i(o=>o.map(y=>y.id!==l?y:{...y,statusInfo:{status:"Uploading",progress:t.loaded/t.total}}))};return a.uploadFile({id:l,upload:r,file:n,onLoadStart:c,onProgress:c}).tapOk(()=>{i(t=>t.map(o=>o.id!==l?o:{...o,statusInfo:{status:"Uploaded"}}))}).tapError(t=>{a.onError!=null&&a.onError(t),i(o=>o.filter(y=>y.id!==l))})}),[a]),p=s.useCallback(u=>{i(n=>n.filter(r=>r.id!==u))},[]);return{files:g,upload:f,remove:p,add:v}},b=L.create({base:{backgroundColor:V.accented,borderRadius:8,boxShadow:O.tile,overflow:"hidden"},content:{height:56,paddingLeft:E[20],paddingRight:E[8]},progressBar:{flex:1,height:4,borderRadius:2,backgroundColor:C},progress:{height:4,transitionProperty:"width",transitionDuration:"300ms",transitionTimingFunction:"ease-in-out",borderRadius:2,backgroundColor:j.current[500]}}),P=({file:{id:a,statusInfo:g,name:i,url:v},showId:f=!1,onRemove:p})=>{const[u,n]=s.useState(!1),r=s.useCallback(()=>{p!=null&&(n(!0),p().tap(()=>n(!1)))},[p]),[l,c]=s.useState("copy");return e.jsxs(k,{style:b.base,children:[e.jsx(k,{alignItems:"center",direction:"row",style:b.content,children:g.status==="Uploading"?e.jsxs(e.Fragment,{children:[e.jsx(U,{numberOfLines:1,color:j.gray[700],children:m("fileTile.uploading")}),e.jsx(w,{width:20}),e.jsx(x,{role:"progressbar",style:b.progressBar,children:e.jsx(x,{style:[b.progress,{width:`${g.progress*100}%`}]})})]}):e.jsxs(e.Fragment,{children:[e.jsx(_,{icon:z(i),iconSize:20,color:T(g).with({status:H.union("Uploaded","Pending")},()=>"shakespear").with({status:"Validated"},()=>"positive").with({status:"Refused"},()=>"negative").exhaustive()}),e.jsx(w,{width:16}),e.jsxs(k,{grow:1,children:[e.jsx(U,{numberOfLines:1,color:j.gray[700],style:W.fill,children:i}),f?e.jsx(M,{describedBy:"copy",onHide:()=>c("copy"),togglableOnFocus:!0,content:l==="copy"?m("copyButton.copyTooltip"):m("copyButton.copiedTooltip"),children:e.jsx(D,{onPress:t=>{t.stopPropagation(),t.preventDefault(),A.setString(a),c("copied")},children:e.jsxs(k,{direction:"row",alignItems:"center",children:[e.jsx(U,{numberOfLines:1,variant:"smallRegular",children:m("fileTile.id",{id:a})}),e.jsx(w,{width:4}),e.jsx(B,{size:14,name:"copy-regular"})]})})}):null]}),e.jsx(w,{width:12}),N(v)&&e.jsx(I,{mode:"tertiary",size:"small",icon:"open-filled",onPress:()=>{window.open(v,"_blank")},ariaLabel:m("common.open")}),X(p)&&e.jsx(I,{mode:"tertiary",size:"small",icon:"delete-regular",color:"negative",onPress:r,loading:u,ariaLabel:m("common.remove")})]})}),T(g).with({status:"Pending"},()=>e.jsx(h,{anchored:!0,title:m("fileTile.status.Pending"),variant:"info"})).with({status:"Validated"},()=>e.jsx(h,{anchored:!0,title:m("fileTile.status.Validated"),variant:"success"})).with({status:"Refused"},({reason:t})=>e.jsx(h,{anchored:!0,title:m("fileTile.status.Refused"),variant:"error",children:t})).otherwise(()=>null)]})};P.__docgenInfo={description:"",methods:[],displayName:"FileTile",props:{file:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  id: string;
  statusInfo: SwanFileStatusInfo;
  name: string;
  url?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"statusInfo",value:{name:"union",raw:`| { status: "Uploading"; progress: number }
| { status: "Uploaded" }
| { status: "Pending" }
| { status: "Validated" }
| { status: "Refused"; reason: string }`,elements:[{name:"signature",type:"object",raw:'{ status: "Uploading"; progress: number }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploading"',required:!0}},{key:"progress",value:{name:"number",required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Uploaded" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploaded"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Pending" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Pending"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Validated" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Validated"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Refused"; reason: string }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Refused"',required:!0}},{key:"reason",value:{name:"string",required:!0}}]}}],required:!0}},{key:"name",value:{name:"string",required:!0}},{key:"url",value:{name:"string",required:!1}}]}},description:""},showId:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => Future<unknown>",signature:{arguments:[],return:{name:"Future",elements:[{name:"unknown"}],raw:"Future<unknown>"}}},description:""}}};const J=({maxSize:a,accept:g,icon:i,getUploadConfig:v,onRemoveFile:f,onChange:p,formatAndSizeDescription:u,canUpload:n=!0,showIds:r=!1,...l},c)=>{const{files:t,upload:o,remove:y,add:S}=$(l),F=s.useRef(p);F.current=p;const R=s.useRef(!0);return s.useImperativeHandle(c,()=>({add:S})),s.useEffect(()=>{if(R.current){R.current=!1;return}const d=F.current;d!=null&&d(t)},[t]),e.jsxs(k,{children:[n?e.jsxs(e.Fragment,{children:[e.jsx(G,{layout:"horizontal",onFiles:d=>{d.forEach(q=>{o(v(q),q)})},accept:g,icon:i,description:u,maxSize:a}),e.jsx(w,{height:12})]}):null,t.map((d,q)=>e.jsxs(s.Fragment,{children:[q>0?e.jsx(w,{height:12}):null,e.jsx(P,{file:d,showId:r,onRemove:f!=null&&d.statusInfo.status==="Uploaded"?()=>f(d).tapOk(()=>{y(d.id)}):void 0})]},d.id))]})},K=s.forwardRef(J);K.__docgenInfo={description:"",methods:[],displayName:"FilesUploader",props:{initialFiles:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  statusInfo: SwanFileStatusInfo;
  name: string;
  url?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"statusInfo",value:{name:"union",raw:`| { status: "Uploading"; progress: number }
| { status: "Uploaded" }
| { status: "Pending" }
| { status: "Validated" }
| { status: "Refused"; reason: string }`,elements:[{name:"signature",type:"object",raw:'{ status: "Uploading"; progress: number }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploading"',required:!0}},{key:"progress",value:{name:"number",required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Uploaded" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploaded"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Pending" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Pending"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Validated" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Validated"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Refused"; reason: string }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Refused"',required:!0}},{key:"reason",value:{name:"string",required:!0}}]}}],required:!0}},{key:"name",value:{name:"string",required:!0}},{key:"url",value:{name:"string",required:!1}}]}}],raw:"SwanFile[]"},description:""},generateUpload:{required:!0,tsType:{name:"signature",type:"function",raw:`(
  config: UploadInput,
) => Future<Result<UploadOutputWithId<UploadOutput>, GenerateUploadError>>`,signature:{arguments:[{type:{name:"UploadInput"},name:"config"}],return:{name:"Future",elements:[{name:"Result",elements:[{name:"signature",type:"object",raw:"{ id: string; upload: UploadOutput }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"upload",value:{name:"UploadOutput",required:!0}}]}},{name:"GenerateUploadError"}],raw:"Result<UploadOutputWithId<UploadOutput>, GenerateUploadError>"}],raw:"Future<Result<UploadOutputWithId<UploadOutput>, GenerateUploadError>>"}}},description:""},uploadFile:{required:!0,tsType:{name:"signature",type:"function",raw:"(config: UploadFileInput<UploadOutput>) => Future<Result<unknown, UploadFileError>>",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  upload: UploadOutput;
  file: File;
  onLoadStart: (event: ProgressEvent<XMLHttpRequestEventTarget>) => void;
  onProgress: (event: ProgressEvent<XMLHttpRequestEventTarget>) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"upload",value:{name:"UploadOutput",required:!0}},{key:"file",value:{name:"File",required:!0}},{key:"onLoadStart",value:{name:"signature",type:"function",raw:"(event: ProgressEvent<XMLHttpRequestEventTarget>) => void",signature:{arguments:[{type:{name:"ProgressEvent",elements:[{name:"XMLHttpRequestEventTarget"}],raw:"ProgressEvent<XMLHttpRequestEventTarget>"},name:"event"}],return:{name:"void"}},required:!0}},{key:"onProgress",value:{name:"signature",type:"function",raw:"(event: ProgressEvent<XMLHttpRequestEventTarget>) => void",signature:{arguments:[{type:{name:"ProgressEvent",elements:[{name:"XMLHttpRequestEventTarget"}],raw:"ProgressEvent<XMLHttpRequestEventTarget>"},name:"event"}],return:{name:"void"}},required:!0}}]}},name:"config"}],return:{name:"Future",elements:[{name:"Result",elements:[{name:"unknown"},{name:"UploadFileError"}],raw:"Result<unknown, UploadFileError>"}],raw:"Future<Result<unknown, UploadFileError>>"}}},description:""},onError:{required:!1,tsType:{name:"signature",type:"function",raw:"(error: GenerateUploadError | UploadFileError) => void",signature:{arguments:[{type:{name:"union",raw:"GenerateUploadError | UploadFileError",elements:[{name:"GenerateUploadError"},{name:"UploadFileError"}]},name:"error"}],return:{name:"void"}}},description:""},getUploadConfig:{required:!0,tsType:{name:"signature",type:"function",raw:"(file: File) => UploadInput",signature:{arguments:[{type:{name:"File"},name:"file"}],return:{name:"UploadInput"}}},description:""},accept:{required:!0,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:""},maxSize:{required:!0,tsType:{name:"number"},description:""},icon:{required:!0,tsType:{name:"unknown"},description:""},formatAndSizeDescription:{required:!1,tsType:{name:"string"},description:""},onRemoveFile:{required:!1,tsType:{name:"signature",type:"function",raw:"(file: SwanFile) => Future<Result<unknown, unknown>>",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  statusInfo: SwanFileStatusInfo;
  name: string;
  url?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"statusInfo",value:{name:"union",raw:`| { status: "Uploading"; progress: number }
| { status: "Uploaded" }
| { status: "Pending" }
| { status: "Validated" }
| { status: "Refused"; reason: string }`,elements:[{name:"signature",type:"object",raw:'{ status: "Uploading"; progress: number }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploading"',required:!0}},{key:"progress",value:{name:"number",required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Uploaded" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploaded"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Pending" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Pending"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Validated" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Validated"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Refused"; reason: string }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Refused"',required:!0}},{key:"reason",value:{name:"string",required:!0}}]}}],required:!0}},{key:"name",value:{name:"string",required:!0}},{key:"url",value:{name:"string",required:!1}}]}},name:"file"}],return:{name:"Future",elements:[{name:"Result",elements:[{name:"unknown"},{name:"unknown"}],raw:"Result<unknown, unknown>"}],raw:"Future<Result<unknown, unknown>>"}}},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(files: SwanFile[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  statusInfo: SwanFileStatusInfo;
  name: string;
  url?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"statusInfo",value:{name:"union",raw:`| { status: "Uploading"; progress: number }
| { status: "Uploaded" }
| { status: "Pending" }
| { status: "Validated" }
| { status: "Refused"; reason: string }`,elements:[{name:"signature",type:"object",raw:'{ status: "Uploading"; progress: number }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploading"',required:!0}},{key:"progress",value:{name:"number",required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Uploaded" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploaded"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Pending" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Pending"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Validated" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Validated"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Refused"; reason: string }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Refused"',required:!0}},{key:"reason",value:{name:"string",required:!0}}]}}],required:!0}},{key:"name",value:{name:"string",required:!0}},{key:"url",value:{name:"string",required:!1}}]}}],raw:"SwanFile[]"},name:"files"}],return:{name:"void"}}},description:""},canUpload:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},showIds:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}}}};export{K as F};
//# sourceMappingURL=FilesUploader-FBPLPUuS.js.map
