{"version":3,"file":"SearchField.stories-Ubp1ZamA.js","sources":["../../../packages/lake/src/hooks/useDebounce.ts","../../../packages/lake/src/components/LakeSearchField.tsx"],"sourcesContent":["import { useCallback, useRef } from \"react\";\nimport { isNotNullish } from \"../utils/nullish\";\n\nexport const useDebounce = <T>(func: (arg: T) => void, duration: number) => {\n  const timeoutRef = useRef<number | undefined>(undefined);\n\n  return useCallback(\n    (arg: T) => {\n      if (isNotNullish(timeoutRef.current)) {\n        clearTimeout(timeoutRef.current);\n      }\n      timeoutRef.current = window.setTimeout(func, duration, arg);\n      return () => clearTimeout(timeoutRef.current);\n    },\n    [func, duration],\n  );\n};\n","import { ReactNode, Ref, useCallback, useRef, useState } from \"react\";\nimport { Pressable, StyleSheet, TextInput, View } from \"react-native\";\nimport { animations, backgroundColor, colors, radii, spacings } from \"../constants/design\";\nimport { useBoolean } from \"../hooks/useBoolean\";\nimport { useDebounce } from \"../hooks/useDebounce\";\nimport { isNotNullishOrEmpty } from \"../utils/nullish\";\nimport { LakeButton } from \"./LakeButton\";\nimport { LakeTextInput } from \"./LakeTextInput\";\nimport { ResponsiveContainer } from \"./ResponsiveContainer\";\nimport { Line, Svg } from \"./Svg\";\nimport { TransitionView } from \"./TransitionView\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  input: {\n    transition: \"300ms ease-in-out border-color\",\n    // ResponsiveContainer uses a 200 breaking,\n    // we give the opportunity to the component to grow 2px more\n    // to trigger the change\n    maxWidth: 202,\n    minWidth: 38,\n    justifyContent: \"flex-end\",\n  },\n  focus: {\n    outlineStyle: \"none\",\n    borderColor: colors.current.primary,\n  },\n  clearButton: {\n    marginRight: spacings[8],\n  },\n  clear: {\n    width: 8,\n    height: 8,\n  },\n  smallButtonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    flexGrow: 1,\n  },\n  largeInputContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    flexGrow: 1,\n  },\n  openSearchFieldContainer: {\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    bottom: 0,\n  },\n  openSearchField: {\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    bottom: 0,\n    boxShadow: `0 0 20px 20px ${backgroundColor.default}`,\n    borderRadius: radii[6],\n  },\n});\n\ntype Props = {\n  initialValue: string;\n  placeholder: string;\n  onChangeText: (text: string) => void;\n  debounceDuration?: number;\n  maxWidth?: number;\n  renderEnd?: () => ReactNode;\n};\n\ntype InternalProps = {\n  inputRef: Ref<TextInput>;\n  placeholder: string;\n  initialValue: string;\n  onChange: (value: string) => void;\n  setFocused: { on: () => void; off: () => void };\n  hasFocus: boolean;\n  clear: () => void;\n  currentValue: string;\n  renderEnd?: () => ReactNode;\n};\n\nconst CollapsibleSeachField = ({\n  inputRef,\n  placeholder,\n  initialValue,\n  onChange,\n  setFocused,\n  hasFocus,\n  clear,\n  currentValue,\n  renderEnd,\n}: InternalProps) => {\n  return (\n    <View style={styles.smallButtonContainer}>\n      <LakeButton\n        mode=\"secondary\"\n        size=\"small\"\n        ariaLabel={placeholder}\n        icon=\"search-filled\"\n        onPress={() => {\n          setFocused.on();\n        }}\n        pill={currentValue !== \"\"}\n      />\n\n      <TransitionView\n        style={styles.openSearchFieldContainer}\n        {...animations.fadeAndSlideInFromRight}\n      >\n        {hasFocus ? (\n          <View style={styles.openSearchField}>\n            <ExpandedSearchField\n              inputRef={inputRef}\n              placeholder={placeholder}\n              initialValue={initialValue}\n              onChange={onChange}\n              setFocused={setFocused}\n              hasFocus={hasFocus}\n              clear={clear}\n              currentValue={currentValue}\n              renderEnd={renderEnd}\n            />\n          </View>\n        ) : null}\n      </TransitionView>\n    </View>\n  );\n};\n\nconst ExpandedSearchField = ({\n  inputRef,\n  placeholder,\n  initialValue,\n  onChange,\n  setFocused,\n  hasFocus,\n  clear,\n  renderEnd,\n  currentValue,\n}: InternalProps) => {\n  const timeoutRef = useRef<number | null>(null);\n\n  return (\n    <LakeTextInput\n      ref={inputRef}\n      autoFocus={hasFocus}\n      icon=\"search-filled\"\n      placeholder={placeholder}\n      defaultValue={initialValue}\n      inputMode=\"search\"\n      onChangeText={onChange}\n      hideErrors={true}\n      renderEnd={() => (\n        <>\n          {isNotNullishOrEmpty(currentValue) && (\n            <Pressable\n              onPress={() => {\n                if (timeoutRef.current != null) {\n                  clearTimeout(timeoutRef.current);\n                }\n                clear();\n              }}\n              style={styles.clearButton}\n            >\n              <Svg viewBox=\"0 0 16 16\" style={styles.clear}>\n                <>\n                  <Line\n                    x1=\"0\"\n                    x2=\"16\"\n                    y1=\"0\"\n                    y2=\"16\"\n                    strokeLinecap=\"round\"\n                    stroke={colors.gray[500]}\n                    strokeWidth={2}\n                  />\n\n                  <Line\n                    x1=\"0\"\n                    x2=\"16\"\n                    y1=\"16\"\n                    y2=\"0\"\n                    strokeLinecap=\"round\"\n                    stroke={colors.gray[500]}\n                    strokeWidth={2}\n                  />\n                </>\n              </Svg>\n            </Pressable>\n          )}\n\n          {renderEnd?.()}\n        </>\n      )}\n      onFocus={() => {\n        if (timeoutRef.current != null) {\n          clearTimeout(timeoutRef.current);\n        }\n        setFocused.on();\n      }}\n      onBlur={() => {\n        timeoutRef.current = window.setTimeout(() => {\n          setFocused.off();\n        }, 300);\n      }}\n      containerStyle={styles.largeInputContainer}\n      style={[styles.input, hasFocus ? styles.focus : null]}\n    />\n  );\n};\n\nexport const LakeSearchField = ({\n  initialValue,\n  placeholder,\n  onChangeText,\n  debounceDuration = 500,\n  maxWidth,\n  renderEnd,\n}: Props) => {\n  const [hasFocus, setFocused] = useBoolean(false);\n  const inputRef = useRef<TextInput>(null);\n\n  const [currentValue, setCurrentValue] = useState(initialValue);\n\n  const onChange = useDebounce((value: string) => {\n    onChangeText(value);\n    setCurrentValue(value.trim());\n  }, debounceDuration);\n\n  const clear = useCallback(() => {\n    if (inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.clear();\n      inputRef.current.focus();\n      onChangeText(\"\");\n      setCurrentValue(\"\");\n    }\n  }, [onChangeText]);\n\n  const props = {\n    inputRef,\n    placeholder,\n    initialValue,\n    onChange,\n    setFocused,\n    hasFocus,\n    clear,\n    currentValue,\n    renderEnd,\n  };\n\n  return (\n    <ResponsiveContainer\n      breakpoint={200}\n      style={[styles.container, maxWidth != null && { maxWidth }]}\n    >\n      {({ large }) => {\n        const Component = large ? ExpandedSearchField : CollapsibleSeachField;\n        return <Component {...props} />;\n      }}\n    </ResponsiveContainer>\n  );\n};\n"],"names":["useDebounce","func","duration","timeoutRef","useRef","useCallback","arg","isNotNullish","styles","StyleSheet","colors","spacings","backgroundColor","radii","CollapsibleSeachField","inputRef","placeholder","initialValue","onChange","setFocused","hasFocus","clear","currentValue","renderEnd","jsxs","View","jsx","LakeButton","TransitionView","animations","ExpandedSearchField","LakeTextInput","Fragment","isNotNullishOrEmpty","Pressable","Svg","Line","LakeSearchField","onChangeText","debounceDuration","maxWidth","useBoolean","setCurrentValue","useState","value","props","ResponsiveContainer","large","Component"],"mappings":"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"}