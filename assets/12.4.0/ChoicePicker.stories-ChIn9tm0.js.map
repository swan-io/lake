{"version":3,"file":"ChoicePicker.stories-ChIn9tm0.js","sources":["../../../packages/lake/src/utils/math.ts","../../../packages/lake/src/utils/viewport.ts","../../../packages/shared-business/src/components/ChoicePicker.tsx","../../../packages/shared-business/__stories__/ChoicePicker.stories.tsx"],"sourcesContent":["import { isNotNullish, isNullish } from \"./nullish\";\n\ntype InterpolateTuple = [number, number, ...number[]];\ntype FixedLength<L extends number> = number[] & { 0: number; length: L };\n\ntype InterpolateParams<T extends InterpolateTuple> = {\n  inputRange: T;\n  outputRange: FixedLength<T[\"length\"]>;\n  clamp?: boolean;\n};\n\nconst getValue = (array: number[], index: number, name: string): number => {\n  const value = array[index];\n  if (isNullish(value)) {\n    throw new Error(`Interpolation Error: index \"${index}\" doesn't exists in ${name}`);\n  }\n  return value;\n};\n\nexport const clampValue =\n  (min: number, max: number) =>\n  (value: number): number =>\n    Math.max(Math.min(value, max), min);\n\n// Here we can disable no-non-null-assertion because this function is called in interpolate which have types checking if there is at least 2 values in range\nconst getRangeIndexes = <T extends InterpolateTuple>(range: T, value: number): [number, number] => {\n  if (value < range[0]) {\n    return [0, 1];\n  }\n\n  const maxIndex = range.length - 1;\n  for (let i = 0; i <= maxIndex; i += 1) {\n    const nextIndex = i + 1;\n    const startRange = getValue(range, i, \"range\");\n    const endRange = range[nextIndex];\n\n    if (isNotNullish(endRange) && value > startRange && value < endRange) {\n      return [i, nextIndex];\n    }\n  }\n\n  // if no values was found, it means value is upper than last range value\n  return [maxIndex - 1, maxIndex];\n};\n\n/**\n * This function is similar to `Animated.interpolate` except this one can be used with numbers\n * Whereas `Animated.interpolate` works only with animated values and return a listener, not a single value\n */\nexport const interpolate = <T extends InterpolateTuple>({\n  inputRange: input,\n  outputRange: output,\n  clamp = true,\n}: InterpolateParams<T>): ((value: number) => number) => {\n  return (value: number): number => {\n    const [startIndex, endIndex] = getRangeIndexes(input, value);\n    const inputStart = getValue(input, startIndex, \"inputRange\");\n    const inputEnd = getValue(input, endIndex, \"inputRange\");\n    const lastInput = getValue(input, input.length - 1, \"inputRange\");\n    const outputStart = getValue(output, startIndex, \"outputRange\");\n    const outputEnd = getValue(output, endIndex, \"outputRange\");\n\n    const inputRange = inputEnd - inputStart;\n    const outputRange = outputEnd - outputStart;\n\n    const valueToConvert = clamp ? clampValue(input[0], lastInput)(value) : value;\n\n    const valueWithoutOffset = valueToConvert - inputStart;\n    const outputWithoutOffset = (outputRange * valueWithoutOffset) / inputRange;\n    const outputValue = outputWithoutOffset + outputStart;\n\n    return outputValue;\n  };\n};\n\ntype ElasticParams = {\n  elasticLength?: number; // the maximum value you can reach\n  elasticStrength?: number; // higher value, maximum value reached faster\n};\n\n/**\n * This function takes as input a number from 0 to Infinity and returns a number from 0 to elasticLength\n * With an exponential curve giving a feeling of elasticity\n * This kind of function can be used to:\n *  - recreate effect like scroll bounce on iOS\n *  - limit grab smoothly with touch interaction\n */\nexport const limitElastic =\n  ({ elasticLength = 100, elasticStrength = 0.008 }: ElasticParams) =>\n  (value: number): number =>\n    elasticLength * (1 - Math.exp(-elasticStrength * value));\n","import { Future } from \"@swan-io/boxed\";\n\n// When using `node.scroll()` with smooth behavior, there isn't any event to detect when the scroll animation is finished\n// We need this also with `ScrollView.scrollTo` (which just call the native node.scroll function)\n// More info about why this workaround: https://stackoverflow.com/a/60001032\nexport const detectScrollAnimationEnd = (element: HTMLElement): Future<void> => {\n  let lastScrollTop = element.scrollTop;\n  let lastScrollLeft = element.scrollLeft;\n\n  return Future.make<void>(resolve => {\n    let frame: number | undefined;\n\n    // We need to wait a bit before starting the loop because first requestAnimationFrame is called before the scroll animation starts\n    const timeout = setTimeout(() => {\n      const loop = () => {\n        frame = requestAnimationFrame(() => {\n          if (lastScrollTop !== element.scrollTop || lastScrollLeft !== element.scrollLeft) {\n            lastScrollTop = element.scrollTop;\n            lastScrollLeft = element.scrollLeft;\n            loop();\n          } else {\n            resolve();\n          }\n        });\n      };\n\n      loop();\n    }, 50);\n\n    return () => {\n      clearTimeout(timeout);\n      if (frame != null) {\n        cancelAnimationFrame(frame);\n      }\n    };\n  });\n};\n","import { LakeButton } from \"@swan-io/lake/src/components/LakeButton\";\nimport { LakeRadio } from \"@swan-io/lake/src/components/LakeRadio\";\nimport { Pressable } from \"@swan-io/lake/src/components/Pressable\";\nimport { ScrollView, ScrollViewRef } from \"@swan-io/lake/src/components/ScrollView\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport { Tile } from \"@swan-io/lake/src/components/Tile\";\nimport { commonStyles } from \"@swan-io/lake/src/constants/commonStyles\";\nimport { breakpoints, negativeSpacings, spacings } from \"@swan-io/lake/src/constants/design\";\nimport { useResponsive } from \"@swan-io/lake/src/hooks/useResponsive\";\nimport { clampValue } from \"@swan-io/lake/src/utils/math\";\nimport { detectScrollAnimationEnd } from \"@swan-io/lake/src/utils/viewport\";\nimport { ReactNode, useEffect, useRef, useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { match } from \"ts-pattern\";\nimport { t } from \"../utils/i18n\";\n\nconst styles = StyleSheet.create({\n  root: {\n    alignSelf: \"stretch\",\n    alignItems: \"stretch\",\n    flexGrow: 1,\n    overflow: \"hidden\",\n    marginHorizontal: negativeSpacings[12],\n  },\n  scrollSnap: {\n    scrollSnapType: \"x mandatory\",\n  },\n  container: {\n    alignSelf: \"stretch\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"stretch\",\n    justifyContent: \"center\",\n  },\n  mobileContainer: {\n    flexWrap: \"nowrap\",\n    justifyContent: \"flex-start\",\n    transitionProperty: \"transform\",\n    transitionDuration: \"300ms\",\n    transitionTimingFunction: \"ease-in-out\",\n  },\n  item: {\n    flexGrow: 0,\n    flexBasis: \"33.333%\",\n    maxWidth: 300,\n    padding: spacings[12],\n  },\n  itemAnimation: {\n    transform: \"translateZ(0px)\",\n    animationKeyframes: {\n      from: {\n        opacity: 0,\n        transform: \"translateZ(0px) translateX(50px)\",\n      },\n      to: {\n        opacity: 1,\n        transform: \"translateZ(0px) translateX(0px)\",\n      },\n    },\n    animationDuration: \"200ms\",\n    animationFillMode: \"backwards\",\n    animationTimingFunction: \"ease-in-out\",\n  },\n  itemLarge: {\n    flexBasis: \"50%\",\n    maxWidth: \"none\",\n  },\n  itemSmallViewport: {\n    width: \"100%\",\n    flexBasis: \"auto\",\n    maxWidth: \"none\",\n    scrollSnapAlign: \"center\",\n  },\n  tileContents: {\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    flexGrow: 1,\n  },\n  tileRenderedContents: {\n    alignItems: \"center\",\n    alignSelf: \"stretch\",\n    flexGrow: 1,\n  },\n  leftButton: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: negativeSpacings[24],\n    transform: \"translateY(-50%)\",\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderWidth: 1,\n    borderLeftWidth: 0,\n  },\n  rightButton: {\n    position: \"absolute\",\n    top: \"50%\",\n    right: negativeSpacings[24],\n    transform: \"translateY(-50%)\",\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderWidth: 1,\n    borderRightWidth: 0,\n  },\n});\n\ntype Props<T> = {\n  items: T[];\n  large?: boolean;\n  renderItem: (value: T) => ReactNode;\n  value?: T;\n  getId?: (item: T) => unknown;\n  onChange: (value: T) => void;\n  disabled?: boolean;\n  tile?: boolean;\n};\n\nconst identity = <T,>(x: T) => x;\n\nexport const ChoicePicker = <T,>({\n  tile = true,\n  items,\n  getId = identity,\n  large = false,\n  renderItem,\n  value,\n  disabled = false,\n  onChange,\n}: Props<T>) => {\n  const containerRef = useRef<ScrollViewRef>(null);\n  const { desktop } = useResponsive(breakpoints.medium);\n  const [mobilePosition, setMobilePosition] = useState<\"start\" | \"middle\" | \"end\">(\"start\");\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies:\n  useEffect(() => {\n    if (desktop) {\n      return;\n    }\n\n    // auto scroll to selected value on mobile\n    const container = containerRef.current;\n    if (container == null) {\n      return;\n    }\n    const index = items.findIndex(item => value === item);\n\n    if (index !== -1 && container.element != null) {\n      const width = container.element.offsetWidth;\n      container.scrollTo({ x: index * width, animated: false });\n    }\n\n    // if no value is selected, select first item\n    if (value == null && items[0] != null) {\n      onChange(items[0]);\n    }\n    // disable exhaustive-deps because we only want to run this effect only when screen size go from desktop to mobile\n  }, [desktop]);\n\n  const onScroll = () => {\n    // prevent scroll event when we change screen size from mobile to desktop\n    if (desktop) {\n      return;\n    }\n\n    const container = containerRef.current;\n    if (container == null) {\n      return;\n    }\n\n    if (container.element != null) {\n      const scrollLeft = container.element.scrollLeft;\n      const width = container.element.offsetWidth;\n      const index = clampValue(0, items.length - 1)(Math.round(scrollLeft / width));\n      const item = items[index];\n      if (item != null) {\n        onChange(item);\n      }\n\n      match(index)\n        .with(0, () => setMobilePosition(\"start\"))\n        .with(items.length - 1, () => setMobilePosition(\"end\"))\n        .otherwise(() => setMobilePosition(\"middle\"));\n    }\n  };\n\n  const onPressPrevious = () => {\n    const container = containerRef.current;\n    if (container == null) {\n      return;\n    }\n    if (container.element != null) {\n      const scrollLeft = container.element.scrollLeft;\n      const width = container.element.offsetWidth;\n      const index = Math.round(scrollLeft / width);\n      const previousIndex = Math.max(0, index - 1);\n\n      // remove scroll snap during scroll animation to avoid weird behavior on older browsers\n      container.element.style.scrollSnapType = \"none\";\n      containerRef.current?.scrollTo({ x: previousIndex * width, animated: true });\n      detectScrollAnimationEnd(container.element).onResolve(() => {\n        // set back scroll snap\n        // @ts-expect-error\n        container.element.style.scrollSnapType = null;\n      });\n    }\n  };\n\n  const onPressNext = () => {\n    const container = containerRef.current;\n    if (container == null) {\n      return;\n    }\n    if (container.element != null) {\n      const scrollLeft = container.element.scrollLeft;\n      const width = container.element.offsetWidth;\n      const index = Math.round(scrollLeft / width);\n      const nextIndex = Math.min(items.length - 1, index + 1);\n\n      // remove scroll snap during scroll animation to avoid weird behavior on older browsers\n      container.element.style.scrollSnapType = \"none\";\n      containerRef.current?.scrollTo({ x: nextIndex * width, animated: true });\n      detectScrollAnimationEnd(container.element).onResolve(() => {\n        // set back scroll snap\n        // @ts-expect-error\n        container.element.style.scrollSnapType = null;\n      });\n    }\n  };\n\n  return (\n    <View>\n      <View style={styles.root}>\n        <ScrollView\n          ref={containerRef}\n          horizontal={!desktop}\n          onScroll={onScroll}\n          scrollEventThrottle={200}\n          style={styles.scrollSnap}\n          contentContainerStyle={[\n            styles.container,\n            !desktop && styles.mobileContainer,\n            !desktop && { width: `${items.length * 100}%` },\n          ]}\n        >\n          {items.map((item, index) => (\n            <Pressable\n              key={String(index)}\n              disabled={disabled}\n              style={[\n                styles.item,\n                disabled && commonStyles.disabled,\n                desktop && styles.itemAnimation, // set enter animation only on desktop because it can break scroll snap\n                desktop && { animationDelay: `${200 + 100 * index}ms` },\n                large && styles.itemLarge,\n                !desktop && styles.itemSmallViewport,\n                !desktop && { width: `${100 / items.length}%` },\n              ]}\n              onPress={() => onChange(item)}\n            >\n              {({ hovered }) => {\n                const tileContent = (\n                  <View style={styles.tileContents}>\n                    <View style={styles.tileRenderedContents}>{renderItem(item)}</View>\n\n                    {desktop && (\n                      <>\n                        <Space height={24} />\n                        <LakeRadio value={value != null && getId(item) === getId(value)} />\n                      </>\n                    )}\n                  </View>\n                );\n                return tile ? (\n                  <Tile\n                    hovered={hovered}\n                    selected={value != null && getId(item) === getId(value)}\n                    flexGrow={1}\n                  >\n                    {tileContent}\n                  </Tile>\n                ) : (\n                  tileContent\n                );\n              }}\n            </Pressable>\n          ))}\n        </ScrollView>\n      </View>\n\n      {!desktop && (\n        <LakeButton\n          icon=\"chevron-left-filled\"\n          mode=\"secondary\"\n          forceBackground={true}\n          onPress={onPressPrevious}\n          disabled={mobilePosition === \"start\" || disabled}\n          style={styles.leftButton}\n          ariaLabel={t(\"common.previous\")}\n        />\n      )}\n\n      {!desktop && (\n        <LakeButton\n          icon=\"chevron-right-filled\"\n          mode=\"secondary\"\n          forceBackground={true}\n          onPress={onPressNext}\n          disabled={mobilePosition === \"end\" || disabled}\n          style={styles.rightButton}\n          ariaLabel={t(\"common.next\")}\n        />\n      )}\n    </View>\n  );\n};\n","import { Meta } from \"@storybook/react\";\nimport { Tag } from \"@swan-io/lake/src/components/Tag\";\nimport { spacings } from \"@swan-io/lake/src/constants/design\";\nimport { useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { match } from \"ts-pattern\";\nimport { ChoicePicker } from \"../src/components/ChoicePicker\";\nimport { StoryBlock, StoryPart } from \"./_StoriesComponents\";\n\nconst styles = StyleSheet.create({\n  part: {\n    padding: spacings[32], // adds some padding to avoid overflow hidden caused by storybook canvas\n  },\n});\n\nexport default {\n  title: \"Forms/ChoicePicker\",\n  component: ChoicePicker,\n} as Meta<typeof ChoicePicker>;\n\nexport const Default = () => {\n  const items: [\"Virtual\", \"VirtualAndPhysical\", \"SingleUseVirtual\"] = [\n    \"Virtual\",\n    \"VirtualAndPhysical\",\n    \"SingleUseVirtual\",\n  ];\n  const [value, setValue] = useState<(typeof items)[number]>();\n  const [largeValue, setLargeValue] = useState<(typeof items)[number]>();\n\n  return (\n    <StoryBlock title=\"Choice Picker\">\n      <StoryPart title=\"Default\" style={styles.part}>\n        <ChoicePicker\n          items={items}\n          value={value}\n          onChange={setValue}\n          renderItem={item =>\n            match(item)\n              .with(\"Virtual\", () => (\n                <Tag icon=\"phone-regular\" color=\"mediumSladeBlue\">\n                  Virtual\n                </Tag>\n              ))\n              .with(\"VirtualAndPhysical\", () => (\n                <Tag icon=\"payment-regular\" color=\"shakespear\">\n                  Virtual & physical\n                </Tag>\n              ))\n              .with(\"SingleUseVirtual\", () => (\n                <Tag icon=\"phone-regular\" color=\"darkPink\">\n                  Single use\n                </Tag>\n              ))\n              .exhaustive()\n          }\n        />\n      </StoryPart>\n\n      <StoryPart title=\"Large\" style={styles.part}>\n        <ChoicePicker\n          items={items}\n          value={largeValue}\n          large={true}\n          onChange={setLargeValue}\n          renderItem={item =>\n            match(item)\n              .with(\"Virtual\", () => (\n                <Tag icon=\"phone-regular\" color=\"mediumSladeBlue\">\n                  Virtual\n                </Tag>\n              ))\n              .with(\"VirtualAndPhysical\", () => (\n                <Tag icon=\"payment-regular\" color=\"shakespear\">\n                  Virtual & physical\n                </Tag>\n              ))\n              .with(\"SingleUseVirtual\", () => (\n                <Tag icon=\"phone-regular\" color=\"darkPink\">\n                  Single use\n                </Tag>\n              ))\n              .exhaustive()\n          }\n        />\n      </StoryPart>\n\n      <StoryPart title=\"Without tile\" style={styles.part}>\n        <ChoicePicker\n          tile={false}\n          items={items}\n          value={largeValue}\n          onChange={setLargeValue}\n          renderItem={item =>\n            match(item)\n              .with(\"Virtual\", () => (\n                <Tag icon=\"phone-regular\" color=\"mediumSladeBlue\">\n                  Virtual\n                </Tag>\n              ))\n              .with(\"VirtualAndPhysical\", () => (\n                <Tag icon=\"payment-regular\" color=\"shakespear\">\n                  Virtual & physical\n                </Tag>\n              ))\n              .with(\"SingleUseVirtual\", () => (\n                <Tag icon=\"phone-regular\" color=\"darkPink\">\n                  Single use\n                </Tag>\n              ))\n              .exhaustive()\n          }\n        />\n      </StoryPart>\n    </StoryBlock>\n  );\n};\n"],"names":["clampValue","min","max","value","detectScrollAnimationEnd","element","lastScrollTop","lastScrollLeft","Future","resolve","frame","timeout","loop","styles","StyleSheet","negativeSpacings","spacings","identity","x","ChoicePicker","tile","items","getId","large","renderItem","disabled","onChange","containerRef","useRef","desktop","useResponsive","breakpoints","mobilePosition","setMobilePosition","useState","useEffect","container","index","item","width","onScroll","scrollLeft","match","onPressPrevious","previousIndex","_a","onPressNext","nextIndex","View","jsx","ScrollView","Pressable","commonStyles","hovered","tileContent","jsxs","Fragment","Space","LakeRadio","Tile","LakeButton","t","create","part","padding","ChoicePicker_stories","title","component","Default","setValue","largeValue","setLargeValue","StoryBlock","StoryPart","with","Tag","exhaustive"],"mappings":"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"}