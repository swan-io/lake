{"version":3,"file":"Tile-DDLOHqIS.js","sources":["../../../packages/lake/src/components/Tile.tsx"],"sourcesContent":["import {\n  Children,\n  cloneElement,\n  Fragment,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useState,\n} from \"react\";\nimport { LayoutChangeEvent, StyleProp, StyleSheet, Text, View, ViewStyle } from \"react-native\";\nimport {\n  backgroundColor,\n  colors,\n  negativeSpacings,\n  radii,\n  shadows,\n  Spacings,\n  spacings,\n  texts,\n} from \"../constants/design\";\nimport { isNotNullish } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { LakeText } from \"./LakeText\";\nimport { ResponsiveContainer } from \"./ResponsiveContainer\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: backgroundColor.accented,\n    borderRadius: radii[8],\n    boxShadow: shadows.tile,\n    overflow: \"hidden\",\n  },\n  unselectedContainer: {\n    backgroundColor: backgroundColor.default,\n    boxShadow: `0 0 0 1px ${colors.gray[100]}`,\n  },\n  unselectedHoveredContainer: {\n    backgroundColor: backgroundColor.default,\n    boxShadow: `0 0 0 1px ${colors.gray[500]}`,\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  hoveredContainer: {\n    boxShadow: shadows.tileHover,\n  },\n  headerContainer: {\n    zIndex: 1,\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    justifyContent: \"space-between\",\n  },\n  title: {\n    ...texts.h3,\n    flexGrow: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  fullWidthContent: {\n    marginHorizontal: negativeSpacings[32],\n  },\n  fitToBottom: {\n    marginBottom: negativeSpacings[32],\n  },\n  column: {\n    flexGrow: 1,\n  },\n  descriptionContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n  },\n  description: {\n    width: 1,\n    flexGrow: 1,\n  },\n  headerTitleIcon: {\n    flexGrow: 1,\n  },\n  row: {\n    alignItems: \"stretch\",\n    marginHorizontal: negativeSpacings[12],\n  },\n  rowCol: {\n    flexGrow: 1,\n    padding: spacings[12],\n  },\n  footer: {\n    marginHorizontal: negativeSpacings[32],\n    alignSelf: \"stretch\",\n  },\n});\n\ntype Props = {\n  icon?: ReactNode;\n  title?: ReactNode;\n  description?: ReactNode;\n  headerEnd?: ReactNode;\n  paddingVertical?: Spacings;\n  paddingHorizontal?: Spacings;\n  children?: ReactNode;\n  footer?: ReactNode;\n  numberOfLines?: number;\n  flexBasis?: string;\n  flexGrow?: number;\n  flexShrink?: number;\n  hovered?: boolean;\n  disabled?: boolean;\n  selected?: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const Tile = ({\n  icon,\n  title,\n  description,\n  headerEnd,\n  footer,\n  flexBasis,\n  children,\n  numberOfLines,\n  paddingVertical = 32,\n  paddingHorizontal = 32,\n  hovered = false,\n  flexGrow = 0,\n  flexShrink = 0,\n  disabled = false,\n  selected,\n  style,\n}: Props) => {\n  return (\n    <View\n      role=\"region\"\n      style={[\n        styles.container,\n        selected === false && styles.unselectedContainer,\n        {\n          paddingVertical: spacings[paddingVertical],\n          paddingHorizontal: spacings[paddingHorizontal],\n          flexGrow,\n          flexShrink,\n          flexBasis,\n        },\n        hovered && styles.hoveredContainer,\n        selected === false && hovered && styles.unselectedHoveredContainer,\n        disabled && styles.disabled,\n        style,\n      ]}\n    >\n      {(isNotNullish(title) || isNotNullish(headerEnd) || isNotNullish(description)) && (\n        <View style={styles.headerContainer}>\n          <View style={styles.header}>\n            <View style={styles.headerTitleIcon}>\n              {isNotNullish(icon) && (\n                <>\n                  {icon}\n\n                  <Space height={12} />\n                </>\n              )}\n\n              {isNotNullish(title) && (\n                <Text style={styles.title} role=\"heading\" aria-level={3}>\n                  {title}\n                </Text>\n              )}\n            </View>\n\n            {isNotNullish(headerEnd) ? <View>{headerEnd}</View> : null}\n          </View>\n\n          {isNotNullish(description) && (\n            <>\n              {isNotNullish(title) && <Space height={12} />}\n\n              <View style={styles.descriptionContainer}>\n                <LakeText numberOfLines={numberOfLines} style={styles.description}>\n                  {description}\n                </LakeText>\n              </View>\n            </>\n          )}\n\n          {isNotNullish(children) && <Space height={24} />}\n        </View>\n      )}\n\n      {children}\n\n      {isNotNullish(footer) && (\n        <View\n          style={[styles.footer, { marginTop: paddingVertical, marginBottom: -paddingVertical }]}\n        >\n          {footer}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport const TileFullWidthContent = ({\n  children,\n  flexGrow,\n  fitToBottom = false,\n}: {\n  children: ReactNode;\n  flexGrow?: number;\n  fitToBottom?: boolean;\n}) => {\n  return (\n    <View style={[styles.fullWidthContent, fitToBottom && styles.fitToBottom, { flexGrow }]}>\n      {children}\n    </View>\n  );\n};\n\ntype TileGridProps = {\n  breakpoint?: number;\n  children: ReactNode;\n};\n\nconst SPACE = <Space height={24} />;\n\nexport const TileGrid = ({ children, breakpoint = 1000 }: TileGridProps) => {\n  return (\n    <ResponsiveContainer breakpoint={breakpoint}>\n      {({ small, large }) => {\n        const childrenArray = Children.toArray(children);\n        const leftColumn: ReactNode[] = [];\n        const rightColumn: ReactNode[] = [];\n\n        const nonNullChildren = childrenArray.filter(isNotNullish);\n\n        nonNullChildren.forEach((item, index) => {\n          if (small || index % 2 === 0) {\n            leftColumn.push(\n              <Fragment key={index}>\n                {item}\n                {SPACE}\n              </Fragment>,\n            );\n          } else {\n            rightColumn.push(\n              <Fragment key={index}>\n                {item}\n                {SPACE}\n              </Fragment>,\n            );\n          }\n        });\n\n        return (\n          <Box direction={small ? \"column\" : \"row\"}>\n            <View style={[large && styles.column, large && { flexBasis: breakpoint / 2 }]}>\n              {leftColumn}\n            </View>\n\n            <Space width={24} />\n\n            <View style={[large && styles.column, large && { flexBasis: breakpoint / 2 }]}>\n              {rightColumn}\n            </View>\n          </Box>\n        );\n      }}\n    </ResponsiveContainer>\n  );\n};\n\nexport const TileRows = ({ children, breakpoint = 1000 }: TileGridProps) => {\n  const [flexDirection, setFlexDirection] = useState<\"row\" | \"column\">(\"row\");\n\n  const onLayout = useCallback(\n    ({\n      nativeEvent: {\n        layout: { width },\n      },\n    }: LayoutChangeEvent) => {\n      setFlexDirection(() => (width < breakpoint ? \"column\" : \"row\"));\n    },\n    [breakpoint],\n  );\n\n  const childrenArray = Children.toArray(children);\n  const nonNullChildren = childrenArray.filter(isNotNullish);\n\n  const isRow = flexDirection === \"row\";\n\n  return (\n    <Box direction={flexDirection} onLayout={onLayout} style={styles.row}>\n      {nonNullChildren.map((item, index) => {\n        return (\n          <View key={index} style={[styles.rowCol, isRow && { flexBasis: breakpoint / 2 }]}>\n            {cloneElement(\n              item as ReactElement,\n              // @ts-expect-error\n              { flexGrow: 1 },\n            )}\n          </View>\n        );\n      })}\n    </Box>\n  );\n};\n"],"names":["styles","StyleSheet","backgroundColor","radii","shadows","colors","texts","negativeSpacings","spacings","Tile","icon","title","description","headerEnd","footer","flexBasis","children","numberOfLines","paddingVertical","paddingHorizontal","hovered","flexGrow","flexShrink","disabled","selected","style","jsxs","View","isNotNullish","Fragment","jsx","Space","Text","LakeText","SPACE","TileGrid","breakpoint","ResponsiveContainer","small","large","childrenArray","Children","leftColumn","rightColumn","item","index","Box"],"mappings":"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"}