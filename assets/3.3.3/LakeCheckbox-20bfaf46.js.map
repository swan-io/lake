{"version":3,"file":"LakeCheckbox-20bfaf46.js","sources":["../../../packages/lake/src/components/LakeCheckbox.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { ColorVariants, colors } from \"../constants/design\";\nimport { LakeText } from \"./LakeText\";\nimport { Pressable } from \"./Pressable\";\nimport { Space } from \"./Space\";\nimport { Animate, Path, Svg } from \"./Svg\";\n\nconst SIZE = 16;\nconst RADIUS = 4;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: SIZE,\n    height: SIZE,\n    borderRadius: RADIUS,\n    borderWidth: 1,\n    borderColor: colors.gray[500],\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  mixed: {\n    width: SIZE - 8,\n    height: 2,\n  },\n  labelled: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n});\n\nexport type CheckboxProps = {\n  value: boolean | \"mixed\";\n  color?: ColorVariants;\n  disabled?: boolean;\n  isError?: boolean;\n};\n\nexport const LakeCheckbox = ({\n  value,\n  color = \"current\",\n  disabled = false,\n  isError = false,\n}: CheckboxProps) => {\n  const isFirstRender = useRef(true);\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n\n  useEffect(() => {\n    if (!isFirstRender.current) {\n      setShouldAnimate(true);\n    }\n    isFirstRender.current = false;\n  }, [value]);\n\n  return (\n    <View\n      role=\"none\"\n      style={[\n        styles.container,\n        disabled && styles.disabled,\n        value !== false && {\n          backgroundColor: colors[color].primary,\n          borderColor: colors[color].primary,\n        },\n        isError && { borderColor: colors.negative[500] },\n      ]}\n    >\n      {value === true && (\n        <Svg viewBox=\"0 0 16 16\">\n          <Path\n            d=\"m3.5 7.5 2.8 3.4 5.6-6.7\"\n            stroke={colors[color].contrast}\n            strokeWidth={1.5}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeDasharray=\"20\"\n            strokeDashoffset={shouldAnimate ? \"20\" : \"0\"}\n          >\n            {shouldAnimate && (\n              <Animate\n                attributeName=\"stroke-dashoffset\"\n                values=\"20;0\"\n                dur=\"150ms\"\n                begin=\"150ms\"\n                fill=\"freeze\"\n              />\n            )}\n          </Path>\n        </Svg>\n      )}\n\n      {value === \"mixed\" && (\n        <View style={[styles.mixed, { backgroundColor: colors[color].contrast }]} />\n      )}\n    </View>\n  );\n};\n\nexport type LabelledCheckboxProps = CheckboxProps & {\n  onValueChange: (value: boolean) => void;\n  label: string;\n  disabled?: boolean;\n  isError?: boolean;\n};\n\nexport const LakeLabelledCheckbox = ({\n  value,\n  color,\n  label,\n  onValueChange,\n  disabled = false,\n  isError = false,\n}: LabelledCheckboxProps) => {\n  return (\n    <Pressable\n      role=\"checkbox\"\n      aria-checked={value}\n      style={styles.labelled}\n      onPress={() => onValueChange(value === true ? false : true)}\n      disabled={disabled}\n    >\n      <LakeCheckbox value={value} color={color} disabled={disabled} isError={isError} />\n      <Space width={8} />\n\n      <LakeText color={colors.gray[900]} userSelect=\"none\">\n        {label}\n      </LakeText>\n    </Pressable>\n  );\n};\n"],"names":["SIZE","RADIUS","styles","StyleSheet","colors","LakeCheckbox","value","color","disabled","isError","isFirstRender","useRef","shouldAnimate","setShouldAnimate","useState","useEffect","jsxs","View","jsx","Svg","Path","Animate","LakeLabelledCheckbox","label","onValueChange","Pressable","Space","LakeText"],"mappings":"sLAQA,MAAAA,EAAA,GACAC,EAAA,EAEAC,EAAAC,EAAA,OAAA,CAAiC,UAAA,CACpB,MAAAH,EACF,OAAAA,EACC,aAAAC,EACM,YAAA,EACD,YAAAG,EAAA,KAAA,GAAA,EACe,WAAA,SAChB,eAAA,QACI,EAClB,MAAA,CACO,MAAAJ,EAAA,EACS,OAAA,CACN,EACV,SAAA,CACU,cAAA,MACO,WAAA,QACH,EACd,SAAA,CACU,QAAA,EACC,CAEb,CAAA,EASOK,EAAA,CAAA,CAAsB,MAAAC,EAC3B,MAAAC,EAAA,UACQ,SAAAC,EAAA,GACG,QAAAC,EAAA,EAEb,IAAA,CACE,MAAAC,EAAAC,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEAC,OAAAA,EAAAA,UAAA,IAAA,CACEL,EAAA,SACEG,EAAA,EAAA,EAEFH,EAAA,QAAA,EAAwB,EAAA,CAAAJ,CAAA,CAAA,EAG1BU,EACEC,EAAC,CAAA,KAAA,OACM,MAAA,CACEf,EAAA,UACEM,GAAAN,EAAA,SACYI,IAAA,IAAA,CACA,gBAAAF,EAAAG,CAAA,EAAA,QACc,YAAAH,EAAAG,CAAA,EAAA,OACJ,EAC7BE,GAAA,CAAA,YAAAL,EAAA,SAAA,GAAA,CAAA,CAC+C,EACjD,SAAA,CAECE,IAAA,IAAAY,EAAAC,EAAA,CAAA,QAAA,YAAA,SAAAD,EAEGE,EAAC,CAAA,EAAA,2BACG,OAAAhB,EAAAG,CAAA,EAAA,SACoB,YAAA,IACT,KAAA,OACR,cAAA,QACS,eAAA,QACC,gBAAA,KACC,iBAAAK,EAAA,KAAA,IACyB,SAAAA,GAAAM,EAGvCG,EAAC,CAAA,cAAA,oBACe,OAAA,OACP,IAAA,QACH,MAAA,QACE,KAAA,QACD,CAAA,CACP,CAAA,EAAA,EAGNf,IAAA,SAAAY,EAAAD,EAAA,CAAA,MAAA,CAAAf,EAAA,MAAA,CAAA,gBAAAE,EAAAG,CAAA,EAAA,QAAA,CAAA,CAAA,CAAA,CAI0E,CAAA,CAAA,CAIlF,EASOe,EAAA,CAAA,CAA8B,MAAAhB,EACnC,MAAAC,EACA,MAAAgB,EACA,cAAAC,EACA,SAAAhB,EAAA,GACW,QAAAC,EAAA,EAEb,IACEO,EACES,EAAC,CAAA,KAAA,WACM,eAAAnB,EACS,MAAAJ,EAAA,SACA,QAAA,IAAAsB,EAAAlB,IAAA,EAAA,EAC4C,SAAAE,EAC1D,SAAA,CAEAU,EAAAb,EAAA,CAAA,MAAAC,EAAA,MAAAC,EAAA,SAAAC,EAAA,QAAAC,EAAA,EAAgFS,EAAAQ,EAAA,CAAA,MAAA,CAAA,CAAA,EAC/DR,EAAAS,EAAA,CAAA,MAAAvB,EAAA,KAAA,GAAA,EAAA,WAAA,OAAA,SAAAmB,CAAA,CAAA,CAIjB,CAAA,CAAA"}