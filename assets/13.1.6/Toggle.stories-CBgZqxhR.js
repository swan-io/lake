import{z as S,j as t,s as V,V as d,c as o,I as g,T as f,N as I,t as w,a as B,r as x,B as h}from"./ScrollView-B3LxNPW3.js";import{r as a}from"./iframe-CGx-dyke.js";import{P as C}from"./Pressable-BlbFV7Nx.js";import{S as P,a as y}from"./_StoriesComponents-B8YuQ5FJ.js";import"./index-DKTvhl2O.js";import"./preload-helper-D1IIBeq1.js";import"./Separator-LwAMQvlh.js";import"./commonStyles-BBEkV6IC.js";const n=1,r=V.create({base:{flexDirection:"row",alignItems:"center",borderColor:o.gray[200],borderRadius:x[8],borderWidth:n,height:28},handle:{position:"absolute",bottom:-n,left:-n,right:-n,top:-n,borderWidth:n,borderRadius:x[8],transitionDuration:"300ms",transitionProperty:"transform, width",transitionTimingFunction:"ease-in-out"},item:{paddingHorizontal:B[8]},text:{...w.smallMedium,color:o.gray[700],userSelect:"none"},hidden:{visibility:"hidden"},textOn:{color:o.positive[500]},textOff:{color:o.negative[500]}}),b=s=>S(s).returnType().with(I.instanceOf(HTMLElement),e=>e.offsetWidth).otherwise(()=>0),c=({compact:s=!1,value:e,labelOff:T,labelOn:j,onToggle:m})=>{const[l,O]=a.useState(),p=a.useRef(null),u=a.useRef(null);a.useEffect(()=>{setTimeout(()=>{O({on:b(p.current),off:b(u.current)})},0)},[s]);const v=a.useCallback(()=>{m(!e)},[m,e]);return t.jsxs(C,{role:"switch",onPress:v,"aria-checked":e,style:r.base,children:[t.jsx(d,{role:"presentation",style:[r.handle,l==null?r.hidden:{backgroundColor:e?o.positive[50]:o.negative[50],borderColor:e?o.positive[500]:o.negative[500],transform:`translateX(${e?0:l.on+n}px)`,width:(e?l.on:l.off)+n}]}),t.jsx(d,{ref:p,style:r.item,children:s?t.jsx(g,{color:e?o.positive[500]:o.gray[500],size:16,name:"checkmark-circle-regular"}):t.jsx(f,{style:[r.text,e&&r.textOn],children:j})}),t.jsx(d,{ref:u,style:r.item,children:s?t.jsx(g,{color:e?o.gray[500]:o.negative[500],size:16,name:"subtract-circle-regular"}):t.jsx(f,{style:[r.text,!e&&r.textOff],children:T})})]})};c.__docgenInfo={description:"",methods:[],displayName:"Toggle",props:{compact:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},value:{required:!0,tsType:{name:"boolean"},description:""},labelOff:{required:!0,tsType:{name:"string"},description:""},labelOn:{required:!0,tsType:{name:"string"},description:""},onToggle:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"value"}],return:{name:"void"}}},description:""}}};const A={title:"Forms/Toggle",component:c},i=()=>{const[s,e]=a.useState(!1);return t.jsxs(P,{title:"Variations",description:"Toggle component",children:[t.jsx(y,{title:"Normal",children:t.jsx(h,{alignItems:"start",children:t.jsx(c,{value:s,onToggle:e,compact:!1,labelOff:"Canceled",labelOn:"Active"})})}),t.jsx(y,{title:"Compact",children:t.jsx(h,{alignItems:"start",children:t.jsx(c,{value:s,onToggle:e,compact:!0,labelOff:"Canceled",labelOn:"Active"})})})]})};i.__docgenInfo={description:"",methods:[],displayName:"Variations"};i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:`() => {
  const [value, setValue] = useState(false);
  return <StoryBlock title="Variations" description="Toggle component">
      <StoryPart title="Normal">
        <Box alignItems="start">
          <Toggle value={value} onToggle={setValue} compact={false} labelOff="Canceled" labelOn="Active" />
        </Box>
      </StoryPart>

      <StoryPart title="Compact">
        <Box alignItems="start">
          <Toggle value={value} onToggle={setValue} compact={true} labelOff="Canceled" labelOn="Active" />
        </Box>
      </StoryPart>
    </StoryBlock>;
}`,...i.parameters?.docs?.source}}};const D=["Variations"];export{i as Variations,D as __namedExportsOrder,A as default};
//# sourceMappingURL=Toggle.stories-CBgZqxhR.js.map
