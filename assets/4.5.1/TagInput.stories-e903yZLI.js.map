{"version":3,"file":"TagInput.stories-e903yZLI.js","sources":["../../../packages/shared-business/src/utils/validation.ts","../../../packages/lake/src/components/LakeTagInput.tsx"],"sourcesContent":["import { noop } from \"@swan-io/lake/src/utils/function\";\nimport { Validator } from \"react-ux-form\";\nimport { match } from \"ts-pattern\";\nimport { t } from \"./i18n\";\nimport { AccountCountry } from \"./templateTranslations\";\n\nconst EMAIL_REGEX = /^[A-Z0-9_+.-]*[A-Z0-9_+-]@([A-Z0-9][A-Z0-9-]*\\.)+[A-Z]{2,}$/i;\nconst VAT_NUMBER_REGEX =\n  /^((AT)?U[0-9]{8}|(BE)?0[0-9]{9}|(BG)?[0-9]{9,10}|(CY)?[0-9]{8}L|(CZ)?[0-9]{8,10}|(DE)?[0-9]{9}|(DK)?[0-9]{8}|(EE)?[0-9]{9}|(EL|GR)?[0-9]{9}|(ES)?[0-9A-Z][0-9]{7}[0-9A-Z]|(FI)?[0-9]{8}|(FR)?[0-9A-Z]{2}[0-9]{9}|(GB)?([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3})|(HU)?[0-9]{8}|(IE)?[0-9]S[0-9]{5}L|(IT)?[0-9]{11}|(LT)?([0-9]{9}|[0-9]{12})|(LU)?[0-9]{8}|(LV)?[0-9]{11}|(MT)?[0-9]{8}|(NL)?[0-9]{9}B[0-9]{2}|(PL)?[0-9]{10}|(PT)?[0-9]{9}|(RO)?[0-9]{2,10}|(SE)?[0-9]{12}|(SI)?[0-9]{8}|(SK)?[0-9]{10})$/;\n\n// (AT)?U[0-9]{8} |                              # Austria\n// (BE)?0[0-9]{9} |                              # Belgium\n// (BG)?[0-9]{9,10} |                            # Bulgaria\n// (CY)?[0-9]{8}L |                              # Cyprus\n// (CZ)?[0-9]{8,10} |                            # Czech Republic\n// (DE)?[0-9]{9} |                               # Germany\n// (DK)?[0-9]{8} |                               # Denmark\n// (EE)?[0-9]{9} |                               # Estonia\n// (EL|GR)?[0-9]{9} |                            # Greece\n// (ES)?[0-9A-Z][0-9]{7}[0-9A-Z] |               # Spain\n// (FI)?[0-9]{8} |                               # Finland\n// (FR)?[0-9A-Z]{2}[0-9]{9} |                    # France\n// (GB)?([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3}) | # United Kingdom\n// (HU)?[0-9]{8} |                               # Hungary\n// (IE)?[0-9]S[0-9]{5}L |                        # Ireland\n// (IT)?[0-9]{11} |                              # Italy\n// (LT)?([0-9]{9}|[0-9]{12}) |                   # Lithuania\n// (LU)?[0-9]{8} |                               # Luxembourg\n// (LV)?[0-9]{11} |                              # Latvia\n// (MT)?[0-9]{8} |                               # Malta\n// (NL)?[0-9]{9}B[0-9]{2} |                      # Netherlands\n// (PL)?[0-9]{10} |                              # Poland\n// (PT)?[0-9]{9} |                               # Portugal\n// (RO)?[0-9]{2,10} |                            # Romania\n// (SE)?[0-9]{12} |                              # Sweden\n// (SI)?[0-9]{8} |                               # Slovenia\n// (SK)?[0-9]{10}                                # Slovakia\n\nexport const isValidVatNumber = (maybeVat: string) => {\n  return VAT_NUMBER_REGEX.test(maybeVat);\n};\n\nexport const isValidEmail = (maybeEmail: string) => {\n  return EMAIL_REGEX.test(maybeEmail);\n};\n\nexport const validateNullableRequired: Validator<string | undefined> = value => {\n  if (value == null || !value) {\n    return t(\"error.requiredField\");\n  }\n};\n\nexport const validateRequired: Validator<string> = value => {\n  if (!value) {\n    return t(\"error.requiredField\");\n  }\n};\n\nexport const validateBooleanRequired: Validator<boolean | undefined> = value => {\n  if (value == null || !value) {\n    return t(\"error.requiredField\");\n  }\n};\n\nexport const validateIndividualTaxNumber =\n  (accountCountry: AccountCountry): Validator<string | undefined> =>\n  value => {\n    if (value == null || !value) {\n      return;\n    }\n\n    return match(accountCountry)\n      .with(\"DEU\", () => {\n        // accept 11 digits\n        if (!/^\\d{11}$/.test(value)) {\n          return t(\"common.form.invalidTaxIdentificationNumber\");\n        }\n      })\n      .with(\"ESP\", () => {\n        // accept 9 characters\n        if (!/^[a-zA-Z0-9]{9}$/.test(value)) {\n          return t(\"common.form.invalidTaxIdentificationNumber\");\n        }\n      })\n      .otherwise(noop);\n  };\n\nexport const validateCompanyTaxNumber =\n  (accountCountry: AccountCountry): Validator<string | undefined> =>\n  value => {\n    if (value == null || !value) {\n      return;\n    }\n\n    return match(accountCountry)\n      .with(\"DEU\", () => {\n        // accept 10 or 11 digits\n        if (!/^\\d{10,11}$/.test(value)) {\n          return t(\"common.form.invalidTaxIdentificationNumber\");\n        }\n      })\n      .with(\"ESP\", () => {\n        // accept 9 characters\n        if (!/^[a-zA-Z0-9]{9}$/.test(value)) {\n          return t(\"common.form.invalidTaxIdentificationNumber\");\n        }\n      })\n      .otherwise(noop);\n  };\n","import { forwardRef, useCallback, useRef, useState } from \"react\";\nimport {\n  NativeSyntheticEvent,\n  StyleSheet,\n  TextInput,\n  TextInputFocusEventData,\n  TextInputKeyPressEventData,\n  TextInputProps,\n  View,\n} from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport { Merge } from \"type-fest\";\nimport { backgroundColor, colors, radii, shadows, spacings } from \"../constants/design\";\nimport { useHover } from \"../hooks/useHover\";\nimport { useMergeRefs } from \"../hooks/useMergeRefs\";\nimport { isNotNullish, isNotNullishOrEmpty, isNullishOrEmpty } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { LakeText } from \"./LakeText\";\nimport { Pressable } from \"./Pressable\";\nimport { Tag } from \"./Tag\";\n\nconst TRANSPARENT = \"transparent\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexDirection: \"row\",\n    alignItems: \"stretch\",\n  },\n  root: {\n    flexDirection: \"row\",\n    display: \"flex\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    borderRadius: radii[6],\n    backgroundColor: backgroundColor.accented,\n    borderColor: colors.gray[100],\n    borderWidth: 1,\n    paddingHorizontal: spacings[4],\n    paddingTop: spacings[4],\n    outlineStyle: \"none\",\n    cursor: \"text\",\n  },\n  focused: {\n    borderColor: colors.gray[500],\n    boxShadow: shadows.tile,\n  },\n  hovered: {\n    boxShadow: shadows.tile,\n  },\n  disabled: {\n    backgroundColor: colors.gray[50],\n    borderColor: colors.gray[50],\n    color: colors.gray[900],\n    cursor: \"not-allowed\",\n  },\n  readOnly: {\n    backgroundColor: colors.gray[50],\n    borderColor: colors.gray[50],\n    color: colors.gray[900],\n  },\n  readOnlyError: {\n    borderColor: TRANSPARENT,\n    paddingRight: spacings[32],\n  },\n  error: {\n    borderColor: colors.negative[400],\n  },\n  valid: {\n    borderColor: colors.positive[500],\n  },\n  input: {\n    height: 28,\n    marginBottom: spacings[4],\n    marginLeft: spacings[4],\n    outlineStyle: \"none\",\n    flexGrow: 1,\n  },\n  tag: {\n    marginRight: spacings[4],\n    marginBottom: spacings[4],\n    maxWidth: 350,\n  },\n  errorContainer: {\n    paddingTop: spacings[4],\n  },\n});\n\nexport type LakeTagInputProps = Merge<\n  TextInputProps,\n  {\n    readOnly?: boolean;\n    error?: string;\n    disabled?: boolean;\n    valid?: boolean;\n    hideErrors?: boolean;\n    help?: string;\n    validator?: (value: string) => boolean;\n    values: string[];\n    onValuesChanged: (values: string[]) => void;\n    placeholder?: string;\n  }\n>;\n\nconst SEPARATORS_REGEX = /,| /;\n\nexport const LakeTagInput = forwardRef<TextInput | null, LakeTagInputProps>(\n  (\n    {\n      validator = () => true,\n      onFocus: originalOnFocus,\n      onBlur: originalOnBlur,\n      values,\n      onValuesChanged,\n      readOnly = false,\n      disabled = false,\n      valid = false,\n      hideErrors = false,\n      placeholder,\n      help,\n      error,\n    }: LakeTagInputProps,\n    forwardRef,\n  ) => {\n    const inputRef = useRef<TextInput | null>(null);\n    const containerRef = useRef<View | null>(null);\n    const [isFocused, setIsFocused] = useState(false);\n    const [isHovered, setIsHovered] = useState(false);\n\n    useHover(containerRef, {\n      onHoverStart: () => setIsHovered(true),\n      onHoverEnd: () => setIsHovered(false),\n    });\n\n    const pushNewValues = useCallback(\n      (vals: string[]) => {\n        onValuesChanged([...values, ...vals.filter(v => !values.includes(v))]);\n        inputRef.current?.clear();\n      },\n      [values, onValuesChanged],\n    );\n\n    const onTextInputChange = useCallback(\n      (value: string) => {\n        const input = [...new Set(value.split(SEPARATORS_REGEX).filter(s => s.length))];\n        if (input.length > 1 || input[0] !== value) {\n          pushNewValues(input);\n        }\n      },\n      [pushNewValues],\n    );\n\n    const onTextInputKeyPress = useCallback(\n      ({ nativeEvent }: NativeSyntheticEvent<TextInputKeyPressEventData>) => {\n        match({ key: nativeEvent.key, input: inputRef.current })\n          .with({ key: \"Backspace\", input: P.instanceOf(HTMLInputElement) }, ({ input }) => {\n            if (isNullishOrEmpty(input.value)) {\n              onValuesChanged(values.filter(current => current !== values[values.length - 1]));\n            }\n          })\n          .with({ key: \"Enter\", input: P.instanceOf(HTMLInputElement) }, ({ input }) => {\n            if (isNotNullishOrEmpty(input.value)) {\n              pushNewValues([input.value]);\n            }\n          });\n      },\n      [onValuesChanged, pushNewValues, values],\n    );\n\n    const autoFocus = useCallback(() => {\n      inputRef.current?.focus();\n    }, []);\n\n    const onFocus = useCallback(\n      (event: NativeSyntheticEvent<TextInputFocusEventData>) => {\n        setIsFocused(true);\n        originalOnFocus?.(event);\n      },\n      [originalOnFocus],\n    );\n\n    const onBlur = useCallback(\n      (event: NativeSyntheticEvent<TextInputFocusEventData>) => {\n        setIsFocused(false);\n        originalOnBlur?.(event);\n      },\n      [originalOnBlur],\n    );\n\n    const mergedRef = useMergeRefs(inputRef, forwardRef);\n    const hasError = isNotNullishOrEmpty(error);\n\n    return (\n      <View>\n        <Pressable\n          style={[\n            styles.root,\n            readOnly && hasError && styles.readOnlyError,\n            disabled && styles.disabled,\n            readOnly && styles.readOnly,\n            isFocused && styles.focused,\n            hasError && styles.error,\n            valid && styles.valid,\n            isHovered && styles.hovered,\n          ]}\n          aria-errormessage={error}\n          onPress={autoFocus}\n          ref={containerRef}\n        >\n          {values.map((value, i) => (\n            <Tag\n              key={i}\n              onPressRemove={\n                !readOnly && !disabled\n                  ? () => onValuesChanged(values.filter(current => current !== value))\n                  : undefined\n              }\n              style={styles.tag}\n              color={validator(value) ? \"gray\" : \"negative\"}\n            >\n              {value}\n            </Tag>\n          ))}\n\n          <TextInput\n            ref={mergedRef}\n            style={[styles.input, disabled && styles.disabled]}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            aria-disabled={disabled}\n            onChangeText={onTextInputChange}\n            onKeyPress={onTextInputKeyPress}\n            readOnly={readOnly}\n            placeholder={placeholder}\n          />\n        </Pressable>\n\n        {!hideErrors && (\n          <Box direction=\"row\" style={styles.errorContainer}>\n            {isNotNullish(error) ? (\n              <LakeText variant=\"smallRegular\" color={colors.negative[500]}>\n                {error}\n              </LakeText>\n            ) : (\n              <LakeText variant=\"smallRegular\" color={colors.gray[500]}>\n                {help ?? \" \"}\n              </LakeText>\n            )}\n          </Box>\n        )}\n      </View>\n    );\n  },\n);\n"],"names":["EMAIL_REGEX","isValidEmail","maybeEmail","TRANSPARENT","styles","StyleSheet","radii","backgroundColor","colors","spacings","shadows","SEPARATORS_REGEX","LakeTagInput","forwardRef","validator","originalOnFocus","originalOnBlur","values","onValuesChanged","readOnly","disabled","valid","hideErrors","placeholder","help","error","forwardRef2","inputRef","useRef","containerRef","isFocused","setIsFocused","useState","isHovered","setIsHovered","useHover","pushNewValues","useCallback","vals","v","_a","onTextInputChange","value","input","s","onTextInputKeyPress","nativeEvent","match","P","isNullishOrEmpty","current","isNotNullishOrEmpty","autoFocus","onFocus","event","onBlur","mergedRef","useMergeRefs","hasError","jsxs","View","Pressable","i","jsx","Tag","TextInput","Box","isNotNullish","LakeText"],"mappings":"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"}