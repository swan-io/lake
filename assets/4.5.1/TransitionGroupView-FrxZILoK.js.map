{"version":3,"file":"TransitionGroupView-FrxZILoK.js","sources":["../../../packages/lake/src/components/TransitionGroupView.tsx"],"sourcesContent":["import { Array, Option } from \"@swan-io/boxed\";\nimport { Children, ReactNode, useMemo, useReducer, useRef } from \"react\";\nimport { AnimationStyles, StyleProp, View, ViewStyle } from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport { usePreviousValue } from \"../hooks/usePreviousValue\";\nimport { TransitionView } from \"./TransitionView\";\n\ntype Props = {\n  enter?: AnimationStyles;\n  leave?: AnimationStyles;\n  style?: StyleProp<ViewStyle>;\n  childStyle?: StyleProp<ViewStyle>;\n  children: ReactNode;\n};\n\nexport const TransitionGroupView = ({ children, enter, leave, style, childStyle }: Props) => {\n  const leavingKeysAndIndicesRef = useRef<\n    {\n      index: number;\n      key: string;\n    }[]\n  >([]);\n  const [, forceUpdate] = useReducer(() => [], []);\n\n  const onLeave = (key: string) => {\n    leavingKeysAndIndicesRef.current = leavingKeysAndIndicesRef.current.filter(\n      leavingKey => leavingKey.key !== key,\n    );\n\n    forceUpdate();\n  };\n\n  const cleanedUpChildren = useMemo(\n    () =>\n      Array.filterMap(Children.toArray(children), child =>\n        match(child)\n          .with({ key: P.string }, child => Option.Some({ key: child.key, child }))\n          .otherwise(() => Option.None()),\n      ),\n    [children],\n  );\n\n  const previousChildren = usePreviousValue(cleanedUpChildren);\n\n  const newKeys = new Set(cleanedUpChildren.map(item => item.key));\n  leavingKeysAndIndicesRef.current = [\n    ...leavingKeysAndIndicesRef.current,\n    ...Array.filterMap(\n      previousChildren.map((item, index) => ({ item, index })),\n      ({ item, index }) =>\n        newKeys.has(item.key) ||\n        leavingKeysAndIndicesRef.current.find(prev => prev.key === item.key)\n          ? Option.None()\n          : Option.Some({ key: item.key, index }),\n    ),\n  ];\n\n  const childrenToRender: { key: string; originalIndex: number; child: ReactNode }[] = [];\n  cleanedUpChildren.forEach((item, index) => {\n    childrenToRender.push({ key: item.key, originalIndex: index, child: item.child });\n  });\n\n  leavingKeysAndIndicesRef.current.forEach(({ index, key }) => {\n    const closerIndex = childrenToRender.findIndex(item => item.originalIndex === index);\n    if (closerIndex === -1) {\n      childrenToRender.push({ key, originalIndex: index, child: null });\n    } else {\n      childrenToRender.splice(closerIndex, 0, { key, originalIndex: index, child: null });\n    }\n  });\n\n  return (\n    <View style={style}>\n      {childrenToRender.map(({ key, child }) => {\n        return (\n          <TransitionView\n            enter={enter}\n            leave={leave}\n            style={childStyle}\n            onLeave={() => onLeave(key)}\n            key={key}\n          >\n            {child}\n          </TransitionView>\n        );\n      })}\n    </View>\n  );\n};\n"],"names":["TransitionGroupView","children","enter","leave","style","childStyle","leavingKeysAndIndicesRef","useRef","forceUpdate","useReducer","onLeave","key","leavingKey","cleanedUpChildren","useMemo","Array","Children","child","match","P","child2","Option","previousChildren","usePreviousValue","newKeys","item","index","prev","childrenToRender","closerIndex","jsx","View","TransitionView"],"mappings":"4MAeO,MAAAA,EAAA,CAAA,CAAA,SAAAC,EAAA,MAAAC,EAAA,MAAAC,EAAA,MAAAC,EAAA,WAAAC,KAAA,CACL,MAAAC,EAAAC,SAAA,CAAA,CAAA,EAMA,CAAA,CAAAC,CAAA,EAAAC,EAAAA,WAAA,IAAA,CAAA,EAAA,CAAA,CAAA,EAEAC,EAAAC,GAAA,CACEL,EAAA,QAAAA,EAAA,QAAA,OAAoEM,GAAAA,EAAA,MAAAD,CACjC,EAGnCH,GAAY,EAGdK,EAAAC,EAAA,QAA0B,IAAAC,EAAA,UAEhBC,EAAA,SAAA,QAAAf,CAAA,EAAmCgB,GAAAC,EAAAD,CAAA,EAAA,KAAA,CAAA,IAAAE,EAAA,QAAAC,GAAAC,EAAA,KAAA,CAAA,IAAAD,EAAA,IAAA,MAAAA,EAAA,CAAA,EAAA,UAAA,IAAAC,EAAA,KAAA,CAAA,CAGP,EAClC,CAAApB,CAAA,CACO,EAGXqB,EAAAC,EAAAV,CAAA,EAEAW,EAAA,IAAA,IAAAX,EAAA,IAAAY,GAAAA,EAAA,GAAA,CAAA,EACAnB,EAAA,QAAA,CAAmC,GAAAA,EAAA,QACL,GAAAS,EAAA,UACnBO,EAAA,IAAA,CAAAG,EAAAC,KAAA,CAAA,KAAAD,EAAA,MAAAC,CAAA,EAAA,EACgD,CAAA,CAAA,KAAAD,EAAA,MAAAC,KAAAF,EAAA,IAAAC,EAAA,GAAA,GAAAnB,EAAA,QAAA,KAAAqB,GAAAA,EAAA,MAAAF,EAAA,GAAA,EAAAJ,EAAA,KAAA,EAAAA,EAAA,KAAA,CAAA,IAAAI,EAAA,IAAA,MAAAC,CAAA,CAAA,CAKb,CAC5C,EAGF,MAAAE,EAAA,CAAA,EACA,OAAAf,EAAA,QAAA,CAAAY,EAAAC,IAAA,CACEE,EAAA,KAAA,CAAA,IAAAH,EAAA,IAAA,cAAAC,EAAA,MAAAD,EAAA,KAAA,CAAA,CAAgF,CAAA,EAGlFnB,EAAA,QAAA,QAAA,CAAA,CAAA,MAAAoB,EAAA,IAAAf,CAAA,IAAA,CACE,MAAAkB,EAAAD,EAAA,UAAAH,GAAAA,EAAA,gBAAAC,CAAA,EACAG,IAAA,GACED,EAAA,KAAA,CAAA,IAAAjB,EAAA,cAAAe,EAAA,MAAA,IAAA,CAAA,EAEAE,EAAA,OAAAC,EAAA,EAAA,CAAA,IAAAlB,EAAA,cAAAe,EAAA,MAAA,IAAA,CAAA,CACF,CAAA,EAGFI,EAAAC,EAAA,CAAA,MAAA3B,EAAA,SAAAwB,EAAA,IAAA,CAAA,CAAA,IAAAjB,EAAA,MAAAM,KAGMa,EACEE,EAAC,CAAA,MAAA9B,EACC,MAAAC,EACA,MAAAE,EACO,QAAA,IAAAK,EAAAC,CAAA,EACmB,SAAAM,CAGzB,EAAAN,CAFI,CAGP,CAAA,CAAA,CAKV"}