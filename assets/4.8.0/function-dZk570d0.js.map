{"version":3,"file":"function-dZk570d0.js","sources":["../../../packages/lake/src/utils/function.ts"],"sourcesContent":["import { Dict } from \"@swan-io/boxed\";\n\nexport const identity = <T>(value: T): T => value;\nexport const noop = () => {};\nexport const stubFalse = (): false => false;\nexport const stubTrue = (): true => true;\nexport const unionToArray = <T extends PropertyKey>(object: Record<T, true>) => Dict.keys(object);\n\nexport const getUnionGuard = <T extends PropertyKey>(object: Record<T, true>) => {\n  const set = new Set<unknown>(unionToArray<T>(object));\n  return (value: unknown): value is T => set.has(value);\n};\n\nexport const memoize = <Input extends Array<unknown>, Output>(\n  func: (...input: Input) => Output,\n  getCacheKey: (...input: Input) => string,\n): ((...input: Input) => Output) => {\n  const cache = new Map<string, Output>();\n\n  return (...input: Input) => {\n    const key = getCacheKey(...input);\n\n    if (cache.has(key)) {\n      return cache.get(key) as Output;\n    }\n\n    const output = func(...input);\n    cache.set(key, output);\n    return output;\n  };\n};\n"],"names":["noop"],"mappings":"4BAGO,MAAMA,EAAO,IAAM,CAAC"}