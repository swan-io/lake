{"version":3,"file":"index-d81de39e.js","sources":["../../../node_modules/react-native-web/dist/modules/usePressEvents/PressResponder.js","../../../node_modules/react-native-web/dist/modules/usePressEvents/index.js","../../../node_modules/react-native-web/dist/modules/addEventListener/index.js","../../../node_modules/react-native-web/dist/modules/modality/index.js","../../../node_modules/react-native-web/dist/modules/useEvent/index.js","../../../node_modules/react-native-web/dist/modules/useHover/index.js","../../../node_modules/react-native-web/dist/exports/Pressable/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nvar DELAY = 'DELAY';\nvar ERROR = 'ERROR';\nvar LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\nvar NOT_RESPONDER = 'NOT_RESPONDER';\nvar RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\nvar RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\nvar RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\nvar RESPONDER_GRANT = 'RESPONDER_GRANT';\nvar RESPONDER_RELEASE = 'RESPONDER_RELEASE';\nvar RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: ERROR,\n    RESPONDER_TERMINATED: ERROR,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_START: {\n    DELAY: RESPONDER_ACTIVE_PRESS_START,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  ERROR: {\n    DELAY: NOT_RESPONDER,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: NOT_RESPONDER\n  }\n});\nvar getElementRole = element => element.getAttribute('role');\nvar getElementType = element => element.tagName.toLowerCase();\nvar isActiveSignal = signal => signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\nvar isButtonRole = element => getElementRole(element) === 'button';\nvar isPressStartSignal = signal => signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\nvar isTerminalSignal = signal => signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\nvar isValidKeyPress = event => {\n  var key = event.key,\n    target = event.target;\n  var isSpacebar = key === ' ' || key === 'Spacebar';\n  var isButtonish = getElementType(target) === 'button' || isButtonRole(target);\n  return key === 'Enter' || isSpacebar && isButtonish;\n};\nvar DEFAULT_LONG_PRESS_DELAY_MS = 450; // 500 - 50\nvar DEFAULT_PRESS_DELAY_MS = 50;\n\n/**\n * =========================== PressResponder Tutorial ===========================\n *\n * The `PressResponder` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press sould trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * In order to use `PressResponder`, do the following:\n *\n *     const pressResponder = new PressResponder(config);\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressResponder.getEventHandlers()} />\n *    );\n *\n * 3. Reset `PressResponder` when your component unmounts.\n *\n *    componentWillUnmount() {\n *      this.state.pressResponder.reset();\n *    }\n *\n * ==================== Implementation Details ====================\n *\n * `PressResponder` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`.\n *  │  │  ┌────────────┐  │  │\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates.\n *  │  └──────────────────┘  │\n *  │       Out Region   o   │\n *  └────────────────────│───┘\n *                       └────── When the press is released outside the `HitRect`,\n *                               the responder is NOT eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_START         ├────────▶ │ PRESS_START       ├────────────▶ │ LONG_PRESS_START  │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onLongPress`. Only when the browser produces a\n * `click` event is `onPress` invoked.\n */\nexport default class PressResponder {\n  constructor(config) {\n    this._eventHandlers = null;\n    this._isPointerTouch = false;\n    this._longPressDelayTimeout = null;\n    this._longPressDispatched = false;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._touchState = NOT_RESPONDER;\n    this.configure(config);\n  }\n  configure(config) {\n    this._config = config;\n  }\n\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n  reset() {\n    this._cancelLongPressDelayTimeout();\n    this._cancelPressDelayTimeout();\n    this._cancelPressOutDelayTimeout();\n  }\n\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n  getEventHandlers() {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n    return this._eventHandlers;\n  }\n  _createEventHandlers() {\n    var start = (event, shouldDelay) => {\n      event.persist();\n      this._cancelPressOutDelayTimeout();\n      this._longPressDispatched = false;\n      this._selectionTerminated = false;\n      this._touchState = NOT_RESPONDER;\n      this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n      this._receiveSignal(RESPONDER_GRANT, event);\n      var delayPressStart = normalizeDelay(this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n      if (shouldDelay !== false && delayPressStart > 0) {\n        this._pressDelayTimeout = setTimeout(() => {\n          this._receiveSignal(DELAY, event);\n        }, delayPressStart);\n      } else {\n        this._receiveSignal(DELAY, event);\n      }\n      var delayLongPress = normalizeDelay(this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n      this._longPressDelayTimeout = setTimeout(() => {\n        this._handleLongPress(event);\n      }, delayLongPress + delayPressStart);\n    };\n    var end = event => {\n      this._receiveSignal(RESPONDER_RELEASE, event);\n    };\n    var keyupHandler = event => {\n      var onPress = this._config.onPress;\n      var target = event.target;\n      if (this._touchState !== NOT_RESPONDER && isValidKeyPress(event)) {\n        end(event);\n        document.removeEventListener('keyup', keyupHandler);\n        var role = target.getAttribute('role');\n        var elementType = getElementType(target);\n        var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea';\n        if (onPress != null && !isNativeInteractiveElement) {\n          onPress(event);\n        }\n      }\n    };\n    return {\n      onStartShouldSetResponder: event => {\n        var disabled = this._config.disabled;\n        if (disabled && isButtonRole(event.currentTarget)) {\n          event.stopPropagation();\n        }\n        if (disabled == null) {\n          return true;\n        }\n        return !disabled;\n      },\n      onKeyDown: event => {\n        var disabled = this._config.disabled;\n        var key = event.key,\n          target = event.target;\n        if (!disabled && isValidKeyPress(event)) {\n          if (this._touchState === NOT_RESPONDER) {\n            start(event, false);\n            // Listen to 'keyup' on document to account for situations where\n            // focus is moved to another element during 'keydown'.\n            document.addEventListener('keyup', keyupHandler);\n          }\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n          var role = getElementRole(target);\n          var isButtonLikeRole = role === 'button' || role === 'menuitem';\n          if (isSpacebarKey && isButtonLikeRole && getElementType(target) !== 'button') {\n            // Prevent spacebar scrolling the window if using non-native button\n            event.preventDefault();\n          }\n          event.stopPropagation();\n        }\n      },\n      onResponderGrant: event => start(event),\n      onResponderMove: event => {\n        if (this._config.onPressMove != null) {\n          this._config.onPressMove(event);\n        }\n        var touch = getTouchFromResponderEvent(event);\n        if (this._touchActivatePosition != null) {\n          var deltaX = this._touchActivatePosition.pageX - touch.pageX;\n          var deltaY = this._touchActivatePosition.pageY - touch.pageY;\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            this._cancelLongPressDelayTimeout();\n          }\n        }\n      },\n      onResponderRelease: event => end(event),\n      onResponderTerminate: event => {\n        if (event.nativeEvent.type === 'selectionchange') {\n          this._selectionTerminated = true;\n        }\n        this._receiveSignal(RESPONDER_TERMINATED, event);\n      },\n      onResponderTerminationRequest: event => {\n        var _this$_config = this._config,\n          cancelable = _this$_config.cancelable,\n          disabled = _this$_config.disabled,\n          onLongPress = _this$_config.onLongPress;\n        // If `onLongPress` is provided, don't terminate on `contextmenu` as default\n        // behavior will be prevented for non-mouse pointers.\n        if (!disabled && onLongPress != null && this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n          return false;\n        }\n        if (cancelable == null) {\n          return true;\n        }\n        return cancelable;\n      },\n      // NOTE: this diverges from react-native in 3 significant ways:\n      // * The `onPress` callback is not connected to the responder system (the native\n      //  `click` event must be used but is dispatched in many scenarios where no pointers\n      //   are on the screen.) Therefore, it's possible for `onPress` to be called without\n      //   `onPress{Start,End}` being called first.\n      // * The `onPress` callback is only be called on the first ancestor of the native\n      //   `click` target that is using the PressResponder.\n      // * The event's `nativeEvent` is a `MouseEvent` not a `TouchEvent`.\n      onClick: event => {\n        var _this$_config2 = this._config,\n          disabled = _this$_config2.disabled,\n          onPress = _this$_config2.onPress;\n        if (!disabled) {\n          // If long press dispatched, cancel default click behavior.\n          // If the responder terminated because text was selected during the gesture,\n          // cancel the default click behavior.\n          event.stopPropagation();\n          if (this._longPressDispatched || this._selectionTerminated) {\n            event.preventDefault();\n          } else if (onPress != null && event.altKey === false) {\n            onPress(event);\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      },\n      // If `onLongPress` is provided and a touch pointer is being used, prevent the\n      // default context menu from opening.\n      onContextMenu: event => {\n        var _this$_config3 = this._config,\n          disabled = _this$_config3.disabled,\n          onLongPress = _this$_config3.onLongPress;\n        if (!disabled) {\n          if (onLongPress != null && this._isPointerTouch && !event.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n  _receiveSignal(signal, event) {\n    var prevState = this._touchState;\n    var nextState = null;\n    if (Transitions[prevState] != null) {\n      nextState = Transitions[prevState][signal];\n    }\n    if (this._touchState === NOT_RESPONDER && signal === RESPONDER_RELEASE) {\n      return;\n    }\n    if (nextState == null || nextState === ERROR) {\n      console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n    } else if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n      this._touchState = nextState;\n    }\n  }\n\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n  _performTransitionSideEffects(prevState, nextState, signal, event) {\n    if (isTerminalSignal(signal)) {\n      // Pressable suppression of contextmenu on windows.\n      // On Windows, the contextmenu is displayed after pointerup.\n      // https://github.com/necolas/react-native-web/issues/2296\n      setTimeout(() => {\n        this._isPointerTouch = false;\n      }, 0);\n      this._touchActivatePosition = null;\n      this._cancelLongPressDelayTimeout();\n    }\n    if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n      var onLongPress = this._config.onLongPress;\n      // Long press is not supported for keyboards because 'click' can be dispatched\n      // immediately (and multiple times) after 'keydown'.\n      if (onLongPress != null && event.nativeEvent.key == null) {\n        onLongPress(event);\n        this._longPressDispatched = true;\n      }\n    }\n    var isPrevActive = isActiveSignal(prevState);\n    var isNextActive = isActiveSignal(nextState);\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n    if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n      var _this$_config4 = this._config,\n        _onLongPress = _this$_config4.onLongPress,\n        onPress = _this$_config4.onPress;\n      if (onPress != null) {\n        var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n        if (!isPressCanceledByLongPress) {\n          // If we never activated (due to delays), activate and deactivate now.\n          if (!isNextActive && !isPrevActive) {\n            this._activate(event);\n            this._deactivate(event);\n          }\n        }\n      }\n    }\n    this._cancelPressDelayTimeout();\n  }\n  _activate(event) {\n    var _this$_config5 = this._config,\n      onPressChange = _this$_config5.onPressChange,\n      onPressStart = _this$_config5.onPressStart;\n    var touch = getTouchFromResponderEvent(event);\n    this._touchActivatePosition = {\n      pageX: touch.pageX,\n      pageY: touch.pageY\n    };\n    if (onPressStart != null) {\n      onPressStart(event);\n    }\n    if (onPressChange != null) {\n      onPressChange(true);\n    }\n  }\n  _deactivate(event) {\n    var _this$_config6 = this._config,\n      onPressChange = _this$_config6.onPressChange,\n      onPressEnd = _this$_config6.onPressEnd;\n    function end() {\n      if (onPressEnd != null) {\n        onPressEnd(event);\n      }\n      if (onPressChange != null) {\n        onPressChange(false);\n      }\n    }\n    var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n    if (delayPressEnd > 0) {\n      this._pressOutDelayTimeout = setTimeout(() => {\n        end();\n      }, delayPressEnd);\n    } else {\n      end();\n    }\n  }\n  _handleLongPress(event) {\n    if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n      this._receiveSignal(LONG_PRESS_DETECTED, event);\n    }\n  }\n  _cancelLongPressDelayTimeout() {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  }\n  _cancelPressDelayTimeout() {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  }\n  _cancelPressOutDelayTimeout() {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  }\n}\nfunction normalizeDelay(delay, min, fallback) {\n  if (min === void 0) {\n    min = 0;\n  }\n  if (fallback === void 0) {\n    fallback = 0;\n  }\n  return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n}\nfunction getTouchFromResponderEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n    changedTouches = _event$nativeEvent.changedTouches,\n    touches = _event$nativeEvent.touches;\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n  return event.nativeEvent;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport PressResponder from './PressResponder';\nimport { useDebugValue, useEffect, useRef } from 'react';\nexport default function usePressEvents(hostRef, config) {\n  var pressResponderRef = useRef(null);\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new PressResponder(config);\n  }\n  var pressResponder = pressResponderRef.current;\n\n  // Re-configure to use the current node and configuration.\n  useEffect(() => {\n    pressResponder.configure(config);\n  }, [config, pressResponder]);\n\n  // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n  useEffect(() => {\n    return () => {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  useDebugValue(config);\n  return pressResponder.getEventHandlers();\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nimport canUseDOM from '../canUseDom';\nvar emptyFunction = () => {};\nfunction supportsPassiveEvents() {\n  var supported = false;\n  // Check if browser supports event with passive listeners\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n  if (canUseDOM) {\n    try {\n      var options = {};\n      Object.defineProperty(options, 'passive', {\n        get() {\n          supported = true;\n          return false;\n        }\n      });\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n  }\n  return supported;\n}\nvar canUsePassiveEvents = supportsPassiveEvents();\nfunction getOptions(options) {\n  if (options == null) {\n    return false;\n  }\n  return canUsePassiveEvents ? options : Boolean(options.capture);\n}\n\n/**\n * Shim generic API compatibility with ReactDOM's synthetic events, without needing the\n * large amount of code ReactDOM uses to do this. Ideally we wouldn't use a synthetic\n * event wrapper at all.\n */\nfunction isPropagationStopped() {\n  return this.cancelBubble;\n}\nfunction isDefaultPrevented() {\n  return this.defaultPrevented;\n}\nfunction normalizeEvent(event) {\n  event.nativeEvent = event;\n  event.persist = emptyFunction;\n  event.isDefaultPrevented = isDefaultPrevented;\n  event.isPropagationStopped = isPropagationStopped;\n  return event;\n}\n\n/**\n *\n */\nexport function addEventListener(target, type, listener, options) {\n  var opts = getOptions(options);\n  var compatListener = e => listener(normalizeEvent(e));\n  target.addEventListener(type, compatListener, opts);\n  return function removeEventListener() {\n    if (target != null) {\n      target.removeEventListener(type, compatListener, opts);\n    }\n  };\n}","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { addEventListener } from '../addEventListener';\nimport canUseDOM from '../canUseDom';\nvar supportsPointerEvent = () => !!(typeof window !== 'undefined' && window.PointerEvent != null);\nvar activeModality = 'keyboard';\nvar modality = 'keyboard';\nvar previousModality;\nvar previousActiveModality;\nvar isEmulatingMouseEvents = false;\nvar listeners = new Set();\nvar KEYBOARD = 'keyboard';\nvar MOUSE = 'mouse';\nvar TOUCH = 'touch';\nvar BLUR = 'blur';\nvar CONTEXTMENU = 'contextmenu';\nvar FOCUS = 'focus';\nvar KEYDOWN = 'keydown';\nvar MOUSEDOWN = 'mousedown';\nvar MOUSEMOVE = 'mousemove';\nvar MOUSEUP = 'mouseup';\nvar POINTERDOWN = 'pointerdown';\nvar POINTERMOVE = 'pointermove';\nvar SCROLL = 'scroll';\nvar SELECTIONCHANGE = 'selectionchange';\nvar TOUCHCANCEL = 'touchcancel';\nvar TOUCHMOVE = 'touchmove';\nvar TOUCHSTART = 'touchstart';\nvar VISIBILITYCHANGE = 'visibilitychange';\nvar bubbleOptions = {\n  passive: true\n};\nvar captureOptions = {\n  capture: true,\n  passive: true\n};\nfunction restoreModality() {\n  if (previousModality != null || previousActiveModality != null) {\n    if (previousModality != null) {\n      modality = previousModality;\n      previousModality = null;\n    }\n    if (previousActiveModality != null) {\n      activeModality = previousActiveModality;\n      previousActiveModality = null;\n    }\n    callListeners();\n  }\n}\nfunction onBlurWindow() {\n  previousModality = modality;\n  previousActiveModality = activeModality;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n  callListeners();\n  // for fallback events\n  isEmulatingMouseEvents = false;\n}\nfunction onFocusWindow() {\n  restoreModality();\n}\nfunction onKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n  if (modality !== KEYBOARD) {\n    modality = KEYBOARD;\n    activeModality = KEYBOARD;\n    callListeners();\n  }\n}\nfunction onVisibilityChange() {\n  if (document.visibilityState !== 'hidden') {\n    restoreModality();\n  }\n}\nfunction onPointerish(event) {\n  var eventType = event.type;\n  if (supportsPointerEvent()) {\n    if (eventType === POINTERDOWN) {\n      if (activeModality !== event.pointerType) {\n        modality = event.pointerType;\n        activeModality = event.pointerType;\n        callListeners();\n      }\n      return;\n    }\n    if (eventType === POINTERMOVE) {\n      if (modality !== event.pointerType) {\n        modality = event.pointerType;\n        callListeners();\n      }\n      return;\n    }\n  }\n  // Fallback for non-PointerEvent environment\n  else {\n    if (!isEmulatingMouseEvents) {\n      if (eventType === MOUSEDOWN) {\n        if (activeModality !== MOUSE) {\n          modality = MOUSE;\n          activeModality = MOUSE;\n          callListeners();\n        }\n      }\n      if (eventType === MOUSEMOVE) {\n        if (modality !== MOUSE) {\n          modality = MOUSE;\n          callListeners();\n        }\n      }\n    }\n\n    // Flag when browser may produce emulated events\n    if (eventType === TOUCHSTART) {\n      isEmulatingMouseEvents = true;\n      if (event.touches && event.touches.length > 1) {\n        isEmulatingMouseEvents = false;\n      }\n      if (activeModality !== TOUCH) {\n        modality = TOUCH;\n        activeModality = TOUCH;\n        callListeners();\n      }\n      return;\n    }\n\n    // Remove flag after emulated events are finished or cancelled, and if an\n    // event occurs that cuts short a touch event sequence.\n    if (eventType === CONTEXTMENU || eventType === MOUSEUP || eventType === SELECTIONCHANGE || eventType === SCROLL || eventType === TOUCHCANCEL || eventType === TOUCHMOVE) {\n      isEmulatingMouseEvents = false;\n    }\n  }\n}\nif (canUseDOM) {\n  // Window events\n  addEventListener(window, BLUR, onBlurWindow, bubbleOptions);\n  addEventListener(window, FOCUS, onFocusWindow, bubbleOptions);\n  // Must be capture phase because 'stopPropagation' might prevent these\n  // events bubbling to the document.\n  addEventListener(document, KEYDOWN, onKeyDown, captureOptions);\n  addEventListener(document, VISIBILITYCHANGE, onVisibilityChange, captureOptions);\n  addEventListener(document, POINTERDOWN, onPointerish, captureOptions);\n  addEventListener(document, POINTERMOVE, onPointerish, captureOptions);\n  // Fallback events\n  addEventListener(document, CONTEXTMENU, onPointerish, captureOptions);\n  addEventListener(document, MOUSEDOWN, onPointerish, captureOptions);\n  addEventListener(document, MOUSEMOVE, onPointerish, captureOptions);\n  addEventListener(document, MOUSEUP, onPointerish, captureOptions);\n  addEventListener(document, TOUCHCANCEL, onPointerish, captureOptions);\n  addEventListener(document, TOUCHMOVE, onPointerish, captureOptions);\n  addEventListener(document, TOUCHSTART, onPointerish, captureOptions);\n  addEventListener(document, SELECTIONCHANGE, onPointerish, captureOptions);\n  addEventListener(document, SCROLL, onPointerish, captureOptions);\n}\nfunction callListeners() {\n  var value = {\n    activeModality,\n    modality\n  };\n  listeners.forEach(listener => {\n    listener(value);\n  });\n}\nexport function getActiveModality() {\n  return activeModality;\n}\nexport function getModality() {\n  return modality;\n}\nexport function addModalityListener(listener) {\n  listeners.add(listener);\n  return () => {\n    listeners.delete(listener);\n  };\n}\nexport function testOnly_resetActiveModality() {\n  isEmulatingMouseEvents = false;\n  activeModality = KEYBOARD;\n  modality = KEYBOARD;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { addEventListener } from '../addEventListener';\nimport useLayoutEffect from '../useLayoutEffect';\nimport useStable from '../useStable';\n/**\n * This can be used with any event type include custom events.\n *\n * const click = useEvent('click', options);\n * useEffect(() => {\n *   click.setListener(target, onClick);\n *   return () => click.clear();\n * }).\n */\nexport default function useEvent(eventType, options) {\n  var targetListeners = useStable(() => new Map());\n  var addListener = useStable(() => {\n    return (target, callback) => {\n      var removeTargetListener = targetListeners.get(target);\n      if (removeTargetListener != null) {\n        removeTargetListener();\n      }\n      if (callback == null) {\n        targetListeners.delete(target);\n        callback = () => {};\n      }\n      var removeEventListener = addEventListener(target, eventType, callback, options);\n      targetListeners.set(target, removeEventListener);\n      return removeEventListener;\n    };\n  });\n  useLayoutEffect(() => {\n    return () => {\n      targetListeners.forEach(removeListener => {\n        removeListener();\n      });\n      targetListeners.clear();\n    };\n  }, [targetListeners]);\n  return addListener;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { getModality } from '../modality';\nimport useEvent from '../useEvent';\nimport useLayoutEffect from '../useLayoutEffect';\n\n/**\n * Types\n */\n\n/**\n * Implementation\n */\n\nvar emptyObject = {};\nvar opts = {\n  passive: true\n};\nvar lockEventType = 'react-gui:hover:lock';\nvar unlockEventType = 'react-gui:hover:unlock';\nvar supportsPointerEvent = () => !!(typeof window !== 'undefined' && window.PointerEvent != null);\nfunction dispatchCustomEvent(target, type, payload) {\n  var event = document.createEvent('CustomEvent');\n  var _ref = payload || emptyObject,\n    _ref$bubbles = _ref.bubbles,\n    bubbles = _ref$bubbles === void 0 ? true : _ref$bubbles,\n    _ref$cancelable = _ref.cancelable,\n    cancelable = _ref$cancelable === void 0 ? true : _ref$cancelable,\n    detail = _ref.detail;\n  event.initCustomEvent(type, bubbles, cancelable, detail);\n  target.dispatchEvent(event);\n}\n\n// This accounts for the non-PointerEvent fallback events.\nfunction getPointerType(event) {\n  var pointerType = event.pointerType;\n  return pointerType != null ? pointerType : getModality();\n}\nexport default function useHover(targetRef, config) {\n  var contain = config.contain,\n    disabled = config.disabled,\n    onHoverStart = config.onHoverStart,\n    onHoverChange = config.onHoverChange,\n    onHoverUpdate = config.onHoverUpdate,\n    onHoverEnd = config.onHoverEnd;\n  var canUsePE = supportsPointerEvent();\n  var addMoveListener = useEvent(canUsePE ? 'pointermove' : 'mousemove', opts);\n  var addEnterListener = useEvent(canUsePE ? 'pointerenter' : 'mouseenter', opts);\n  var addLeaveListener = useEvent(canUsePE ? 'pointerleave' : 'mouseleave', opts);\n  // These custom events are used to implement the \"contain\" prop.\n  var addLockListener = useEvent(lockEventType, opts);\n  var addUnlockListener = useEvent(unlockEventType, opts);\n  useLayoutEffect(() => {\n    var target = targetRef.current;\n    if (target !== null) {\n      /**\n       * End the hover gesture\n       */\n      var hoverEnd = function hoverEnd(e) {\n        if (onHoverEnd != null) {\n          onHoverEnd(e);\n        }\n        if (onHoverChange != null) {\n          onHoverChange(false);\n        }\n        // Remove the listeners once finished.\n        addMoveListener(target, null);\n        addLeaveListener(target, null);\n      };\n\n      /**\n       * Leave element\n       */\n      var leaveListener = function leaveListener(e) {\n        var target = targetRef.current;\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, unlockEventType);\n          }\n          hoverEnd(e);\n        }\n      };\n\n      /**\n       * Move within element\n       */\n      var moveListener = function moveListener(e) {\n        if (getPointerType(e) !== 'touch') {\n          if (onHoverUpdate != null) {\n            // Not all browsers have these properties\n            if (e.x == null) {\n              e.x = e.clientX;\n            }\n            if (e.y == null) {\n              e.y = e.clientY;\n            }\n            onHoverUpdate(e);\n          }\n        }\n      };\n\n      /**\n       * Start the hover gesture\n       */\n      var hoverStart = function hoverStart(e) {\n        if (onHoverStart != null) {\n          onHoverStart(e);\n        }\n        if (onHoverChange != null) {\n          onHoverChange(true);\n        }\n        // Set the listeners needed for the rest of the hover gesture.\n        if (onHoverUpdate != null) {\n          addMoveListener(target, !disabled ? moveListener : null);\n        }\n        addLeaveListener(target, !disabled ? leaveListener : null);\n      };\n\n      /**\n       * Enter element\n       */\n      var enterListener = function enterListener(e) {\n        var target = targetRef.current;\n        if (target != null && getPointerType(e) !== 'touch') {\n          if (contain) {\n            dispatchCustomEvent(target, lockEventType);\n          }\n          hoverStart(e);\n          var lockListener = function lockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverEnd(e);\n            }\n          };\n          var unlockListener = function unlockListener(lockEvent) {\n            if (lockEvent.target !== target) {\n              hoverStart(e);\n            }\n          };\n          addLockListener(target, !disabled ? lockListener : null);\n          addUnlockListener(target, !disabled ? unlockListener : null);\n        }\n      };\n      addEnterListener(target, !disabled ? enterListener : null);\n    }\n  }, [addEnterListener, addMoveListener, addLeaveListener, addLockListener, addUnlockListener, contain, disabled, onHoverStart, onHoverChange, onHoverUpdate, onHoverEnd, targetRef]);\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"delayLongPress\", \"delayPressIn\", \"delayPressOut\", \"disabled\", \"onBlur\", \"onContextMenu\", \"onFocus\", \"onHoverIn\", \"onHoverOut\", \"onKeyDown\", \"onLongPress\", \"onPress\", \"onPressMove\", \"onPressIn\", \"onPressOut\", \"style\", \"tabIndex\", \"testOnly_hovered\", \"testOnly_pressed\"];\nimport * as React from 'react';\nimport { forwardRef, memo, useMemo, useState, useRef } from 'react';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport useHover from '../../modules/useHover';\nimport usePressEvents from '../../modules/usePressEvents';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n/**\n * Component used to build display components that should respond to whether the\n * component is currently pressed or not.\n */\nfunction Pressable(props, forwardedRef) {\n  var children = props.children,\n    delayLongPress = props.delayLongPress,\n    delayPressIn = props.delayPressIn,\n    delayPressOut = props.delayPressOut,\n    disabled = props.disabled,\n    onBlur = props.onBlur,\n    onContextMenu = props.onContextMenu,\n    onFocus = props.onFocus,\n    onHoverIn = props.onHoverIn,\n    onHoverOut = props.onHoverOut,\n    onKeyDown = props.onKeyDown,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    onPressMove = props.onPressMove,\n    onPressIn = props.onPressIn,\n    onPressOut = props.onPressOut,\n    style = props.style,\n    tabIndex = props.tabIndex,\n    testOnly_hovered = props.testOnly_hovered,\n    testOnly_pressed = props.testOnly_pressed,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useForceableState = useForceableState(testOnly_hovered === true),\n    hovered = _useForceableState[0],\n    setHovered = _useForceableState[1];\n  var _useForceableState2 = useForceableState(false),\n    focused = _useForceableState2[0],\n    setFocused = _useForceableState2[1];\n  var _useForceableState3 = useForceableState(testOnly_pressed === true),\n    pressed = _useForceableState3[0],\n    setPressed = _useForceableState3[1];\n  var hostRef = useRef(null);\n  var setRef = useMergeRefs(forwardedRef, hostRef);\n  var pressConfig = useMemo(() => ({\n    delayLongPress,\n    delayPressStart: delayPressIn,\n    delayPressEnd: delayPressOut,\n    disabled,\n    onLongPress,\n    onPress,\n    onPressChange: setPressed,\n    onPressStart: onPressIn,\n    onPressMove,\n    onPressEnd: onPressOut\n  }), [delayLongPress, delayPressIn, delayPressOut, disabled, onLongPress, onPress, onPressIn, onPressMove, onPressOut, setPressed]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  var onContextMenuPress = pressEventHandlers.onContextMenu,\n    onKeyDownPress = pressEventHandlers.onKeyDown;\n  useHover(hostRef, {\n    contain: true,\n    disabled,\n    onHoverChange: setHovered,\n    onHoverStart: onHoverIn,\n    onHoverEnd: onHoverOut\n  });\n  var interactionState = {\n    hovered,\n    focused,\n    pressed\n  };\n  var blurHandler = React.useCallback(e => {\n    if (e.nativeEvent.target === hostRef.current) {\n      setFocused(false);\n      if (onBlur != null) {\n        onBlur(e);\n      }\n    }\n  }, [hostRef, setFocused, onBlur]);\n  var focusHandler = React.useCallback(e => {\n    if (e.nativeEvent.target === hostRef.current) {\n      setFocused(true);\n      if (onFocus != null) {\n        onFocus(e);\n      }\n    }\n  }, [hostRef, setFocused, onFocus]);\n  var contextMenuHandler = React.useCallback(e => {\n    if (onContextMenuPress != null) {\n      onContextMenuPress(e);\n    }\n    if (onContextMenu != null) {\n      onContextMenu(e);\n    }\n  }, [onContextMenu, onContextMenuPress]);\n  var keyDownHandler = React.useCallback(e => {\n    if (onKeyDownPress != null) {\n      onKeyDownPress(e);\n    }\n    if (onKeyDown != null) {\n      onKeyDown(e);\n    }\n  }, [onKeyDown, onKeyDownPress]);\n  var _tabIndex;\n  if (tabIndex !== undefined) {\n    _tabIndex = tabIndex;\n  } else {\n    _tabIndex = disabled ? -1 : 0;\n  }\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, pressEventHandlers, {\n    \"aria-disabled\": disabled,\n    onBlur: blurHandler,\n    onContextMenu: contextMenuHandler,\n    onFocus: focusHandler,\n    onKeyDown: keyDownHandler,\n    ref: setRef,\n    style: [disabled ? styles.disabled : styles.active, typeof style === 'function' ? style(interactionState) : style],\n    tabIndex: _tabIndex\n  }), typeof children === 'function' ? children(interactionState) : children);\n}\nfunction useForceableState(forced) {\n  var _useState = useState(false),\n    bool = _useState[0],\n    setBool = _useState[1];\n  return [bool || forced, setBool];\n}\nvar styles = StyleSheet.create({\n  active: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  },\n  disabled: {\n    pointerEvents: 'box-none'\n  }\n});\nvar MemoedPressable = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(Pressable));\nMemoedPressable.displayName = 'Pressable';\nexport default MemoedPressable;"],"names":["DELAY","ERROR","LONG_PRESS_DETECTED","NOT_RESPONDER","RESPONDER_ACTIVE_LONG_PRESS_START","RESPONDER_ACTIVE_PRESS_START","RESPONDER_INACTIVE_PRESS_START","RESPONDER_GRANT","RESPONDER_RELEASE","RESPONDER_TERMINATED","Transitions","getElementRole","element","getElementType","isActiveSignal","signal","isButtonRole","isPressStartSignal","isTerminalSignal","isValidKeyPress","event","key","target","isSpacebar","isButtonish","DEFAULT_LONG_PRESS_DELAY_MS","DEFAULT_PRESS_DELAY_MS","PressResponder","config","start","shouldDelay","delayPressStart","normalizeDelay","delayLongPress","end","keyupHandler","onPress","role","elementType","isNativeInteractiveElement","disabled","isSpacebarKey","isButtonLikeRole","touch","getTouchFromResponderEvent","deltaX","deltaY","_this$_config","cancelable","onLongPress","_this$_config2","_this$_config3","prevState","nextState","isPrevActive","isNextActive","_this$_config4","_onLongPress","isPressCanceledByLongPress","_this$_config5","onPressChange","onPressStart","_this$_config6","onPressEnd","delayPressEnd","delay","min","fallback","_event$nativeEvent","changedTouches","touches","usePressEvents","hostRef","pressResponderRef","useRef","pressResponder","useEffect","useDebugValue","emptyFunction","supportsPassiveEvents","supported","canUseDOM","options","canUsePassiveEvents","getOptions","isPropagationStopped","isDefaultPrevented","normalizeEvent","addEventListener","type","listener","opts","compatListener","e","supportsPointerEvent","activeModality","modality","previousModality","previousActiveModality","isEmulatingMouseEvents","listeners","KEYBOARD","MOUSE","TOUCH","BLUR","CONTEXTMENU","FOCUS","KEYDOWN","MOUSEDOWN","MOUSEMOVE","MOUSEUP","POINTERDOWN","POINTERMOVE","SCROLL","SELECTIONCHANGE","TOUCHCANCEL","TOUCHMOVE","TOUCHSTART","VISIBILITYCHANGE","bubbleOptions","captureOptions","restoreModality","callListeners","onBlurWindow","onFocusWindow","onKeyDown","onVisibilityChange","onPointerish","eventType","value","getModality","useEvent","targetListeners","useStable","addListener","callback","removeTargetListener","removeEventListener","useLayoutEffect","removeListener","emptyObject","lockEventType","unlockEventType","dispatchCustomEvent","payload","_ref","_ref$bubbles","bubbles","_ref$cancelable","detail","getPointerType","pointerType","useHover","targetRef","contain","onHoverStart","onHoverChange","onHoverUpdate","onHoverEnd","canUsePE","addMoveListener","addEnterListener","addLeaveListener","addLockListener","addUnlockListener","hoverEnd","leaveListener","moveListener","hoverStart","enterListener","lockListener","lockEvent","unlockListener","_excluded","Pressable","props","forwardedRef","children","delayPressIn","delayPressOut","onBlur","onContextMenu","onFocus","onHoverIn","onHoverOut","onPressMove","onPressIn","onPressOut","style","tabIndex","testOnly_hovered","testOnly_pressed","rest","_objectWithoutPropertiesLoose","_useForceableState","useForceableState","hovered","setHovered","_useForceableState2","focused","setFocused","_useForceableState3","pressed","setPressed","setRef","useMergeRefs","pressConfig","useMemo","pressEventHandlers","onContextMenuPress","onKeyDownPress","interactionState","blurHandler","React.useCallback","focusHandler","contextMenuHandler","keyDownHandler","_tabIndex","React.createElement","View","_extends","styles","forced","_useState","useState","bool","setBool","StyleSheet","MemoedPressable","memo","forwardRef","Pressable$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}