{"version":3,"file":"Suspense.stories-CZC5Ls_l.js","sources":["../../../packages/lake/src/hooks/useAsyncDataSuspense.ts","../../../packages/lake/__stories__/Suspense.stories.tsx"],"sourcesContent":["import { AsyncData, Deferred } from \"@swan-io/boxed\";\nimport { useEffect, useMemo, useRef } from \"react\";\n\nexport const useAsyncDataSuspense = <T extends AsyncData<unknown>>(asyncData: T) => {\n  // For the sake of simplicity here, we also consider `NotAsked` to be a\n  // loading state, so that Suspense is triggered immediately if the query initializes\n  // in a `useEffect` hook, leaving a component render with `NotAsked`\n  const hasResolved = useRef(asyncData.isDone());\n\n  const deferredRef = useRef(Deferred.make());\n  const [future, resolve] = deferredRef.current;\n\n  const promiseToThrow = useMemo(() => future.toPromise(), [future]);\n\n  useEffect(() => {\n    // Once the `asyncData` has been `Done` at least once, the component becomes\n    // responsible for its own loading states\n    if (asyncData.isDone()) {\n      resolve(undefined);\n      hasResolved.current = true;\n    }\n  }, [asyncData, resolve]);\n\n  if (!hasResolved.current) {\n    throw promiseToThrow;\n  }\n};\n","import { Meta } from \"@storybook/react\";\nimport { AsyncData } from \"@swan-io/boxed\";\nimport { Suspense, useState } from \"react\";\nimport { LakeButton, LakeButtonGroup } from \"../src/components/LakeButton\";\nimport { SwanLogo } from \"../src/components/SwanLogo\";\nimport { useAsyncDataSuspense } from \"../src/hooks/useAsyncDataSuspense\";\nimport { StoryBlock } from \"./_StoriesComponents\";\n\nexport default {\n  title: \"Utils/useAsyncDataSuspense\",\n  component: SwanLogo,\n} as Meta<typeof SwanLogo>;\n\nconst TestComponent = ({ asyncData }: { asyncData: AsyncData<string> }) => {\n  useAsyncDataSuspense(asyncData);\n\n  return asyncData.match({\n    NotAsked: () => <h1>Component not asked</h1>,\n    Loading: () => <h1>Component loading</h1>,\n    Done: value => <h1>{value}</h1>,\n  });\n};\n\nexport const useAsyncDataSuspenseDemos = () => {\n  const [refreshCount, setRefreshCount] = useState(0);\n  const [state, setState] = useState<AsyncData<string>>(AsyncData.NotAsked());\n\n  return (\n    <StoryBlock title=\"SwanLogo\">\n      <LakeButtonGroup>\n        <LakeButton onPress={() => setRefreshCount(x => x + 1)}>Reset</LakeButton>\n        <LakeButton onPress={() => setState(AsyncData.NotAsked())}>NotAsked</LakeButton>\n        <LakeButton onPress={() => setState(AsyncData.Loading())}>Loading</LakeButton>\n        <LakeButton onPress={() => setState(AsyncData.Done(\"hello there\"))}>Done</LakeButton>\n      </LakeButtonGroup>\n\n      <Suspense fallback={<h1>Suspense loading</h1>}>\n        <TestComponent asyncData={state} key={refreshCount} />\n      </Suspense>\n    </StoryBlock>\n  );\n};\n"],"names":["useAsyncDataSuspense","asyncData","hasResolved","useRef","deferredRef","Deferred","future","resolve","promiseToThrow","useMemo","useEffect","Suspense_stories","title","component","SwanLogo","TestComponent","match","NotAsked","jsx","Loading","Done","value","useAsyncDataSuspenseDemos","refreshCount","setRefreshCount","useState","state","setState","AsyncData","jsxs","StoryBlock","LakeButtonGroup","LakeButton","x","Suspense"],"mappings":"wdAGO,MAAMA,EAAsDC,GAAiB,CAIlF,MAAMC,EAAcC,EAAAA,OAAOF,EAAU,OAAA,CAAQ,EAEvCG,EAAcD,EAAAA,OAAOE,EAAS,KAAA,CAAM,EACpC,CAACC,EAAQC,CAAO,EAAIH,EAAY,QAEhCI,EAAiBC,EAAAA,QAAQ,IAAMH,EAAO,YAAa,CAACA,CAAM,CAAC,EAWjE,GATAI,EAAAA,UAAU,IAAM,CAGVT,EAAU,WACZM,EAAQ,MAAS,EACjBL,EAAY,QAAU,GAE1B,EAAG,CAACD,EAAWM,CAAO,CAAC,EAEnB,CAACL,EAAY,QACf,MAAMM,CAEV,EClBAG,EAAe,CACbC,MAAO,6BACPC,UAAWC,CACb,EAEMC,EAAgBA,CAAC,CAAEd,UAAAA,CAA4C,KACnED,EAAqBC,CAAS,EAEvBA,EAAUe,MAAM,CACrBC,SAAUA,IAAMC,EAAAA,IAAC,KAAA,CAAG,SAAA,qBAAA,CAAmB,EACvCC,QAASA,IAAMD,EAAAA,IAAC,KAAA,CAAG,SAAA,mBAAA,CAAiB,EACpCE,KAAMC,GAASH,EAAAA,IAAC,KAAA,CAAIG,SAAAA,CAAAA,CAAM,CAAA,CAC3B,GAGUC,EAA4BA,IAAM,CAC7C,KAAM,CAACC,EAAcC,CAAe,EAAIC,EAAAA,SAAS,CAAC,EAC5C,CAACC,EAAOC,CAAQ,EAAIF,EAAAA,SAA4BG,EAAUX,UAAU,EAE1E,OACEY,EAAAA,KAACC,EAAA,CAAW,MAAM,WAChB,SAAA,CAAAD,OAACE,EAAA,CACC,SAAA,CAAAb,EAAAA,IAACc,EAAA,CAAW,QAAS,IAAMR,KAAqBS,EAAI,CAAC,EAAG,SAAA,OAAA,CAAK,EAC7Df,EAAAA,IAACc,GAAW,QAAS,IAAML,EAASC,EAAUX,UAAU,EAAG,SAAA,WAAQ,EACnEC,EAAAA,IAACc,GAAW,QAAS,IAAML,EAASC,EAAUT,SAAS,EAAG,SAAA,UAAO,EACjED,EAAAA,IAACc,EAAA,CAAW,QAAS,IAAML,EAASC,EAAUR,KAAK,aAAa,CAAC,EAAG,SAAA,MAAA,CAAI,CAAA,EAC1E,EAEAF,EAAAA,IAACgB,EAAAA,SAAA,CAAS,SAAUhB,EAAAA,IAAC,KAAA,CAAG,SAAA,kBAAA,CAAgB,EACtC,SAAAA,EAAAA,IAACH,EAAA,CAAc,UAAWW,CAAAA,EAAYH,CAAa,CAAA,CACrD,CAAA,EACF,CAEJ;;;;;;;;;;;;;;;"}