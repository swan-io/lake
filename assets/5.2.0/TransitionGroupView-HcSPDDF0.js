import{N as v,v as _,a as c,V as g}from"./Space-zmwqTKHi.js";import{y as d,v as l}from"./Boxed-zE7Q22Jk.js";import{r as a}from"./index-CBqU2yxZ.js";import{u as I,T as x}from"./TransitionView-BlamPqme.js";const u=({children:o,enter:p,leave:y,style:f,childStyle:m})=>{const n=a.useRef([]),[,h]=a.useReducer(()=>[],[]),V=e=>{n.current=n.current.filter(r=>r.key!==e),h()},s=a.useMemo(()=>d.filterMap(a.Children.toArray(o),e=>v(e).with({key:_.string},r=>l.Some({key:r.key,child:r})).otherwise(()=>l.None())),[o]),w=I(s),S=new Set(s.map(e=>e.key));n.current=[...n.current,...d.filterMap(w.map((e,r)=>({item:e,index:r})),({item:e,index:r})=>S.has(e.key)||n.current.find(t=>t.key===e.key)?l.None():l.Some({key:e.key,index:r}))];const i=[];return s.forEach((e,r)=>{i.push({key:e.key,originalIndex:r,child:e.child})}),n.current.forEach(({index:e,key:r})=>{const t=i.findIndex(k=>k.originalIndex===e);t===-1?i.push({key:r,originalIndex:e,child:null}):i.splice(t,0,{key:r,originalIndex:e,child:null})}),c(g,{style:f,children:i.map(({key:e,child:r})=>c(x,{enter:p,leave:y,style:m,onLeave:()=>V(e),children:r},e))})};try{u.displayName="TransitionGroupView",u.__docgenInfo={description:"",displayName:"TransitionGroupView",props:{enter:{defaultValue:null,description:"",name:"enter",required:!1,type:{name:"AnimationStyles"}},leave:{defaultValue:null,description:"",name:"leave",required:!1,type:{name:"AnimationStyles"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"StyleProp<ViewStyle>"}},childStyle:{defaultValue:null,description:"",name:"childStyle",required:!1,type:{name:"StyleProp<ViewStyle>"}}}}}catch{}export{u as T};
//# sourceMappingURL=TransitionGroupView-HcSPDDF0.js.map
