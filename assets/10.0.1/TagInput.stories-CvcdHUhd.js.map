{"version":3,"file":"TagInput.stories-CvcdHUhd.js","sources":["../../../packages/lake/src/components/LakeTagInput.tsx","../../../packages/lake/__stories__/TagInput.stories.tsx"],"sourcesContent":["import { forwardRef, useCallback, useImperativeHandle, useRef, useState } from \"react\";\nimport {\n  NativeSyntheticEvent,\n  StyleSheet,\n  TextInput,\n  TextInputFocusEventData,\n  TextInputKeyPressEventData,\n  TextInputProps,\n  View,\n} from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport { Merge } from \"type-fest\";\nimport { backgroundColor, colors, radii, shadows, spacings } from \"../constants/design\";\nimport { useHover } from \"../hooks/useHover\";\nimport { useMergeRefs } from \"../hooks/useMergeRefs\";\nimport { isNotNullish, isNotNullishOrEmpty, isNullishOrEmpty } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { LakeText } from \"./LakeText\";\nimport { Pressable } from \"./Pressable\";\nimport { Tag } from \"./Tag\";\n\nconst TRANSPARENT = \"transparent\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexDirection: \"row\",\n    alignItems: \"stretch\",\n  },\n  root: {\n    flexDirection: \"row\",\n    display: \"flex\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    borderRadius: radii[6],\n    backgroundColor: backgroundColor.accented,\n    borderColor: colors.gray[100],\n    borderWidth: 1,\n    paddingHorizontal: spacings[4],\n    paddingTop: spacings[4],\n    outlineStyle: \"none\",\n    cursor: \"text\",\n  },\n  focused: {\n    borderColor: colors.gray[500],\n    boxShadow: shadows.tile,\n  },\n  hovered: {\n    boxShadow: shadows.tile,\n  },\n  disabled: {\n    backgroundColor: colors.gray[50],\n    borderColor: colors.gray[50],\n    color: colors.gray[900],\n    cursor: \"not-allowed\",\n  },\n  readOnly: {\n    backgroundColor: colors.gray[50],\n    borderColor: colors.gray[50],\n    color: colors.gray[900],\n  },\n  readOnlyError: {\n    borderColor: TRANSPARENT,\n    paddingRight: spacings[32],\n  },\n  error: {\n    borderColor: colors.negative[400],\n  },\n  valid: {\n    borderColor: colors.positive[500],\n  },\n  input: {\n    height: 28,\n    marginBottom: spacings[4],\n    marginLeft: spacings[4],\n    outlineStyle: \"none\",\n    flexGrow: 1,\n  },\n  tag: {\n    marginRight: spacings[4],\n    marginBottom: spacings[4],\n    maxWidth: 350,\n  },\n  errorContainer: {\n    paddingTop: spacings[4],\n  },\n});\n\nexport type LakeTagInputProps = Merge<\n  TextInputProps,\n  {\n    readOnly?: boolean;\n    error?: string;\n    disabled?: boolean;\n    valid?: boolean;\n    hideErrors?: boolean;\n    validateOnBlur?: boolean;\n    help?: string;\n    validator?: (value: string) => boolean;\n    values: string[];\n    onValuesChanged: (values: string[]) => void;\n    placeholder?: string;\n  }\n>;\n\nconst SEPARATORS_REGEX = /,| /;\n\nexport type TagInputRef = TextInput & { pushPendingValue: () => void };\n\nexport const LakeTagInput = forwardRef<TagInputRef, LakeTagInputProps>(\n  (\n    {\n      validator = () => true,\n      onFocus: originalOnFocus,\n      onBlur: originalOnBlur,\n      validateOnBlur = true,\n      values,\n      onValuesChanged,\n      readOnly = false,\n      disabled = false,\n      valid = false,\n      hideErrors = false,\n      placeholder,\n      help,\n      error,\n    }: LakeTagInputProps,\n    forwardedRef,\n  ) => {\n    const inputRef = useRef<TextInput | null>(null);\n    const containerRef = useRef<View | null>(null);\n    const [isFocused, setIsFocused] = useState(false);\n    const [isHovered, setIsHovered] = useState(false);\n\n    const mergedRef = useMergeRefs(inputRef, forwardedRef);\n\n    useHover(containerRef, {\n      onHoverStart: () => setIsHovered(true),\n      onHoverEnd: () => setIsHovered(false),\n    });\n\n    const pushNewValues = useCallback(\n      (vals: string[]) => {\n        onValuesChanged([...values, ...vals.filter(v => !values.includes(v))]);\n        inputRef.current?.clear();\n      },\n      [values, onValuesChanged],\n    );\n\n    const onTextInputChange = useCallback(\n      (value: string) => {\n        const input = [...new Set(value.split(SEPARATORS_REGEX).filter(s => s.length))];\n        if (input.length > 1 || input[0] !== value) {\n          pushNewValues(input);\n        }\n      },\n      [pushNewValues],\n    );\n\n    const onTextInputKeyPress = useCallback(\n      ({ nativeEvent }: NativeSyntheticEvent<TextInputKeyPressEventData>) => {\n        if (disabled || readOnly) {\n          return;\n        }\n\n        match({ key: nativeEvent.key, input: inputRef.current })\n          .with({ key: \"Backspace\", input: P.instanceOf(HTMLInputElement) }, ({ input }) => {\n            if (isNullishOrEmpty(input.value)) {\n              onValuesChanged(values.filter(current => current !== values[values.length - 1]));\n            }\n          })\n          .with({ key: \"Enter\", input: P.instanceOf(HTMLInputElement) }, ({ input }) => {\n            if (isNotNullishOrEmpty(input.value)) {\n              pushNewValues([input.value]);\n            }\n          });\n      },\n      [onValuesChanged, pushNewValues, values, disabled, readOnly],\n    );\n\n    const autoFocus = useCallback(() => {\n      inputRef.current?.focus();\n    }, []);\n\n    const onFocus = useCallback(\n      (event: NativeSyntheticEvent<TextInputFocusEventData>) => {\n        setIsFocused(true);\n        originalOnFocus?.(event);\n      },\n      [originalOnFocus],\n    );\n\n    const onBlur = useCallback(\n      (event: NativeSyntheticEvent<TextInputFocusEventData>) => {\n        const input = inputRef.current;\n        if (\n          input instanceof HTMLInputElement &&\n          isNotNullishOrEmpty(input.value) &&\n          validateOnBlur\n        ) {\n          pushNewValues([input.value]);\n        }\n\n        setIsFocused(false);\n        originalOnBlur?.(event);\n      },\n      [pushNewValues, originalOnBlur, validateOnBlur],\n    );\n\n    useImperativeHandle<\n      Pick<TagInputRef, \"pushPendingValue\">,\n      Pick<TagInputRef, \"pushPendingValue\">\n    >(\n      forwardedRef,\n      () => ({\n        pushPendingValue: () => {\n          const input = inputRef.current;\n          if (\n            input instanceof HTMLInputElement &&\n            isNotNullishOrEmpty(input.value) &&\n            validateOnBlur\n          ) {\n            pushNewValues([input.value]);\n          }\n        },\n      }),\n      [pushNewValues, validateOnBlur],\n    );\n\n    const hasError = isNotNullishOrEmpty(error);\n\n    return (\n      <View>\n        <Pressable\n          style={[\n            styles.root,\n            readOnly && hasError && styles.readOnlyError,\n            disabled && styles.disabled,\n            readOnly && styles.readOnly,\n            isFocused && styles.focused,\n            hasError && styles.error,\n            valid && styles.valid,\n            isHovered && styles.hovered,\n          ]}\n          aria-errormessage={error}\n          onPress={autoFocus}\n          ref={containerRef}\n        >\n          {values.map((value, i) => (\n            <Tag\n              key={i}\n              onPressRemove={\n                !readOnly && !disabled\n                  ? () => onValuesChanged(values.filter(current => current !== value))\n                  : undefined\n              }\n              style={styles.tag}\n              color={validator(value) ? \"gray\" : \"negative\"}\n            >\n              {value}\n            </Tag>\n          ))}\n\n          <TextInput\n            ref={mergedRef}\n            style={[styles.input, disabled && styles.disabled]}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            aria-disabled={disabled}\n            onChangeText={onTextInputChange}\n            onKeyPress={onTextInputKeyPress}\n            readOnly={readOnly}\n            placeholder={placeholder}\n          />\n        </Pressable>\n\n        {!hideErrors && (\n          <Box direction=\"row\" style={styles.errorContainer}>\n            {isNotNullish(error) ? (\n              <LakeText variant=\"smallRegular\" color={colors.negative[500]}>\n                {error}\n              </LakeText>\n            ) : (\n              <LakeText variant=\"smallRegular\" color={colors.gray[500]}>\n                {help ?? \" \"}\n              </LakeText>\n            )}\n          </Box>\n        )}\n      </View>\n    );\n  },\n);\n","import { Meta } from \"@storybook/react\";\nimport { isValidEmail } from \"@swan-io/shared-business/src/utils/validation\";\nimport { useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Except } from \"type-fest\";\nimport { LakeTagInput, LakeTagInputProps } from \"../src/components/LakeTagInput\";\nimport { LakeTextInput } from \"../src/components/LakeTextInput\";\nimport { StoryBlock, StoryPart } from \"./_StoriesComponents\";\n\nconst styles = StyleSheet.create({\n  input: {\n    maxWidth: 400,\n  },\n});\n\nexport default {\n  title: \"Forms/TagInput\",\n  component: LakeTextInput,\n} as Meta<typeof LakeTextInput>;\n\nconst EditableTagInput = (props: Except<LakeTagInputProps, \"onValuesChanged\" | \"values\">) => {\n  const [values, setValues] = useState<string[]>([\"toto\", \"dfghj@iouy.fr\"]);\n\n  return (\n    <View style={styles.input}>\n      <LakeTagInput\n        validator={isValidEmail}\n        onValuesChanged={setValues}\n        values={values}\n        {...props}\n      />\n    </View>\n  );\n};\n\nexport const Variations = () => {\n  return (\n    <StoryBlock title=\"Input variations\">\n      <StoryPart title=\"Default\">\n        <EditableTagInput />\n      </StoryPart>\n\n      <StoryPart title=\"Disabled\">\n        <EditableTagInput disabled={true} />\n      </StoryPart>\n\n      <StoryPart title=\"Error\">\n        <EditableTagInput error=\"Nop\" />\n      </StoryPart>\n\n      <StoryPart title=\"Hidden errors\">\n        <EditableTagInput error=\"Nop\" hideErrors={true} />\n      </StoryPart>\n\n      <StoryPart title=\"Valid\">\n        <EditableTagInput valid={true} />\n      </StoryPart>\n\n      <StoryPart title=\"With help\">\n        <EditableTagInput help=\"Fill me\" />\n      </StoryPart>\n\n      <StoryPart title=\"Read only\">\n        <EditableTagInput readOnly={true} />\n      </StoryPart>\n    </StoryBlock>\n  );\n};\n"],"names":["TRANSPARENT","styles","StyleSheet","radii","backgroundColor","colors","spacings","shadows","SEPARATORS_REGEX","LakeTagInput","forwardRef","validator","originalOnFocus","originalOnBlur","validateOnBlur","values","onValuesChanged","readOnly","disabled","valid","hideErrors","placeholder","help","error","forwardedRef","inputRef","useRef","containerRef","isFocused","setIsFocused","useState","isHovered","setIsHovered","mergedRef","useMergeRefs","useHover","pushNewValues","useCallback","vals","v","_a","onTextInputChange","value","input","s","onTextInputKeyPress","nativeEvent","match","P","isNullishOrEmpty","current","isNotNullishOrEmpty","autoFocus","onFocus","event","onBlur","useImperativeHandle","hasError","View","jsxs","Pressable","i","jsx","Tag","TextInput","Box","LakeText","create","maxWidth","TagInput_stories","title","component","LakeTextInput","EditableTagInput","props","setValues","isValidEmail","Variations","StoryBlock","StoryPart"],"mappings":"4rCAqBA,MAAMA,GAAc,cAEdC,EAASC,EAAW,OAAO,CAC/B,UAAW,CACT,SAAU,EACV,WAAY,EACZ,cAAe,MACf,WAAY,SACd,EACA,KAAM,CACJ,cAAe,MACf,QAAS,OACT,WAAY,SACZ,SAAU,OACV,aAAcC,EAAM,CAAC,EACrB,gBAAiBC,EAAgB,SACjC,YAAaC,EAAO,KAAK,GAAG,EAC5B,YAAa,EACb,kBAAmBC,EAAS,CAAC,EAC7B,WAAYA,EAAS,CAAC,EACtB,aAAc,OACd,OAAQ,MACV,EACA,QAAS,CACP,YAAaD,EAAO,KAAK,GAAG,EAC5B,UAAWE,EAAQ,IACrB,EACA,QAAS,CACP,UAAWA,EAAQ,IACrB,EACA,SAAU,CACR,gBAAiBF,EAAO,KAAK,EAAE,EAC/B,YAAaA,EAAO,KAAK,EAAE,EAC3B,MAAOA,EAAO,KAAK,GAAG,EACtB,OAAQ,aACV,EACA,SAAU,CACR,gBAAiBA,EAAO,KAAK,EAAE,EAC/B,YAAaA,EAAO,KAAK,EAAE,EAC3B,MAAOA,EAAO,KAAK,GAAG,CACxB,EACA,cAAe,CACb,YAAaL,GACb,aAAcM,EAAS,EAAE,CAC3B,EACA,MAAO,CACL,YAAaD,EAAO,SAAS,GAAG,CAClC,EACA,MAAO,CACL,YAAaA,EAAO,SAAS,GAAG,CAClC,EACA,MAAO,CACL,OAAQ,GACR,aAAcC,EAAS,CAAC,EACxB,WAAYA,EAAS,CAAC,EACtB,aAAc,OACd,SAAU,CACZ,EACA,IAAK,CACH,YAAaA,EAAS,CAAC,EACvB,aAAcA,EAAS,CAAC,EACxB,SAAU,GACZ,EACA,eAAgB,CACd,WAAYA,EAAS,CAAC,CACxB,CACF,CAAC,EAmBKE,GAAmB,MAIZC,EAAeC,EAAA,WAC1B,CACE,CACE,UAAAC,EAAY,IAAM,GAClB,QAASC,EACT,OAAQC,EACR,eAAAC,EAAiB,GACjB,OAAAC,EACA,gBAAAC,EACA,SAAAC,EAAW,GACX,SAAAC,EAAW,GACX,MAAAC,EAAQ,GACR,WAAAC,EAAa,GACb,YAAAC,EACA,KAAAC,EACA,MAAAC,GAEFC,IACG,CACG,MAAAC,EAAWC,SAAyB,IAAI,EACxCC,EAAeD,SAAoB,IAAI,EACvC,CAACE,EAAWC,CAAY,EAAIC,WAAS,EAAK,EAC1C,CAACC,EAAWC,CAAY,EAAIF,WAAS,EAAK,EAE1CG,EAAYC,GAAaT,EAAUD,CAAY,EAErDW,EAASR,EAAc,CACrB,aAAc,IAAMK,EAAa,EAAI,EACrC,WAAY,IAAMA,EAAa,EAAK,CAAA,CACrC,EAED,MAAMI,EAAgBC,EAAA,YACnBC,GAAmB,OAClBtB,EAAgB,CAAC,GAAGD,EAAQ,GAAGuB,EAAK,OAAYC,GAAA,CAACxB,EAAO,SAASwB,CAAC,CAAC,CAAC,CAAC,GACrEC,EAAAf,EAAS,UAAT,MAAAe,EAAkB,OACpB,EACA,CAACzB,EAAQC,CAAe,CAAA,EAGpByB,EAAoBJ,EAAA,YACvBK,GAAkB,CACjB,MAAMC,EAAQ,CAAC,GAAG,IAAI,IAAID,EAAM,MAAMlC,EAAgB,EAAE,OAAOoC,GAAKA,EAAE,MAAM,CAAC,CAAC,GAC1ED,EAAM,OAAS,GAAKA,EAAM,CAAC,IAAMD,IACnCN,EAAcO,CAAK,CAEvB,EACA,CAACP,CAAa,CAAA,EAGVS,EAAsBR,EAAA,YAC1B,CAAC,CAAE,YAAAS,CAAA,IAAoE,CACjE5B,GAAYD,GAIV8B,EAAA,CAAE,IAAKD,EAAY,IAAK,MAAOrB,EAAS,OAAS,CAAA,EACpD,KAAK,CAAE,IAAK,YAAa,MAAOuB,EAAE,WAAW,gBAAgB,CAAK,EAAA,CAAC,CAAE,MAAAL,KAAY,CAC5EM,GAAiBN,EAAM,KAAK,GACd3B,EAAAD,EAAO,OAAkBmC,GAAAA,IAAYnC,EAAOA,EAAO,OAAS,CAAC,CAAC,CAAC,CAElF,CAAA,EACA,KAAK,CAAE,IAAK,QAAS,MAAOiC,EAAE,WAAW,gBAAgB,CAAE,EAAG,CAAC,CAAE,MAAAL,KAAY,CACxEQ,EAAoBR,EAAM,KAAK,GACnBP,EAAA,CAACO,EAAM,KAAK,CAAC,CAC7B,CACD,CACL,EACA,CAAC3B,EAAiBoB,EAAerB,EAAQG,EAAUD,CAAQ,CAAA,EAGvDmC,EAAYf,EAAAA,YAAY,IAAM,QAClCG,EAAAf,EAAS,UAAT,MAAAe,EAAkB,OACpB,EAAG,CAAE,CAAA,EAECa,EAAUhB,EAAA,YACbiB,GAAyD,CACxDzB,EAAa,EAAI,EACjBjB,GAAA,MAAAA,EAAkB0C,EACpB,EACA,CAAC1C,CAAe,CAAA,EAGZ2C,EAASlB,EAAA,YACZiB,GAAyD,CACxD,MAAMX,EAAQlB,EAAS,QAErBkB,aAAiB,kBACjBQ,EAAoBR,EAAM,KAAK,GAC/B7B,GAEcsB,EAAA,CAACO,EAAM,KAAK,CAAC,EAG7Bd,EAAa,EAAK,EAClBhB,GAAA,MAAAA,EAAiByC,EACnB,EACA,CAAClB,EAAevB,EAAgBC,CAAc,CAAA,EAGhD0C,EAAA,oBAIEhC,EACA,KAAO,CACL,iBAAkB,IAAM,CACtB,MAAMmB,EAAQlB,EAAS,QAErBkB,aAAiB,kBACjBQ,EAAoBR,EAAM,KAAK,GAC/B7B,GAEcsB,EAAA,CAACO,EAAM,KAAK,CAAC,CAE/B,CAAA,GAEF,CAACP,EAAetB,CAAc,CAAA,EAG1B,MAAA2C,EAAWN,EAAoB5B,CAAK,EAE1C,cACGmC,EACC,CAAA,SAAA,CAAAC,EAAA,KAACC,GAAA,CACC,MAAO,CACL3D,EAAO,KACPgB,GAAYwC,GAAYxD,EAAO,cAC/BiB,GAAYjB,EAAO,SACnBgB,GAAYhB,EAAO,SACnB2B,GAAa3B,EAAO,QACpBwD,GAAYxD,EAAO,MACnBkB,GAASlB,EAAO,MAChB8B,GAAa9B,EAAO,OACtB,EACA,oBAAmBsB,EACnB,QAAS6B,EACT,IAAKzB,EAEJ,SAAA,CAAOZ,EAAA,IAAI,CAAC2B,EAAOmB,IAClBC,EAAA,IAACC,GAAA,CAEC,cACE,CAAC9C,GAAY,CAACC,EACV,IAAMF,EAAgBD,EAAO,OAAOmC,GAAWA,IAAYR,CAAK,CAAC,EACjE,OAEN,MAAOzC,EAAO,IACd,MAAOU,EAAU+B,CAAK,EAAI,OAAS,WAElC,SAAAA,CAAA,EATImB,CAAA,CAWR,EAEDC,EAAA,IAACE,GAAA,CACC,IAAK/B,EACL,MAAO,CAAChC,EAAO,MAAOiB,GAAYjB,EAAO,QAAQ,EACjD,QAAAoD,EACA,OAAAE,EACA,gBAAerC,EACf,aAAcuB,EACd,WAAYI,EACZ,SAAA5B,EACA,YAAAI,CAAA,CACF,CAAA,CAAA,CACF,EAEC,CAACD,GACC0C,EAAAA,IAAAG,GAAA,CAAI,UAAU,MAAM,MAAOhE,EAAO,eAChC,YAAasB,CAAK,EAChBuC,EAAA,IAAAI,EAAA,CAAS,QAAQ,eAAe,MAAO7D,EAAO,SAAS,GAAG,EACxD,SACHkB,CAAA,CAAA,QAEC2C,EAAS,CAAA,QAAQ,eAAe,MAAO7D,EAAO,KAAK,GAAG,EACpD,SAAAiB,GAAQ,GACX,CAAA,EAEJ,CAEJ,CAAA,CAAA,CAEJ,CACF,qiBC3RA,MAAMrB,GAASC,EAAWiE,OAAO,CAC/BxB,MAAO,CACLyB,SAAU,GACZ,CACF,CAAC,EAEcC,GAAA,CACbC,MAAO,iBACPC,UAAWC,EACb,EAEMC,EAAoBC,GAAmE,CACrF,KAAA,CAAC3D,EAAQ4D,CAAS,EAAI7C,WAAmB,CAAC,OAAQ,eAAe,CAAC,EAExE,OACGgC,EAAAA,IAAAJ,EAAA,CAAK,MAAOzD,GAAO0C,MAClB,SAACmB,MAAArD,EAAA,CACC,UAAWmE,EACX,gBAAiBD,EACjB,OAAA5D,KACI2D,EAAK,CAEb,CAAA,CAEJ,EAEaG,EAAaA,IAEtBlB,EAAA,KAACmB,GAAW,CAAA,MAAM,mBAChB,SAAA,CAAAhB,MAACiB,EAAU,CAAA,MAAM,UACf,SAAAjB,MAACW,GAAgB,CAAA,EACnB,EAEAX,EAAAA,IAACiB,GAAU,MAAM,WACf,eAACN,EAAiB,CAAA,SAAU,GAAK,CACnC,CAAA,EAEAX,EAAAA,IAACiB,GAAU,MAAM,QACf,eAACN,EAAiB,CAAA,MAAM,MAAK,CAC/B,CAAA,EAEAX,EAAAA,IAACiB,EAAU,CAAA,MAAM,gBACf,SAAAjB,EAAA,IAACW,GAAiB,MAAM,MAAM,WAAY,EAAA,CAAK,CACjD,CAAA,EAEAX,EAAAA,IAACiB,GAAU,MAAM,QACf,eAACN,EAAiB,CAAA,MAAO,GAAK,CAChC,CAAA,EAEAX,EAAAA,IAACiB,GAAU,MAAM,YACf,eAACN,EAAiB,CAAA,KAAK,UAAS,CAClC,CAAA,EAEAX,EAAAA,IAACiB,GAAU,MAAM,YACf,eAACN,EAAiB,CAAA,SAAU,GAAK,CACnC,CAAA,CACF,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}