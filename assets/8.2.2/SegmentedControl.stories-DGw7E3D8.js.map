{"version":3,"file":"SegmentedControl.stories-DGw7E3D8.js","sources":["../../../packages/lake/src/components/SegmentedControl.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { backgroundColor, colors, radii, spacings, texts } from \"../constants/design\";\nimport { isNotNullish } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { LakeText } from \"./LakeText\";\nimport { Pressable } from \"./Pressable\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.gray[50],\n    borderRadius: radii[8],\n    padding: spacings[4],\n  },\n  selectedItemIndicator: {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    flexGrow: 1,\n    flexShrink: 1,\n    transitionProperty: \"transform\",\n    transitionDuration: \"250ms\",\n    transitionTimingFunction: \"ease\",\n    padding: spacings[4],\n    borderRadius: radii[4],\n    backgroundColor: backgroundColor.accented,\n  },\n  item: {\n    flexBasis: \"0%\",\n    flexGrow: 1,\n    flexShrink: 1,\n    alignItems: \"center\",\n    padding: spacings[16],\n    flexDirection: \"column\",\n  },\n  itemDesktop: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  itemText: {\n    userSelect: \"none\",\n    lineHeight: texts.regular.fontSize,\n  },\n  selectedItemMobile: {\n    right: 0,\n  },\n  selectedItemDesktop: {\n    bottom: 0,\n  },\n});\n\nexport type Item<T extends string> = {\n  name: string;\n  id: T;\n  icon?: ReactNode;\n};\n\ntype Props<T extends string> = {\n  mode?: \"desktop\" | \"mobile\";\n  selected: T;\n  items: ReadonlyArray<Item<T>>;\n  onValueChange: (value: T) => void;\n};\n\nexport const SegmentedControl = <T extends string>({\n  mode = \"desktop\",\n  selected,\n  items,\n  onValueChange,\n}: Props<T>) => {\n  const selectedItemIndex = items.findIndex(item => item.id === selected);\n\n  return (\n    <Box style={styles.container}>\n      <Box direction={mode === \"mobile\" ? \"column\" : \"row\"}>\n        <View\n          role=\"none\"\n          style={[\n            styles.selectedItemIndicator,\n            mode === \"mobile\" ? styles.selectedItemMobile : styles.selectedItemDesktop,\n            mode === \"mobile\"\n              ? {\n                  height: `${(1 / items.length) * 100}%`,\n                  transform: `translateY(${selectedItemIndex * 100}%)`,\n                }\n              : {\n                  width: `${(1 / items.length) * 100}%`,\n                  transform: `translateX(${selectedItemIndex * 100}%)`,\n                },\n          ]}\n        />\n\n        {items.map(item => (\n          <Pressable\n            key={item.id}\n            style={[styles.item, mode === \"desktop\" && styles.itemDesktop]}\n            onPress={() => {\n              onValueChange(item.id);\n            }}\n          >\n            {isNotNullish(item.icon) && (\n              <>\n                {item.icon}\n\n                <Space height={8} width={12} />\n              </>\n            )}\n\n            <LakeText\n              color={colors.gray[900]}\n              numberOfLines={1}\n              variant=\"regular\"\n              style={styles.itemText}\n            >\n              {item.name}\n            </LakeText>\n          </Pressable>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n"],"names":["styles","StyleSheet","colors","radii","spacings","backgroundColor","texts","SegmentedControl","mode","selected","items","onValueChange","selectedItemIndex","item","jsx","Box","jsxs","View","Pressable","isNotNullish","Fragment","Space","LakeText"],"mappings":"grBASA,MAAAA,EAAAC,EAAA,OAAA,CACA,UAAA,CACA,gBAAAC,EAAA,KAAA,EAAA,EACA,aAAAC,EAAA,CAAA,EACA,QAAAC,EAAA,CAAA,CACA,EACA,sBAAA,CACA,SAAA,WACA,KAAA,EACA,IAAA,EACA,SAAA,EACA,WAAA,EACA,mBAAA,YACA,mBAAA,QACA,yBAAA,OACA,QAAAA,EAAA,CAAA,EACA,aAAAD,EAAA,CAAA,EACA,gBAAAE,EAAA,QACA,EACA,KAAA,CACA,UAAA,KACA,SAAA,EACA,WAAA,EACA,WAAA,SACA,QAAAD,EAAA,EAAA,EACA,cAAA,QACA,EACA,YAAA,CACA,cAAA,MACA,eAAA,QACA,EACA,SAAA,CACA,WAAA,OACA,WAAAE,EAAA,QAAA,QACA,EACA,mBAAA,CACA,MAAA,CACA,EACA,oBAAA,CACA,OAAA,CACA,CACA,CAAA,EAeAC,EAAA,CAAA,CACA,KAAAC,EAAA,UACA,SAAAC,EACA,MAAAC,EACA,cAAAC,CACA,IAAA,CACA,MAAAC,EAAAF,EAAA,UAAAG,GAAAA,EAAA,KAAAJ,CAAA,EAGA,OAAAK,EAAAA,IAAAC,EAAA,CAAA,MAAAf,EAAA,UACA,SAAAgB,EAAAA,KAAAD,EAAA,CAAA,UAAAP,IAAA,SAAA,SAAA,MACA,SAAA,CAAAM,EAAA,IAAAG,EAAA,CACA,KAAA,OACA,MAAA,CACAjB,EAAA,sBACAQ,IAAA,SAAAR,EAAA,mBAAAA,EAAA,oBACAQ,IAAA,SACA,CACA,OAAA,GAAA,EAAAE,EAAA,OAAA,GAAA,IACA,UAAA,cAAAE,EAAA,GAAA,IAAA,EAEA,CACA,MAAA,GAAA,EAAAF,EAAA,OAAA,GAAA,IACA,UAAA,cAAAE,EAAA,GAAA,IACA,CACA,CAAA,CACA,EAEAF,EAAA,IACAG,GAAAG,EAAA,KAAAE,EAAA,CAEA,MAAA,CAAAlB,EAAA,KAAAQ,IAAA,WAAAR,EAAA,WAAA,EACA,QAAA,IAAA,CACAW,EAAAE,EAAA,EAAA,CACA,EAEA,SAAA,CAAAM,EAAAN,EAAA,IAAA,GAEAG,EAAAA,KAAAI,EAAAA,SAAA,CAAA,SAAA,CAAAP,EAAA,KAEAC,EAAA,IAAAO,EAAA,CAAA,OAAA,EAAA,MAAA,GAAA,CAAA,EACA,EAGAP,EAAA,IAAAQ,EAAA,CACA,MAAApB,EAAA,KAAA,GAAA,EACA,cAAA,EACA,QAAA,UACA,MAAAF,EAAA,SAEA,SAAAa,EAAA,IAAA,CACA,CAAA,CAAA,EArBAA,EAAA,EAAA,CAuBA,CAAA,CACA,CAAA,CACA,CAAA,CAEA;;;;;;;;;"}