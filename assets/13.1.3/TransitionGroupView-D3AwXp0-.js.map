{"version":3,"file":"TransitionGroupView-D3AwXp0-.js","sources":["../../../packages/lake/src/components/TransitionGroupView.tsx"],"sourcesContent":["import { Array, Option } from \"@swan-io/boxed\";\nimport { Children, ReactNode, useMemo, useReducer, useRef } from \"react\";\nimport { AnimationStyles, StyleProp, View, ViewStyle } from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport { usePreviousValue } from \"../hooks/usePreviousValue\";\nimport { TransitionView } from \"./TransitionView\";\n\ntype Props = {\n  enter?: AnimationStyles;\n  leave?: AnimationStyles;\n  style?: StyleProp<ViewStyle>;\n  childStyle?: StyleProp<ViewStyle>;\n  children: ReactNode;\n};\n\nexport const TransitionGroupView = ({ children, enter, leave, style, childStyle }: Props) => {\n  const leavingKeysAndIndicesRef = useRef<{ index: number; key: string }[]>([]);\n  const [, forceUpdate] = useReducer(() => [], []);\n\n  const onLeave = (key: string) => {\n    leavingKeysAndIndicesRef.current = leavingKeysAndIndicesRef.current.filter(\n      leavingKey => leavingKey.key !== key,\n    );\n\n    forceUpdate();\n  };\n\n  const cleanedUpChildren = useMemo(\n    () =>\n      Array.filterMap(Children.toArray(children), child =>\n        match(child)\n          .with({ key: P.string }, child => Option.Some({ key: child.key, child }))\n          .otherwise(() => Option.None()),\n      ),\n    [children],\n  );\n\n  const previousChildren = usePreviousValue(cleanedUpChildren);\n\n  const newKeys = new Set(cleanedUpChildren.map(item => item.key));\n  leavingKeysAndIndicesRef.current = [\n    ...leavingKeysAndIndicesRef.current,\n    ...Array.filterMap(\n      previousChildren.map((item, index) => ({ item, index })),\n      ({ item, index }) =>\n        newKeys.has(item.key) ||\n        leavingKeysAndIndicesRef.current.find(prev => prev.key === item.key)\n          ? Option.None()\n          : Option.Some({ key: item.key, index }),\n    ),\n  ];\n\n  const childrenToRender: { key: string; originalIndex: number; child: ReactNode }[] = [];\n  cleanedUpChildren.forEach((item, index) => {\n    childrenToRender.push({ key: item.key, originalIndex: index, child: item.child });\n  });\n\n  leavingKeysAndIndicesRef.current.forEach(({ index, key }) => {\n    const closerIndex = childrenToRender.findIndex(item => item.originalIndex === index);\n    if (closerIndex === -1) {\n      childrenToRender.push({ key, originalIndex: index, child: null });\n    } else {\n      childrenToRender.splice(closerIndex, 0, { key, originalIndex: index, child: null });\n    }\n  });\n\n  return (\n    <View style={style}>\n      {childrenToRender.map(({ key, child }) => {\n        return (\n          <TransitionView\n            enter={enter}\n            leave={leave}\n            style={childStyle}\n            onLeave={() => onLeave(key)}\n            key={key}\n          >\n            {child}\n          </TransitionView>\n        );\n      })}\n    </View>\n  );\n};\n"],"names":["TransitionGroupView","children","enter","leave","style","childStyle","leavingKeysAndIndicesRef","useRef","forceUpdate","useReducer","onLeave","key","leavingKey","cleanedUpChildren","useMemo","Array","Children","child","match","P","Option","previousChildren","usePreviousValue","newKeys","item","index","prev","childrenToRender","closerIndex","jsx","View","TransitionView"],"mappings":"4KAeO,MAAMA,EAAsB,CAAC,CAAE,SAAAC,EAAU,MAAAC,EAAO,MAAAC,EAAO,MAAAC,EAAO,WAAAC,KAAwB,CAC3F,MAAMC,EAA2BC,EAAAA,OAAyC,EAAE,EACtE,CAAA,CAAGC,CAAW,EAAIC,EAAAA,WAAW,IAAM,CAAA,EAAI,CAAA,CAAE,EAEzCC,EAAWC,GAAgB,CAC/BL,EAAyB,QAAUA,EAAyB,QAAQ,OAClEM,GAAcA,EAAW,MAAQD,CAAA,EAGnCH,EAAA,CACF,EAEMK,EAAoBC,EAAAA,QACxB,IACEC,EAAM,UAAUC,EAAAA,SAAS,QAAQf,CAAQ,EAAGgB,GAC1CC,EAAMD,CAAK,EACR,KAAK,CAAE,IAAKE,EAAE,QAAUF,GAASG,EAAO,KAAK,CAAE,IAAKH,EAAM,IAAK,MAAAA,CAAAA,CAAO,CAAC,EACvE,UAAU,IAAMG,EAAO,KAAA,CAAM,CAAA,EAEpC,CAACnB,CAAQ,CAAA,EAGLoB,EAAmBC,EAAiBT,CAAiB,EAErDU,EAAU,IAAI,IAAIV,EAAkB,IAAIW,GAAQA,EAAK,GAAG,CAAC,EAC/DlB,EAAyB,QAAU,CACjC,GAAGA,EAAyB,QAC5B,GAAGS,EAAM,UACPM,EAAiB,IAAI,CAACG,EAAMC,KAAW,CAAE,KAAAD,EAAM,MAAAC,GAAQ,EACvD,CAAC,CAAE,KAAAD,EAAM,MAAAC,CAAA,IACPF,EAAQ,IAAIC,EAAK,GAAG,GACpBlB,EAAyB,QAAQ,KAAKoB,GAAQA,EAAK,MAAQF,EAAK,GAAG,EAC/DJ,EAAO,KAAA,EACPA,EAAO,KAAK,CAAE,IAAKI,EAAK,IAAK,MAAAC,EAAO,CAAA,CAC5C,EAGF,MAAME,EAA+E,CAAA,EACrF,OAAAd,EAAkB,QAAQ,CAACW,EAAMC,IAAU,CACzCE,EAAiB,KAAK,CAAE,IAAKH,EAAK,IAAK,cAAeC,EAAO,MAAOD,EAAK,KAAA,CAAO,CAClF,CAAC,EAEDlB,EAAyB,QAAQ,QAAQ,CAAC,CAAE,MAAAmB,EAAO,IAAAd,KAAU,CAC3D,MAAMiB,EAAcD,EAAiB,UAAUH,GAAQA,EAAK,gBAAkBC,CAAK,EAC/EG,IAAgB,GAClBD,EAAiB,KAAK,CAAE,IAAAhB,EAAK,cAAec,EAAO,MAAO,KAAM,EAEhEE,EAAiB,OAAOC,EAAa,EAAG,CAAE,IAAAjB,EAAK,cAAec,EAAO,MAAO,KAAM,CAEtF,CAAC,EAGCI,MAACC,GAAK,MAAA1B,EACH,SAAAuB,EAAiB,IAAI,CAAC,CAAE,IAAAhB,EAAK,MAAAM,KAE1BY,EAAAA,IAACE,EAAA,CACC,MAAA7B,EACA,MAAAC,EACA,MAAOE,EACP,QAAS,IAAMK,EAAQC,CAAG,EAGzB,SAAAM,CAAA,EAFIN,CAAA,CAKV,CAAA,CACH,CAEJ"}