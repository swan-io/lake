{"version":3,"file":"FileUploader.stories-B1Tqrbp0.js","sources":["../../../packages/shared-business/__stories__/FileUploader.stories.tsx"],"sourcesContent":["import { Meta } from \"@storybook/react\";\nimport { Future, Result } from \"@swan-io/boxed\";\nimport { StyleSheet } from \"react-native\";\nimport { FilesUploader } from \"../src/components/FilesUploader\";\nimport { SwanFile } from \"../src/utils/SwanFile\";\nimport { StoryBlock, StoryPart } from \"./_StoriesComponents\";\n\nconst styles = StyleSheet.create({\n  storyPart: {\n    maxWidth: 600,\n  },\n});\n\nconst ACCEPTED_FORMATS = [\"application/pdf\", \"image/png\", \"image/jpeg\", \"image/svg+xml\"];\n\nexport default {\n  title: \"Forms/FilesUploader\",\n  component: FilesUploader,\n} as Meta<typeof FilesUploader>;\n\nconst documents: SwanFile[] = [\n  {\n    id: crypto.randomUUID(),\n    name: \"first-document.pdf\",\n    url: \"https://swan.io\",\n    statusInfo: { status: \"Validated\" },\n  },\n  {\n    id: crypto.randomUUID(),\n    name: \"second-document.png\",\n    statusInfo: { status: \"Pending\" },\n  },\n  {\n    id: crypto.randomUUID(),\n    name: \"third-document.jpg\",\n    statusInfo: { status: \"Refused\", reason: \"Quality of the document was too low\" },\n  },\n  {\n    id: crypto.randomUUID(),\n    name: \"fourth-document.xls\",\n    statusInfo: { status: \"Uploaded\" },\n  },\n  {\n    id: crypto.randomUUID(),\n    name: \"last-document.png\",\n    statusInfo: { status: \"Uploaded\" },\n  },\n];\n\nexport const WithSeveralDocuments = () => {\n  return (\n    <StoryBlock title=\"UploadArea with several documents\">\n      <StoryPart title=\"\" style={styles.storyPart}>\n        <FilesUploader\n          maxSize={20_000_000}\n          icon=\"document-regular\"\n          accept={ACCEPTED_FORMATS}\n          initialFiles={documents}\n          getUploadConfig={() => {}}\n          generateUpload={() => Future.value(Result.Ok({ id: crypto.randomUUID(), upload: {} }))}\n          onRemoveFile={() =>\n            Future.make<Result<unknown, unknown>>(resolve => {\n              setTimeout(() => resolve(Result.Ok(undefined)), 1_000);\n            })\n          }\n          uploadFile={({ onProgress }) => {\n            return Future.wait(1)\n              .tap(() => onProgress(0.8))\n              .flatMap(() => Future.wait(1200))\n              .map(Result.Ok);\n          }}\n          formatAndSizeDescription={\"20MB max\"}\n        />\n      </StoryPart>\n    </StoryBlock>\n  );\n};\n"],"names":["styles","StyleSheet","create","storyPart","maxWidth","ACCEPTED_FORMATS","FileUploader_stories","title","component","FilesUploader","documents","id","crypto","randomUUID","name","url","statusInfo","status","reason","WithSeveralDocuments","jsx","StoryBlock","StoryPart","Future","value","Result","Ok","upload","make","resolve","setTimeout","undefined","onProgress","wait","tap","flatMap","map"],"mappings":"m/BAOA,MAAMA,EAASC,EAAWC,OAAO,CAC/BC,UAAW,CACTC,SAAU,GAAA,CAEd,CAAC,EAEKC,EAAmB,CAAC,kBAAmB,YAAa,aAAc,eAAe,EAEvFC,EAAe,CACbC,MAAO,sBACPC,UAAWC,CACb,EAEMC,EAAwB,CAC5B,CACEC,GAAIC,OAAOC,WAAAA,EACXC,KAAM,qBACNC,IAAK,kBACLC,WAAY,CAAEC,OAAQ,WAAA,CACxB,EACA,CACEN,GAAIC,OAAOC,WAAAA,EACXC,KAAM,sBACNE,WAAY,CAAEC,OAAQ,SAAA,CACxB,EACA,CACEN,GAAIC,OAAOC,WAAAA,EACXC,KAAM,qBACNE,WAAY,CAAEC,OAAQ,UAAWC,OAAQ,qCAAA,CAC3C,EACA,CACEP,GAAIC,OAAOC,WAAAA,EACXC,KAAM,sBACNE,WAAY,CAAEC,OAAQ,UAAA,CACxB,EACA,CACEN,GAAIC,OAAOC,WAAAA,EACXC,KAAM,oBACNE,WAAY,CAAEC,OAAQ,UAAA,CACxB,CAAC,EAGUE,EAAuBA,IAEhCC,EAAAA,IAACC,GAAW,MAAM,oCAChB,eAACC,EAAA,CAAU,MAAM,GAAG,MAAOtB,EAAOG,UAChC,eAACM,EAAA,CACC,QAAS,IACT,KAAK,mBACL,OAAQJ,EACR,aAAcK,EACd,gBAAiB,IAAM,CAAC,EACxB,eAAgB,IAAMa,EAAOC,MAAMC,EAAOC,GAAG,CAAEf,GAAIC,OAAOC,WAAAA,EAAcc,OAAQ,CAAA,CAAC,CAAG,CAAC,EACrF,aAAc,IACZJ,EAAOK,KAA+BC,GAAW,CAC/CC,WAAW,IAAMD,EAAQJ,EAAOC,GAAGK,MAAS,CAAC,EAAG,GAAK,CACvD,CAAC,EAEH,WAAY,CAAC,CAAEC,WAAAA,CAAAA,IACNT,EAAOU,KAAK,CAAC,EACjBC,IAAI,IAAMF,EAAW,EAAG,CAAC,EACzBG,QAAQ,IAAMZ,EAAOU,KAAK,IAAI,CAAC,EAC/BG,IAAIX,EAAOC,EAAE,EAElB,yBAA0B,WAAU,CAAA,CAExC,CAAA,CACF;;;;;;;;;;;;;;;"}