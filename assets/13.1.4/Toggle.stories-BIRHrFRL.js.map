{"version":3,"file":"Toggle.stories-BIRHrFRL.js","sources":["../../../packages/lake/src/components/Toggle.tsx","../../../packages/lake/__stories__/Toggle.stories.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { match, P } from \"ts-pattern\";\nimport { colors, radii, spacings, texts } from \"../constants/design\";\nimport { Icon } from \"./Icon\";\nimport { Pressable } from \"./Pressable\";\n\nconst BORDER_WIDTH = 1;\n\nconst styles = StyleSheet.create({\n  base: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: colors.gray[200],\n    borderRadius: radii[8],\n    borderWidth: BORDER_WIDTH,\n    height: 28,\n  },\n  handle: {\n    position: \"absolute\",\n    // Allow handle to bleed on container border\n    bottom: -BORDER_WIDTH,\n    left: -BORDER_WIDTH,\n    right: -BORDER_WIDTH,\n    top: -BORDER_WIDTH,\n    borderWidth: BORDER_WIDTH,\n    borderRadius: radii[8],\n    transitionDuration: \"300ms\",\n    transitionProperty: \"transform, width\",\n    transitionTimingFunction: \"ease-in-out\",\n  },\n  item: {\n    paddingHorizontal: spacings[8],\n  },\n  text: {\n    ...texts.smallMedium,\n    color: colors.gray[700],\n    userSelect: \"none\",\n  },\n  hidden: {\n    visibility: \"hidden\",\n  },\n  textOn: {\n    color: colors.positive[500],\n  },\n  textOff: {\n    color: colors.negative[500],\n  },\n});\n\nconst getItemWidth = (node: unknown) =>\n  match(node)\n    .returnType<number>()\n    .with(P.instanceOf(HTMLElement), element => element.offsetWidth)\n    .otherwise(() => 0);\n\ntype Props = {\n  compact?: boolean;\n  value: boolean;\n  labelOff: string;\n  labelOn: string;\n  onToggle: (value: boolean) => void;\n};\n\nexport const Toggle = ({ compact = false, value, labelOff, labelOn, onToggle }: Props) => {\n  const [itemsWidth, setItemsWidth] = useState<{ on: number; off: number }>();\n  const onViewRef = useRef<Text>(null);\n  const offViewRef = useRef<Text>(null);\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies(compact):\n  useEffect(() => {\n    // batch measurements\n    setTimeout(() => {\n      setItemsWidth({\n        on: getItemWidth(onViewRef.current),\n        off: getItemWidth(offViewRef.current),\n      });\n    }, 0);\n  }, [compact]);\n\n  const onPress = useCallback(() => {\n    onToggle(!value);\n  }, [onToggle, value]);\n\n  return (\n    <Pressable role=\"switch\" onPress={onPress} aria-checked={value} style={styles.base}>\n      <View\n        role=\"presentation\"\n        style={[\n          styles.handle,\n          itemsWidth == null\n            ? styles.hidden\n            : {\n                backgroundColor: value ? colors.positive[50] : colors.negative[50],\n                borderColor: value ? colors.positive[500] : colors.negative[500],\n                transform: `translateX(${value ? 0 : itemsWidth.on + BORDER_WIDTH}px)`,\n                width: (value ? itemsWidth.on : itemsWidth.off) + BORDER_WIDTH,\n              },\n        ]}\n      />\n\n      <View ref={onViewRef} style={styles.item}>\n        {compact ? (\n          <Icon\n            color={value ? colors.positive[500] : colors.gray[500]}\n            size={16}\n            name=\"checkmark-circle-regular\"\n          />\n        ) : (\n          <Text style={[styles.text, value && styles.textOn]}>{labelOn}</Text>\n        )}\n      </View>\n\n      <View ref={offViewRef} style={styles.item}>\n        {compact ? (\n          <Icon\n            color={!value ? colors.negative[500] : colors.gray[500]}\n            size={16}\n            name=\"subtract-circle-regular\"\n          />\n        ) : (\n          <Text style={[styles.text, !value && styles.textOff]}>{labelOff}</Text>\n        )}\n      </View>\n    </Pressable>\n  );\n};\n","import { Meta } from \"@storybook/react\";\nimport { useState } from \"react\";\nimport { Box } from \"../src/components/Box\";\nimport { Toggle } from \"../src/components/Toggle\";\nimport { StoryBlock, StoryPart } from \"./_StoriesComponents\";\n\nexport default {\n  title: \"Forms/Toggle\",\n  component: Toggle,\n} as Meta<typeof Toggle>;\n\nexport const Variations = () => {\n  const [value, setValue] = useState(false);\n\n  return (\n    <StoryBlock title=\"Variations\" description=\"Toggle component\">\n      <StoryPart title=\"Normal\">\n        <Box alignItems=\"start\">\n          <Toggle\n            value={value}\n            onToggle={setValue}\n            compact={false}\n            labelOff=\"Canceled\"\n            labelOn=\"Active\"\n          />\n        </Box>\n      </StoryPart>\n\n      <StoryPart title=\"Compact\">\n        <Box alignItems=\"start\">\n          <Toggle\n            value={value}\n            onToggle={setValue}\n            compact={true}\n            labelOff=\"Canceled\"\n            labelOn=\"Active\"\n          />\n        </Box>\n      </StoryPart>\n    </StoryBlock>\n  );\n};\n"],"names":["BORDER_WIDTH","styles","StyleSheet","colors","radii","spacings","texts","getItemWidth","node","match","P","element","Toggle","compact","value","labelOff","labelOn","onToggle","itemsWidth","setItemsWidth","useState","onViewRef","useRef","offViewRef","useEffect","onPress","useCallback","jsxs","Pressable","jsx","View","Icon","Text","Toggle_stories","title","component","Variations","setValue","StoryBlock","StoryPart","Box"],"mappings":"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"}