{"version":3,"file":"SegmentedControl.stories-qR1Vz110.js","sources":["../../../packages/lake/src/components/SegmentedControl.tsx","../../../packages/lake/__stories__/SegmentedControl.stories.tsx"],"sourcesContent":["import { ReactNode, useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport { backgroundColor, colors, radii, spacings, texts } from \"../constants/design\";\nimport { isNotNullish } from \"../utils/nullish\";\nimport { BottomPanel } from \"./BottomPanel\";\nimport { Box } from \"./Box\";\nimport { Icon } from \"./Icon\";\nimport { LakeButton } from \"./LakeButton\";\nimport { LakeText } from \"./LakeText\";\nimport { Pressable } from \"./Pressable\";\nimport { ResponsiveContainer } from \"./ResponsiveContainer\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: spacings[4],\n    backgroundColor: colors.gray[50],\n    borderRadius: radii[8],\n  },\n  selectedItemIndicator: {\n    position: \"absolute\",\n    left: 0,\n    top: 0,\n    flexGrow: 1,\n    flexShrink: 1,\n    transitionProperty: \"transform\",\n    transitionDuration: \"250ms\",\n    transitionTimingFunction: \"ease\",\n    padding: spacings[4],\n    borderRadius: radii[4],\n    backgroundColor: backgroundColor.accented,\n  },\n  itemMobile: {\n    backgroundColor: backgroundColor.accented,\n    borderRadius: radii[4],\n    padding: spacings[16],\n    flexDirection: \"row\",\n    height: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexGrow: 1,\n  },\n  dropdownItem: {\n    backgroundColor: backgroundColor.accented,\n    borderRadius: radii[4],\n    padding: spacings[16],\n    flexDirection: \"row\",\n    height: 60,\n    alignItems: \"center\",\n    flexGrow: 1,\n  },\n  dropdownItemSelected: {\n    backgroundColor: colors.gray[50],\n    borderRadius: radii[4],\n    padding: spacings[16],\n    flexDirection: \"row\",\n    height: 60,\n    alignItems: \"center\",\n    flexGrow: 1,\n  },\n  button: {\n    width: 60,\n    height: 60,\n  },\n  itemDesktop: {\n    flexBasis: \"0%\",\n    flexGrow: 1,\n    flexShrink: 1,\n    alignItems: \"center\",\n    padding: spacings[16],\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  itemText: {\n    userSelect: \"none\",\n    lineHeight: texts.regular.fontSize,\n  },\n  selectedItemDesktop: {\n    bottom: 0,\n  },\n});\n\nexport type Item<T extends string> = {\n  name: string;\n  id: T;\n  icon?: ReactNode;\n  activeIcon?: ReactNode;\n};\n\ntype Props<T extends string> = {\n  selected: T;\n  items: ReadonlyArray<Item<T>>;\n  onValueChange: (value: T) => void;\n  minItemWidth?: number;\n};\n\nexport const SegmentedControl = <T extends string>({\n  selected,\n  items,\n  onValueChange,\n  minItemWidth = 250,\n}: Props<T>) => {\n  const selectedItemIndex = items.findIndex(item => item.id === selected);\n\n  const selectedItem = items[selectedItemIndex];\n\n  const [pressed, setPressed] = useState<boolean>(false);\n\n  return (\n    <ResponsiveContainer breakpoint={items.length * minItemWidth} style={styles.container}>\n      {({ small }) =>\n        small ? (\n          <Box direction=\"row\" alignItems=\"center\" justifyContent=\"spaceBetween\">\n            <Pressable\n              style={styles.itemMobile}\n              onPress={() => {\n                setPressed(true);\n              }}\n            >\n              {isNotNullish(selectedItem?.icon) &&\n                match(selectedItem)\n                  .with(\n                    { icon: P.nonNullable, activeIcon: P.nonNullable },\n                    () => selectedItem.activeIcon,\n                  )\n                  .with({ icon: P.nonNullable }, () => selectedItem.icon)\n                  .otherwise(() => null)}\n\n              <Space height={8} width={12} />\n\n              <LakeText\n                color={colors.gray[900]}\n                numberOfLines={1}\n                variant=\"regular\"\n                style={styles.itemText}\n              >\n                {selectedItem?.name}\n              </LakeText>\n            </Pressable>\n\n            <BottomPanel\n              visible={pressed === true}\n              onPressClose={() => {\n                setPressed(false);\n              }}\n            >\n              {items.map(item => (\n                <Box direction=\"row\" key={item.id}>\n                  <Pressable\n                    style={\n                      selectedItem?.id === item.id\n                        ? styles.dropdownItemSelected\n                        : styles.dropdownItem\n                    }\n                    onPress={() => {\n                      onValueChange(item.id);\n                      setPressed(false);\n                    }}\n                  >\n                    {isNotNullish(item.icon) &&\n                      match(item)\n                        .with({ icon: P.nonNullable, activeIcon: P.nonNullable }, () =>\n                          selectedItem?.id === item.id ? selectedItem.activeIcon : item.icon,\n                        )\n                        .with({ icon: P.nonNullable }, () => item.icon)\n                        .otherwise(() => null)}\n\n                    <Space height={8} width={12} />\n\n                    <LakeText\n                      color={colors.gray[900]}\n                      numberOfLines={1}\n                      variant=\"regular\"\n                      style={styles.itemText}\n                    >\n                      {item.name}\n                    </LakeText>\n                  </Pressable>\n\n                  {selectedItem?.id === item.id && (\n                    <Box\n                      justifyContent=\"center\"\n                      style={{ paddingHorizontal: spacings[24], backgroundColor: colors.gray[50] }}\n                    >\n                      <Icon size={16} name=\"lake-check\" color={colors.positive[500]} />\n                    </Box>\n                  )}\n                </Box>\n              ))}\n            </BottomPanel>\n\n            <Space width={4} />\n\n            <LakeButton\n              mode=\"tertiary\"\n              style={styles.button}\n              size=\"small\"\n              icon=\"more-horizontal-filled\"\n              onPress={() => setPressed(true)}\n              ariaLabel=\"Previous\"\n            />\n          </Box>\n        ) : (\n          <Box direction=\"row\">\n            <View\n              role=\"none\"\n              style={[\n                styles.selectedItemIndicator,\n                styles.selectedItemDesktop,\n                {\n                  width: `${(1 / items.length) * 100}%`,\n                  transform: `translateX(${selectedItemIndex * 100}%)`,\n                },\n              ]}\n            />\n\n            {items.map(item => (\n              <Pressable\n                key={item.id}\n                style={styles.itemDesktop}\n                onPress={() => {\n                  onValueChange(item.id);\n                }}\n              >\n                <>\n                  {isNotNullish(item.icon) &&\n                    match(item)\n                      .with({ icon: P.nonNullable, activeIcon: P.nonNullable }, () =>\n                        selectedItem?.id === item.id ? selectedItem.activeIcon : item.icon,\n                      )\n                      .with({ icon: P.nonNullable }, () => item.icon)\n                      .otherwise(() => null)}\n\n                  <Space height={8} width={12} />\n                </>\n\n                <LakeText\n                  color={colors.gray[900]}\n                  numberOfLines={1}\n                  variant=\"regular\"\n                  style={styles.itemText}\n                >\n                  {item.name}\n                </LakeText>\n              </Pressable>\n            ))}\n          </Box>\n        )\n      }\n    </ResponsiveContainer>\n  );\n};\n","import { Meta } from \"@storybook/react\";\nimport { useState } from \"react\";\nimport { Icon } from \"../src/components/Icon\";\nimport { SegmentedControl } from \"../src/components/SegmentedControl\";\nimport { Path, Svg } from \"../src/components/Svg\";\nimport { TabView } from \"../src/components/TabView\";\nimport { StoryBlock } from \"./_StoriesComponents\";\n\nexport default {\n  title: \"Interactivity/SegmentedControl\",\n  component: TabView,\n} as Meta<typeof TabView>;\n\nconst icon = (\n  <Svg height={20} viewBox=\"0 0 256 159\">\n    <Path fill=\"#FF5F00\" d=\"M162.448 16.903h-69.15v124.251h69.15V16.904z\" />\n\n    <Path\n      fill=\"#EB001B\"\n      d=\"M97.689 79.029c0-25.245 11.854-47.637 30.074-62.126C114.372 6.366 97.469 0 79.029 0 35.344 0 0 35.343 0 79.029c0 43.685 35.343 79.029 79.029 79.029 18.44 0 35.343-6.366 48.734-16.904-18.22-14.269-30.075-36.88-30.075-62.125z\"\n    />\n\n    <Path\n      fill=\"#F79E1B\"\n      d=\"M255.746 79.029c0 43.685-35.343 79.029-79.029 79.029-18.44 0-35.343-6.366-48.734-16.904 18.44-14.488 30.075-36.88 30.075-62.125 0-25.245-11.855-47.637-30.075-62.126C141.374 6.366 158.277 0 176.717 0c43.686 0 79.029 35.563 79.029 79.029z\"\n    />\n  </Svg>\n);\n\nconst items = [\n  { id: \"sct\", name: \"SEPA Credit Transfer\", icon: <Icon name=\"arrow-swap-regular\" size={24} /> },\n  {\n    id: \"check\",\n    name: \"Check\",\n    icon: <Icon name=\"check-regular\" size={24} />,\n    activeIcon: <Icon name=\"check-filled\" size={24} />,\n  },\n  { id: \"card\", name: \"Card\", icon },\n] as const;\n\ntype ItemId = (typeof items)[number][\"id\"];\n\nexport const Default = () => {\n  const [selected, setSelected] = useState<ItemId>(items[0].id);\n\n  return (\n    <StoryBlock\n      title=\"Segmented control\"\n      description=\"You can reduce window's width to see behavior when there isn't enough space to display all controls\"\n    >\n      <SegmentedControl selected={selected} items={items} onValueChange={setSelected} />\n    </StoryBlock>\n  );\n};\n"],"names":["styles","StyleSheet","spacings","colors","radii","backgroundColor","texts","SegmentedControl","selected","items","onValueChange","minItemWidth","selectedItemIndex","item","selectedItem","pressed","setPressed","useState","jsx","ResponsiveContainer","small","jsxs","Box","Pressable","isNotNullish","match","P","Space","LakeText","BottomPanel","Icon","LakeButton","View","Fragment","SegmentedControl_stories","title","component","TabView","icon","Svg","Path","id","name","activeIcon","Default","setSelected","StoryBlock"],"mappings":"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"}