{"version":3,"file":"RIB.stories-826f0215.js","sources":["../../../packages/shared-business/src/components/RIB.tsx"],"sourcesContent":["import { Box } from \"@swan-io/lake/src/components/Box\";\nimport { Fill } from \"@swan-io/lake/src/components/Fill\";\nimport { LakeHeading } from \"@swan-io/lake/src/components/LakeHeading\";\nimport { Separator } from \"@swan-io/lake/src/components/Separator\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport { SwanLogo } from \"@swan-io/lake/src/components/SwanLogo\";\nimport { WithPartnerAccentColor } from \"@swan-io/lake/src/components/WithPartnerAccentColor\";\nimport {\n  colors,\n  fonts,\n  interFontStyle,\n  invariantColors,\n  radii,\n  spacings,\n} from \"@swan-io/lake/src/constants/design\";\nimport { isNotNullishOrEmpty } from \"@swan-io/lake/src/utils/nullish\";\nimport { CSSProperties } from \"react\";\nimport { StyleProp, StyleSheet, Text, TextStyle, View } from \"react-native\";\nimport { match } from \"ts-pattern\";\nimport { t } from \"../utils/i18n\";\n\nconst LOGO_MAX_HEIGHT = 26;\nconst LOGO_MAX_WIDTH = 200;\n\nconst imageStyle: CSSProperties = {\n  objectFit: \"contain\",\n  objectPosition: \"left\",\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 470,\n    borderRadius: radii[8],\n    backgroundColor: invariantColors.white,\n    borderWidth: 1,\n    borderColor: colors.gray[100],\n  },\n  part: {\n    padding: spacings[24],\n  },\n  label: {\n    ...interFontStyle,\n    fontSize: 10,\n  },\n  labelPartner: {\n    color: colors.partner[500],\n    fontWeight: \"500\",\n  },\n  mainInfo: {\n    fontFamily: fonts.iban,\n    fontSize: 12,\n    color: colors.gray[900],\n  },\n  smallInfo: {\n    fontFamily: fonts.iban,\n    fontSize: 10,\n    color: colors.gray[900],\n  },\n  addressInfo: {\n    ...interFontStyle,\n    fontSize: 12,\n    color: colors.gray[900],\n  },\n  partnershipText: {\n    ...interFontStyle,\n    fontSize: 8,\n    color: colors.gray[500],\n  },\n  defaultLogo: {\n    height: LOGO_MAX_HEIGHT,\n    width: 115,\n  },\n  swanLogo: {\n    width: 26,\n    height: 6,\n  },\n});\n\ntype Address = {\n  name: string;\n  address: string;\n  zipCode: string;\n  city: string;\n  country: string;\n};\n\ntype RIBv1Props = {\n  version: \"v1\";\n  partnerColor: string;\n  partnerLogoUrl?: string;\n  iban: string;\n  bic: string;\n  bankAddress: Address;\n  accountHolderAddress: Address;\n} & (\n  | {\n      accountCountry: \"FRA\";\n      bank: string;\n      agency: string;\n      bankNumber: string;\n      bankKey: string;\n    }\n  | {\n      accountCountry: \"DEU\";\n      bank: string;\n      accountNumber: string;\n    }\n  | {\n      accountCountry: \"ESP\";\n      bank: string;\n      agency: string;\n      nationalCode: string;\n      bankNumber: string;\n    }\n);\n\nexport type RIBProps = RIBv1Props;\n\nexport const RIB = (props: RIBProps) =>\n  match(props)\n    .with({ version: \"v1\" }, props => <RIBv1 {...props} />)\n    .exhaustive();\n\nconst RIBv1 = (props: RIBProps) => {\n  const { partnerColor, partnerLogoUrl, iban, bic, bankAddress, accountHolderAddress } = props;\n\n  return (\n    <WithPartnerAccentColor color={partnerColor}>\n      <View style={styles.container}>\n        <View style={styles.part}>\n          <Box direction=\"row\" alignItems=\"center\">\n            {isNotNullishOrEmpty(partnerLogoUrl) ? (\n              <img\n                src={partnerLogoUrl}\n                width={LOGO_MAX_WIDTH}\n                height={LOGO_MAX_HEIGHT}\n                style={imageStyle}\n              />\n            ) : (\n              <SwanLogo style={styles.defaultLogo} />\n            )}\n\n            <Fill minWidth={24} />\n\n            <LakeHeading level={2} variant=\"h3\" color={colors.gray[900]}>\n              {t(\"rib.bankDetails\")}\n            </LakeHeading>\n          </Box>\n\n          <Space height={24} />\n\n          <Box direction=\"row\" alignItems=\"center\">\n            <RibValue type=\"mainInfo\" color=\"partner\" label={t(\"rib.iban\")} value={iban} />\n            <Space width={24} />\n            <RibValue type=\"mainInfo\" color=\"partner\" label={t(\"rib.bic\")} value={bic} />\n          </Box>\n\n          <Space height={8} />\n\n          <Box direction=\"row\" alignItems=\"center\">\n            {match(props)\n              .with({ accountCountry: \"FRA\" }, ({ bank, agency, bankNumber, bankKey }) => (\n                <>\n                  <RibValue type=\"smallInfo\" color=\"gray\" label={t(\"rib.bank\")} value={bank} />\n                  <Space width={24} />\n                  <RibValue type=\"smallInfo\" color=\"gray\" label={t(\"rib.agency\")} value={agency} />\n                  <Space width={24} />\n\n                  <RibValue\n                    type=\"smallInfo\"\n                    color=\"gray\"\n                    label={t(\"rib.number\")}\n                    value={bankNumber}\n                  />\n\n                  <Space width={24} />\n                  <RibValue type=\"smallInfo\" color=\"gray\" label={t(\"rib.key\")} value={bankKey} />\n                </>\n              ))\n              .with({ accountCountry: \"DEU\" }, ({ bank, accountNumber }) => (\n                <>\n                  <RibValue type=\"smallInfo\" color=\"gray\" label={t(\"rib.bank\")} value={bank} />\n                  <Space width={24} />\n\n                  <RibValue\n                    type=\"smallInfo\"\n                    color=\"gray\"\n                    label={t(\"rib.accountNumber\")}\n                    value={accountNumber}\n                  />\n                </>\n              ))\n              .with({ accountCountry: \"ESP\" }, ({ bank, agency, nationalCode, bankNumber }) => (\n                <>\n                  <RibValue type=\"smallInfo\" color=\"gray\" label={t(\"rib.bank\")} value={bank} />\n                  <Space width={24} />\n                  <RibValue type=\"smallInfo\" color=\"gray\" label={t(\"rib.agency\")} value={agency} />\n                  <Space width={24} />\n\n                  <RibValue\n                    type=\"smallInfo\"\n                    color=\"gray\"\n                    label={t(\"rib.nationalCode\")}\n                    value={nationalCode}\n                  />\n\n                  <Space width={24} />\n\n                  <RibValue\n                    type=\"smallInfo\"\n                    color=\"gray\"\n                    label={t(\"rib.number\")}\n                    value={bankNumber}\n                  />\n                </>\n              ))\n              .exhaustive()}\n          </Box>\n        </View>\n\n        <Separator />\n\n        <View style={styles.part}>\n          <Box direction=\"row\" alignItems=\"center\">\n            <RibValue\n              type=\"addressInfo\"\n              color=\"partner\"\n              label={t(\"rib.address\")}\n              value={[\n                bankAddress.name,\n                bankAddress.address,\n                `${bankAddress.zipCode} ${bankAddress.city}`,\n                bankAddress.country,\n              ]}\n            />\n\n            <Space width={24} />\n\n            <RibValue\n              type=\"addressInfo\"\n              color=\"partner\"\n              label={t(\"rib.accountHolder\")}\n              value={[\n                accountHolderAddress.name,\n                accountHolderAddress.address,\n                `${accountHolderAddress.zipCode} ${accountHolderAddress.city}`,\n                accountHolderAddress.country,\n              ]}\n            />\n          </Box>\n\n          <Space height={12} />\n\n          <Box direction=\"row\" alignItems=\"center\">\n            <Text style={styles.partnershipText}>{t(\"rib.partnership\")}</Text>\n            <Space width={4} />\n            <SwanLogo color={colors.gray[900]} style={styles.swanLogo} />\n          </Box>\n        </View>\n      </View>\n    </WithPartnerAccentColor>\n  );\n};\n\ntype RibValueProps = {\n  type: \"mainInfo\" | \"smallInfo\" | \"addressInfo\";\n  color: \"partner\" | \"gray\";\n  label: string;\n  value: string | string[];\n};\n\nconst ribValueStyle: Record<RibValueProps[\"type\"], StyleProp<TextStyle>> = {\n  mainInfo: styles.mainInfo,\n  smallInfo: styles.smallInfo,\n  addressInfo: styles.addressInfo,\n};\n\nconst RibValue = ({ type, color, label, value }: RibValueProps) => {\n  const lines = Array.isArray(value) ? value : [value];\n\n  return (\n    <View>\n      <Text style={[styles.label, color === \"partner\" && styles.labelPartner]}>{label}</Text>\n      <Space height={4} />\n\n      {lines.map((line, index) => (\n        <Text key={index} style={ribValueStyle[type]}>\n          {line}\n        </Text>\n      ))}\n    </View>\n  );\n};\n"],"names":["LOGO_MAX_HEIGHT","LOGO_MAX_WIDTH","imageStyle","styles","StyleSheet","radii","invariantColors","colors","spacings","interFontStyle","fonts","RIB","props","match","props2","jsx","RIBv1","partnerColor","partnerLogoUrl","iban","bic","bankAddress","accountHolderAddress","WithPartnerAccentColor","jsxs","View","Box","isNotNullishOrEmpty","SwanLogo","Fill","LakeHeading","t","Space","RibValue","bank","agency","bankNumber","bankKey","Fragment","accountNumber","nationalCode","Separator","Text","ribValueStyle","type","color","label","value","lines","line","index"],"mappings":"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"}