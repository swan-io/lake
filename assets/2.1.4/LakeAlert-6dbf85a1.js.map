{"version":3,"file":"LakeAlert-6dbf85a1.js","sources":["../../../packages/lake/src/components/LakeAlert.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\nimport { commonStyles } from \"../constants/commonStyles\";\nimport { colors, shadows } from \"../constants/design\";\nimport { isNotNullish, isNotNullishOrEmpty } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { Icon, IconName } from \"./Icon\";\nimport { LakeText } from \"./LakeText\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  base: {\n    paddingVertical: 20,\n    paddingHorizontal: 24,\n    borderRadius: 4,\n    borderWidth: 0.5,\n    borderLeftWidth: 4,\n    boxShadow: shadows.tile,\n  },\n  anchored: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderLeftWidth: 0.5,\n    marginHorizontal: -1,\n    marginBottom: -1,\n  },\n  content: {\n    marginLeft: 40,\n  },\n  callToAction: {\n    marginTop: -12,\n    marginBottom: -12,\n    marginRight: -12,\n    flexShrink: 0,\n  },\n});\n\ntype AlertVariant = \"info\" | \"warning\" | \"error\" | \"success\";\n\nconst alertIcon: Record<AlertVariant, IconName> = {\n  info: \"info-regular\",\n  warning: \"warning-regular\",\n  error: \"dismiss-circle-regular\",\n  success: \"checkmark-circle-regular\",\n};\n\nconst alertColor: Record<AlertVariant, string> = {\n  info: colors.shakespear[700],\n  warning: colors.warning[700],\n  error: colors.negative[700],\n  success: colors.positive[700],\n};\n\nconst alertBackground: Record<AlertVariant, string> = {\n  info: colors.shakespear[0],\n  warning: colors.warning[0],\n  error: colors.negative[0],\n  success: colors.positive[0],\n};\n\nconst alertBorder: Record<AlertVariant, string> = {\n  info: colors.shakespear[200],\n  warning: colors.warning[200],\n  error: colors.negative[200],\n  success: colors.positive[200],\n};\n\nconst alertLeftBorder: Record<AlertVariant, string> = {\n  info: colors.shakespear[500],\n  warning: colors.warning[500],\n  error: colors.negative[500],\n  success: colors.positive[500],\n};\n\ntype Props = {\n  anchored?: boolean;\n  variant: AlertVariant;\n  children?: ReactNode;\n  callToAction?: ReactNode;\n  title: ReactNode;\n  subtitle?: string;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst isText = (node: ReactNode): node is string | number =>\n  typeof node === \"string\" || typeof node === \"number\";\n\nexport const LakeAlert = ({\n  anchored = false,\n  variant,\n  title,\n  subtitle,\n  children,\n  style,\n  callToAction,\n}: Props) => {\n  const color = alertColor[variant];\n\n  return (\n    <View\n      style={[\n        styles.base,\n        { backgroundColor: alertBackground[variant], borderColor: alertBorder[variant] },\n        anchored ? styles.anchored : { borderLeftColor: alertLeftBorder[variant] },\n        style,\n      ]}\n    >\n      <Box direction=\"row\" alignItems=\"center\">\n        <Icon name={alertIcon[variant]} color={color} size={20} />\n        <Space width={20} />\n\n        <View style={commonStyles.fill}>\n          <LakeText color={color}>{title}</LakeText>\n\n          {isNotNullishOrEmpty(subtitle) && <LakeText color={color}>{subtitle}</LakeText>}\n        </View>\n\n        {isNotNullish(callToAction) && <View style={styles.callToAction}>{callToAction}</View>}\n      </Box>\n\n      {isNotNullish(children) && (\n        <View style={styles.content}>\n          <Space height={12} />\n\n          {isText(children) ? <LakeText>{children}</LakeText> : children}\n        </View>\n      )}\n    </View>\n  );\n};\n"],"names":["styles","StyleSheet","shadows","alertIcon","alertColor","colors","alertBackground","alertBorder","alertLeftBorder","isText","node","LakeAlert","anchored","variant","title","subtitle","children","style","callToAction","color","jsxs","View","Box","jsx","Icon","Space","commonStyles","LakeText","isNotNullishOrEmpty","isNotNullish"],"mappings":"qOAUA,MAAAA,EAAAC,EAAA,OAAA,CAAiC,KAAA,CACzB,gBAAA,GACa,kBAAA,GACE,aAAA,EACL,YAAA,GACD,gBAAA,EACI,UAAAC,EAAA,IACE,EACrB,SAAA,CACU,oBAAA,EACa,qBAAA,EACC,gBAAA,GACL,iBAAA,GACC,aAAA,EACJ,EAChB,QAAA,CACS,WAAA,EACK,EACd,aAAA,CACc,UAAA,IACD,aAAA,IACG,YAAA,IACD,WAAA,CACD,CAEhB,CAAA,EAIAC,EAAA,CAAkD,KAAA,eAC1C,QAAA,kBACG,MAAA,yBACF,QAAA,0BAET,EAEAC,EAAA,CAAiD,KAAAC,EAAA,WAAA,GAAA,EACpB,QAAAA,EAAA,QAAA,GAAA,EACA,MAAAA,EAAA,SAAA,GAAA,EACD,QAAAA,EAAA,SAAA,GAAA,CAE5B,EAEAC,EAAA,CAAsD,KAAAD,EAAA,WAAA,CAAA,EAC3B,QAAAA,EAAA,QAAA,CAAA,EACA,MAAAA,EAAA,SAAA,CAAA,EACD,QAAAA,EAAA,SAAA,CAAA,CAE1B,EAEAE,EAAA,CAAkD,KAAAF,EAAA,WAAA,GAAA,EACrB,QAAAA,EAAA,QAAA,GAAA,EACA,MAAAA,EAAA,SAAA,GAAA,EACD,QAAAA,EAAA,SAAA,GAAA,CAE5B,EAEAG,EAAA,CAAsD,KAAAH,EAAA,WAAA,GAAA,EACzB,QAAAA,EAAA,QAAA,GAAA,EACA,MAAAA,EAAA,SAAA,GAAA,EACD,QAAAA,EAAA,SAAA,GAAA,CAE5B,EAYAI,EAAAC,GAAA,OAAAA,GAAA,UAAA,OAAAA,GAAA,SAGOC,EAAA,CAAA,CAAmB,SAAAC,EAAA,GACb,QAAAC,EACX,MAAAC,EACA,SAAAC,EACA,SAAAC,EACA,MAAAC,EACA,aAAAC,CAEF,IAAA,CACE,MAAAC,EAAAf,EAAAS,CAAA,EAEA,OAAAO,EACEC,EAAC,CAAA,MAAA,CACQrB,EAAA,KACE,CAAA,gBAAAM,EAAAO,CAAA,EAAA,YAAAN,EAAAM,CAAA,CAAA,EACwED,EAAAZ,EAAA,SAAA,CAAA,gBAAAQ,EAAAK,CAAA,CAAA,EACNI,CACzE,EACF,SAAA,CAEAG,EAAAE,EAAA,CAAA,UAAA,MAAA,WAAA,SAAA,SAAA,CACEC,EAAAC,EAAA,CAAA,KAAArB,EAAAU,CAAA,EAAA,MAAAM,EAAA,KAAA,GAAA,EAAwDI,EAAAE,EAAA,CAAA,MAAA,EAAA,CAAA,EACtCL,EAAAC,EAAA,CAAA,MAAAK,EAAA,KAAA,SAAA,CAGhBH,EAAAI,EAAA,CAAA,MAAAR,EAAA,SAAAL,CAAA,CAAA,EAA+Bc,EAAAb,CAAA,GAAAQ,EAAAI,EAAA,CAAA,MAAAR,EAAA,SAAAJ,EAAA,CAEqC,EAAA,EACtEc,EAAAX,CAAA,GAAAK,EAAAF,EAAA,CAAA,MAAArB,EAAA,aAAA,SAAAkB,EAAA,CAE+E,EAAA,EACjFW,EAAAb,CAAA,GAAAI,EAAAC,EAAA,CAAA,MAAArB,EAAA,QAAA,SAAA,CAIIuB,EAAAE,EAAA,CAAA,OAAA,EAAA,CAAA,EAAmBhB,EAAAO,CAAA,EAAAO,EAAAI,EAAA,CAAA,SAAAX,CAAA,CAAA,EAAAA,CAEmC,EAAA,CACxD,CAAA,CAAA,CAIR"}