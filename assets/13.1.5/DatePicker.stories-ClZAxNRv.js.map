{"version":3,"file":"DatePicker.stories-ClZAxNRv.js","sources":["../../../node_modules/@swan-io/use-form/dist/index.mjs","../../../packages/shared-business/src/utils/localization.ts","../../../packages/shared-business/src/components/InlineDatePicker.tsx","../../../packages/shared-business/src/components/BirthdatePicker.tsx","../../../packages/lake/src/hooks/useFirstMountState.ts","../../../packages/shared-business/src/components/DatePicker.tsx","../../../packages/shared-business/__stories__/DatePicker.stories.tsx"],"sourcesContent":["import { Dict, Option, Future } from '@swan-io/boxed';\nimport { useReducer, useRef, useEffect, useMemo, useSyncExternalStore } from 'react';\n\n// src/combineValidators.ts\nvar combineValidators = (...validators) => (value) => {\n  const [validator, ...nextValidators] = validators;\n  if (validator != null && validator !== false) {\n    const result = validator(value);\n    if (typeof result !== \"undefined\") {\n      return result;\n    }\n  }\n  if (nextValidators.length > 0) {\n    return combineValidators(...nextValidators)(value);\n  }\n};\n\n// src/helpers.ts\nvar identity = (value) => value;\nvar noop = () => {\n};\nvar isEmptyString = (value) => value === \"\";\nvar isPromise = (value) => !!value && (typeof value === \"object\" || typeof value === \"function\") && typeof value.then === \"function\";\n\n// src/toOptionalValidator.ts\nvar toOptionalValidator = (validator, ...args) => (value) => {\n  const [isEmptyValue = isEmptyString] = args;\n  if (!isEmptyValue(value)) {\n    return validator(value);\n  }\n};\nvar useForm = (config) => {\n  var _a, _b;\n  const [, forceUpdate] = useReducer(() => [], []);\n  const mounted = useRef(false);\n  const formStatus = useRef(\"untouched\");\n  const arg = useRef(config);\n  arg.current = config;\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  const fields = useRef();\n  const field = useRef();\n  const fieldsListener = useRef();\n  const api = useMemo(() => {\n    const getIsEqual = (name) => {\n      var _a2;\n      return (_a2 = arg.current[name].isEqual) != null ? _a2 : Object.is;\n    };\n    const getInitialValue = (name) => arg.current[name].initialValue;\n    const getSanitize = (name) => {\n      var _a2;\n      return (_a2 = arg.current[name].sanitize) != null ? _a2 : identity;\n    };\n    const getStrategy = (name) => {\n      var _a2;\n      return (_a2 = arg.current[name].strategy) != null ? _a2 : \"onSuccessOrBlur\";\n    };\n    const getValidate = (name) => {\n      var _a2;\n      return (_a2 = arg.current[name].validate) != null ? _a2 : noop;\n    };\n    const isMounted = (name) => fields.current[name].mounted;\n    const isTalkative = (name) => fields.current[name].state.talkative;\n    const setState = (name, state) => {\n      fields.current[name].state = typeof state === \"function\" ? state(fields.current[name].state) : state;\n    };\n    const getFieldState = (name) => {\n      const { talkative, value, validity } = fields.current[name].state;\n      if (!talkative || validity.tag === \"unknown\") {\n        return { value, valid: false, error: void 0 };\n      }\n      const sanitize = getSanitize(name);\n      const isEqual = getIsEqual(name);\n      return {\n        value,\n        valid: validity.tag === \"valid\" && !isEqual(sanitize(getInitialValue(name)), sanitize(value)),\n        error: validity.tag === \"invalid\" ? validity.error : void 0\n      };\n    };\n    const runRenderCallbacks = (name) => {\n      fields.current[name].callbacks.forEach((callback) => callback());\n    };\n    const setTalkative = (name, strategies) => {\n      const strategy = getStrategy(name);\n      if (!strategies || strategies.some((item) => strategy === item)) {\n        setState(name, (prevState) => ({\n          ...prevState,\n          talkative: true\n        }));\n      }\n    };\n    const getValidity = (error) => typeof error === \"undefined\" ? { tag: \"valid\" } : { tag: \"invalid\", error };\n    const getFieldValue = (name, options = {}) => {\n      const { sanitize = false } = options;\n      const value = fields.current[name] == null ? getInitialValue(name) : fields.current[name].state.value;\n      return sanitize ? getSanitize(name)(value) : value;\n    };\n    const getFieldRef = (name) => {\n      const { ref } = fields.current[name];\n      return ref;\n    };\n    const focusField = (name) => {\n      const { ref } = fields.current[name];\n      if (ref.current && typeof ref.current.focus === \"function\") {\n        ref.current.focus();\n      }\n    };\n    const internalValidateField = (name) => {\n      const validate = getValidate(name);\n      const value = getFieldValue(name, { sanitize: true });\n      const error = validate(value, { getFieldValue, focusField });\n      if (error === void 0) {\n        setTalkative(name, [\"onSuccess\", \"onSuccessOrBlur\"]);\n      }\n      setState(name, (prevState) => ({\n        ...prevState,\n        validity: getValidity(error)\n      }));\n      runRenderCallbacks(name);\n      return error;\n    };\n    const setFieldValue = (name, value, options = {}) => {\n      const { validate = false } = options;\n      setState(name, (prevState) => ({\n        ...prevState,\n        value\n      }));\n      if (validate) {\n        setTalkative(name);\n      }\n      void internalValidateField(name);\n    };\n    const setFieldError = (name, error) => {\n      setState(name, (prevState) => ({\n        ...prevState,\n        validity: getValidity(error)\n      }));\n      setTalkative(name);\n      runRenderCallbacks(name);\n    };\n    const resetField = (name) => {\n      setState(name, {\n        value: getInitialValue(name),\n        talkative: false,\n        validity: { tag: \"unknown\" }\n      });\n      runRenderCallbacks(name);\n    };\n    const sanitizeField = (name) => {\n      const sanitize = getSanitize(name);\n      setState(name, ({ talkative, value, validity }) => ({\n        value: sanitize(value),\n        talkative,\n        validity\n      }));\n      runRenderCallbacks(name);\n    };\n    const validateField = (name) => {\n      if (!isMounted(name)) {\n        return void 0;\n      }\n      setTalkative(name);\n      return internalValidateField(name);\n    };\n    const listenFields = (names, listener) => {\n      const callback = () => {\n        listener(\n          names.reduce(\n            (acc, name) => {\n              acc[name] = getFieldState(name);\n              return acc;\n            },\n            {}\n          )\n        );\n      };\n      names.forEach((name) => fields.current[name].callbacks.add(callback));\n      return () => {\n        names.forEach((name) => {\n          if (fields.current[name] != null) {\n            fields.current[name].callbacks.delete(callback);\n          }\n        });\n      };\n    };\n    const getOnChange = (name) => (value) => {\n      setState(name, (prevState) => ({\n        ...prevState,\n        value\n      }));\n      setTalkative(name, [\"onChange\"]);\n      if (formStatus.current === \"untouched\" || formStatus.current === \"submitted\") {\n        formStatus.current = \"editing\";\n        forceUpdate();\n      }\n      void internalValidateField(name);\n    };\n    const getOnBlur = (name) => () => {\n      const { validity } = fields.current[name].state;\n      if (validity.tag !== \"unknown\" && !isTalkative(name)) {\n        setTalkative(name, [\"onBlur\", \"onSuccessOrBlur\"]);\n        void internalValidateField(name);\n      }\n    };\n    const resetForm = () => {\n      Dict.keys(arg.current).forEach((name) => resetField(name));\n      formStatus.current = \"untouched\";\n      forceUpdate();\n    };\n    const focusFirstError = (names, results) => {\n      const index = results.findIndex((result) => typeof result !== \"undefined\");\n      const name = names[index];\n      if (typeof name !== \"undefined\") {\n        focusField(name);\n      }\n    };\n    const isSuccessfulSubmission = (results) => results.every((result) => typeof result === \"undefined\");\n    const setFormSubmitted = () => {\n      formStatus.current = \"submitted\";\n      if (mounted.current) {\n        forceUpdate();\n      }\n    };\n    const submitForm = ({\n      onSuccess = noop,\n      onFailure = noop,\n      focusOnFirstError = true\n    } = {}) => {\n      if (formStatus.current === \"submitting\") {\n        return;\n      }\n      formStatus.current = \"submitting\";\n      const keys = Dict.keys(fields.current);\n      const names = keys.filter((name) => fields.current[name].mounted);\n      const values = {};\n      const errors = {};\n      const results = [];\n      keys.forEach((name) => {\n        values[name] = Option.None();\n      });\n      names.forEach((name, index) => {\n        setTalkative(name);\n        values[name] = Option.Some(getFieldValue(name, { sanitize: true }));\n        results[index] = internalValidateField(name);\n      });\n      if (isSuccessfulSubmission(results)) {\n        const effect = onSuccess(values);\n        const promiseEffect = Future.isFuture(effect) ? effect.toPromise() : effect;\n        if (isPromise(promiseEffect)) {\n          forceUpdate();\n          void promiseEffect.finally(setFormSubmitted);\n        } else {\n          setFormSubmitted();\n        }\n      } else {\n        if (focusOnFirstError) {\n          focusFirstError(names, results);\n        }\n        names.forEach((name, index) => {\n          errors[name] = results[index];\n        });\n        onFailure(errors);\n        formStatus.current = \"submitted\";\n        forceUpdate();\n      }\n    };\n    return {\n      getFieldValue,\n      getFieldRef,\n      setFieldValue,\n      setFieldError,\n      focusField,\n      resetField,\n      sanitizeField,\n      validateField,\n      listenFields,\n      resetForm,\n      submitForm,\n      getOnChange,\n      getOnBlur,\n      getFieldState\n    };\n  }, []);\n  const tmp = {};\n  for (const name in arg.current) {\n    if (Object.prototype.hasOwnProperty.call(arg.current, name)) {\n      tmp[name] = (_b = (_a = fields.current) == null ? void 0 : _a[name]) != null ? _b : {\n        callbacks: /* @__PURE__ */ new Set(),\n        ref: { current: null },\n        mounted: false,\n        state: {\n          value: arg.current[name].initialValue,\n          talkative: false,\n          validity: { tag: \"unknown\" }\n        }\n      };\n    }\n  }\n  fields.current = tmp;\n  if (!field.current) {\n    const Field = ({ name, children }) => {\n      const { subscribe, getSnapshot } = useMemo(\n        () => ({\n          getSnapshot: () => fields.current[name].state,\n          subscribe: (callback) => {\n            fields.current[name].callbacks.add(callback);\n            return () => {\n              if (fields.current[name] != null) {\n                fields.current[name].callbacks.delete(callback);\n              }\n            };\n          }\n        }),\n        [name]\n      );\n      useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n      useEffect(() => {\n        const isFirstMounting = !fields.current[name].mounted;\n        if (isFirstMounting) {\n          fields.current[name].mounted = true;\n        } else {\n          if (process.env.NODE_ENV === \"development\") {\n            console.error(\n              \"Mounting multiple fields with identical names is not supported and will lead to errors\"\n            );\n          }\n        }\n        return () => {\n          if (isFirstMounting) {\n            if (fields.current[name] != null) {\n              fields.current[name].mounted = false;\n            }\n          }\n        };\n      }, [name]);\n      return children({\n        ...api.getFieldState(name),\n        ref: fields.current[name].ref,\n        onBlur: useMemo(() => api.getOnBlur(name), [name]),\n        onChange: useMemo(() => api.getOnChange(name), [name])\n      });\n    };\n    Field.displayName = \"Field\";\n    field.current = Field;\n    const FieldsListener = ({ names, children }) => {\n      const { subscribe, getSnapshot } = useMemo(\n        () => ({\n          getSnapshot: () => JSON.stringify(names.map((name) => fields.current[name].state)),\n          subscribe: (callback) => {\n            names.forEach((name) => fields.current[name].callbacks.add(callback));\n            return () => {\n              names.forEach((name) => fields.current[name].callbacks.delete(callback));\n            };\n          }\n        }),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [JSON.stringify(names)]\n      );\n      useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n      return children(\n        names.reduce(\n          (acc, name) => {\n            acc[name] = api.getFieldState(name);\n            return acc;\n          },\n          {}\n        )\n      );\n    };\n    FieldsListener.displayName = \"FieldsListener\";\n    fieldsListener.current = FieldsListener;\n  }\n  return {\n    formStatus: formStatus.current,\n    Field: field.current,\n    FieldsListener: fieldsListener.current,\n    getFieldValue: api.getFieldValue,\n    getFieldRef: api.getFieldRef,\n    setFieldValue: api.setFieldValue,\n    setFieldError: api.setFieldError,\n    focusField: api.focusField,\n    resetField: api.resetField,\n    sanitizeField: api.sanitizeField,\n    validateField: api.validateField,\n    listenFields: api.listenFields,\n    resetForm: api.resetForm,\n    submitForm: api.submitForm\n  };\n};\n\nexport { combineValidators, toOptionalValidator, useForm };\n//# sourceMappingURL=out.js.map\n//# sourceMappingURL=index.mjs.map","import { Country, france, getCountryByCCA2, isCountryCCA2 } from \"../constants/countries\";\n\nexport const getMostLikelyUserCountry = (): Country => {\n  const countries = navigator.languages.map(language => language.split(\"-\")[1]);\n\n  for (const country of countries) {\n    if (isCountryCCA2(country)) {\n      return getCountryByCCA2(country);\n    }\n  }\n\n  // fallback to france when no valid country found in navigator locales\n  return france;\n};\n","import { Box } from \"@swan-io/lake/src/components/Box\";\nimport { InputError } from \"@swan-io/lake/src/components/InputError\";\nimport { LakeLabel } from \"@swan-io/lake/src/components/LakeLabel\";\nimport { LakeSelect } from \"@swan-io/lake/src/components/LakeSelect\";\nimport { LakeTextInput } from \"@swan-io/lake/src/components/LakeTextInput\";\nimport { Stack } from \"@swan-io/lake/src/components/Stack\";\nimport { breakpoints, colors } from \"@swan-io/lake/src/constants/design\";\nimport { useResponsive } from \"@swan-io/lake/src/hooks/useResponsive\";\nimport { isNotNullish, isNullish } from \"@swan-io/lake/src/utils/nullish\";\nimport { useForm } from \"@swan-io/use-form\";\nimport { useRef } from \"react\";\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\nimport { match } from \"ts-pattern\";\nimport { extractDate, ExtractedDate, formatExtractedDate } from \"../utils/date\";\nimport { t } from \"../utils/i18n\";\nimport { getMostLikelyUserCountry } from \"../utils/localization\";\nimport { validateDate } from \"../utils/validation\";\n\nconst months = [\n  { value: \"01\", name: t(\"datePicker.month.january\") },\n  { value: \"02\", name: t(\"datePicker.month.february\") },\n  { value: \"03\", name: t(\"datePicker.month.march\") },\n  { value: \"04\", name: t(\"datePicker.month.april\") },\n  { value: \"05\", name: t(\"datePicker.month.may\") },\n  { value: \"06\", name: t(\"datePicker.month.june\") },\n  { value: \"07\", name: t(\"datePicker.month.july\") },\n  { value: \"08\", name: t(\"datePicker.month.august\") },\n  { value: \"09\", name: t(\"datePicker.month.september\") },\n  { value: \"10\", name: t(\"datePicker.month.october\") },\n  { value: \"11\", name: t(\"datePicker.month.november\") },\n  { value: \"12\", name: t(\"datePicker.month.december\") },\n];\n\nconst styles = StyleSheet.create({\n  container: { paddingTop: 6 },\n  dayMobile: {\n    maxWidth: 70,\n    flexGrow: 0,\n  },\n  day: {\n    maxWidth: 90,\n    flexGrow: 0,\n  },\n  yearMobile: {\n    maxWidth: 80,\n    flexGrow: 0,\n  },\n  year: {\n    maxWidth: 120,\n    flexGrow: 0,\n  },\n  error: {\n    borderColor: colors.negative[400],\n  },\n});\n\nexport type InlineDatePickerProps = {\n  label: string;\n  value: string | undefined;\n  error?: string;\n  onValueChange?: (value: string | undefined) => void;\n  style?: StyleProp<ViewStyle>;\n  readOnly?: boolean;\n  validate?: (value: ExtractedDate | undefined) => string | undefined;\n};\n\n// https://en.wikipedia.org/wiki/List_of_date_formats_by_country\nconst order = match(getMostLikelyUserCountry().cca2)\n  .returnType<\"DMY\" | \"MDY\" | \"YMD\">()\n  .with(\"US\", () => \"MDY\")\n  .with(\"CN\", \"JP\", \"KR\", \"KP\", \"TW\", \"HU\", \"MN\", \"LT\", \"BT\", () => \"YMD\")\n  .otherwise(() => \"DMY\");\n\nexport const InlineDatePicker = ({\n  value,\n  label,\n  readOnly = false,\n  onValueChange,\n  validate = validateDate,\n  error: externalError,\n  style,\n}: InlineDatePickerProps) => {\n  const { desktop } = useResponsive(breakpoints.small);\n\n  // We can't rely on blurred, since 3 inputs / select are mapped on\n  // 1 field. The first onBlur update the field internal state from\n  // not blurred -> blurred, then when the second input is blurred,\n  // validate will not be triggered again since the field has already\n  // blurred = true\n  const touched = useRef(new Set<\"day\" | \"month\" | \"year\">());\n  const mountWithInitialValue = useRef(value != null);\n\n  const { Field, validateField } = useForm({\n    date: {\n      initialValue: isNotNullish(value) ? extractDate(value) : undefined,\n      sanitize: date =>\n        isNotNullish(date)\n          ? {\n              day: date.day.trim(),\n              month: date.month.trim(),\n              year: date.year.trim(),\n            }\n          : undefined,\n      strategy: \"onSubmit\",\n      validate: date => {\n        const errorMessage = validate(date);\n\n        if (isNullish(errorMessage) && isNotNullish(date)) {\n          return onValueChange?.(formatExtractedDate(date));\n        } else {\n          onValueChange?.(undefined);\n          return errorMessage;\n        }\n      },\n    },\n  });\n\n  const validateDate = () => {\n    if (\n      mountWithInitialValue.current ||\n      (touched.current.has(\"day\") && touched.current.has(\"month\") && touched.current.has(\"year\"))\n    ) {\n      validateField(\"date\");\n    }\n  };\n\n  return (\n    <View style={[styles.container, style]}>\n      <Field name=\"date\">\n        {({ error, onChange, value }) => (\n          <LakeLabel\n            label={label}\n            render={id => {\n              const day = (\n                <View style={desktop ? styles.day : styles.dayMobile}>\n                  <LakeTextInput\n                    id={id}\n                    readOnly={readOnly}\n                    style={(isNotNullish(error) || isNotNullish(externalError)) && styles.error}\n                    placeholder={t(\"datePicker.day\")}\n                    value={value?.day ?? undefined}\n                    onBlur={() => {\n                      touched.current.add(\"day\");\n                      validateDate();\n                    }}\n                    hideErrors={true}\n                    onChangeText={day => {\n                      onChange({\n                        day,\n                        month: value?.month ?? \"\",\n                        year: value?.year ?? \"\",\n                      });\n                    }}\n                    pattern=\"[0-9]\"\n                    maxLength={2}\n                    autoComplete=\"bday-day\"\n                  />\n                </View>\n              );\n\n              const month = (\n                <LakeSelect\n                  value={value?.month === \"\" ? undefined : value?.month}\n                  style={(isNotNullish(error) || isNotNullish(externalError)) && styles.error}\n                  readOnly={readOnly}\n                  placeholder={t(\"datePicker.month\")}\n                  hideErrors={true}\n                  items={months}\n                  onValueChange={month => {\n                    touched.current.add(\"month\");\n                    validateDate();\n\n                    onChange({\n                      day: value?.day ?? \"\",\n                      month,\n                      year: value?.year ?? \"\",\n                    });\n                  }}\n                />\n              );\n\n              const year = (\n                <View style={desktop ? styles.year : styles.yearMobile}>\n                  <LakeTextInput\n                    value={value?.year}\n                    style={(isNotNullish(error) || isNotNullish(externalError)) && styles.error}\n                    readOnly={readOnly}\n                    placeholder={t(\"datePicker.year\")}\n                    onBlur={() => {\n                      touched.current.add(\"year\");\n                      validateDate();\n                    }}\n                    hideErrors={true}\n                    onChangeText={year =>\n                      onChange({\n                        day: value?.day ?? \"\",\n                        month: value?.month ?? \"\",\n                        year,\n                      })\n                    }\n                    pattern=\"[0-9]\"\n                    maxLength={4}\n                    autoComplete=\"bday-year\"\n                  />\n                </View>\n              );\n\n              return (\n                <Box>\n                  {order === \"DMY\" ? (\n                    <Stack direction=\"row\" space={4}>\n                      {day} {month} {year}\n                    </Stack>\n                  ) : (\n                    <Stack direction=\"row\" space={4}>\n                      {month} {day} {year}\n                    </Stack>\n                  )}\n\n                  <InputError message={error ?? externalError} />\n                </Box>\n              );\n            }}\n          />\n        )}\n      </Field>\n    </View>\n  );\n};\n","import { StyleProp, ViewStyle } from \"react-native\";\nimport { validateBirthdate } from \"../utils/validation\";\nimport { InlineDatePicker } from \"./InlineDatePicker\";\n\nexport type BirthdatePickerProps = {\n  label: string;\n  value: string | undefined;\n  error?: string;\n  onValueChange?: (value: string | undefined) => void;\n  style?: StyleProp<ViewStyle>;\n  readOnly?: boolean;\n};\n\nexport const BirthdatePicker = ({\n  value,\n  label,\n  readOnly = false,\n  onValueChange,\n  error: externalError,\n  style,\n}: BirthdatePickerProps) => {\n  return (\n    <InlineDatePicker\n      value={value}\n      label={label}\n      readOnly={readOnly}\n      onValueChange={onValueChange}\n      error={externalError}\n      style={style}\n      validate={validateBirthdate}\n    />\n  );\n};\n","import { useRef } from \"react\";\n\nexport const useFirstMountState = (): boolean => {\n  const isFirstMount = useRef(true);\n\n  if (isFirstMount.current) {\n    isFirstMount.current = false;\n    return true;\n  }\n\n  return isFirstMount.current;\n};\n","import { Option } from \"@swan-io/boxed\";\nimport { BottomPanel } from \"@swan-io/lake/src/components/BottomPanel\";\nimport { Box } from \"@swan-io/lake/src/components/Box\";\nimport { Fill } from \"@swan-io/lake/src/components/Fill\";\nimport { Icon } from \"@swan-io/lake/src/components/Icon\";\nimport { LakeButton } from \"@swan-io/lake/src/components/LakeButton\";\nimport { LakeLabel } from \"@swan-io/lake/src/components/LakeLabel\";\nimport { Item, LakeSelect } from \"@swan-io/lake/src/components/LakeSelect\";\nimport { LakeText } from \"@swan-io/lake/src/components/LakeText\";\nimport { LakeTextInput } from \"@swan-io/lake/src/components/LakeTextInput\";\nimport { Popover } from \"@swan-io/lake/src/components/Popover\";\nimport { Pressable } from \"@swan-io/lake/src/components/Pressable\";\nimport { Separator } from \"@swan-io/lake/src/components/Separator\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport { colors, spacings } from \"@swan-io/lake/src/constants/design\";\nimport { useDisclosure } from \"@swan-io/lake/src/hooks/useDisclosure\";\nimport { useFirstMountState } from \"@swan-io/lake/src/hooks/useFirstMountState\";\nimport { useResponsive } from \"@swan-io/lake/src/hooks/useResponsive\";\nimport { noop } from \"@swan-io/lake/src/utils/function\";\nimport {\n  isNotEmpty,\n  isNotNullish,\n  isNotNullishOrEmpty,\n  isNullishOrEmpty,\n} from \"@swan-io/lake/src/utils/nullish\";\nimport { getRifmProps } from \"@swan-io/lake/src/utils/rifm\";\nimport { ValidatorResult, useForm } from \"@swan-io/use-form\";\nimport dayjs from \"dayjs\";\nimport { ReactNode, useCallback, useEffect, useId, useMemo, useRef, useState } from \"react\";\nimport { StyleSheet, TextInput, View } from \"react-native\";\nimport { Rifm } from \"rifm\";\nimport { P, match } from \"ts-pattern\";\nimport { Except } from \"type-fest\";\nimport { DateFormat, t } from \"../utils/i18n\";\nimport { LakeModal } from \"./LakeModal\";\n\nconst styles = StyleSheet.create({\n  label: {\n    flex: 1,\n  },\n  arrowContainer: {\n    height: 40, // input height\n  },\n  popover: {\n    padding: spacings[12],\n  },\n  popoverDesktop: {\n    padding: spacings[24],\n  },\n  rangeCalendarSide: {\n    flex: 1,\n  },\n  button: {\n    flex: 1,\n  },\n  monthSelect: {\n    width: 130,\n  },\n  yearSelect: {\n    width: 100,\n  },\n  weekRow: {\n    paddingVertical: spacings[4],\n  },\n  dayName: {\n    flex: 1,\n    height: 32,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  dayContainer: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  dayRangeIndicator: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    backgroundColor: colors.current[100],\n  },\n  dayStartRangeIndicator: {\n    left: \"50%\",\n  },\n  dayEndRangeIndicator: {\n    right: \"50%\",\n  },\n  dayNumber: {\n    width: 32,\n    height: 32,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 16,\n  },\n  dayNumberFocused: {},\n  dayNumberHover: {\n    backgroundColor: colors.current[100],\n  },\n  dayNumberPressed: {},\n  dayNumberSelected: {\n    backgroundColor: colors.current[500],\n  },\n  todayIndicator: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    bottom: 0,\n    width: 4,\n    height: 4,\n    marginHorizontal: \"auto\",\n    borderRadius: 2,\n    backgroundColor: colors.current[500],\n  },\n});\n\nconst MODALE_MOBILE_THRESHOLD = 600;\nconst DATE_PICKER_MOBILE_THRESHOLD = 400;\nconst DATE_RANGE_PICKER_THRESHOLD = 800;\n\nconst NB_DAYS_IN_WEEK = 7;\n\nexport type MonthNames = readonly [\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n  string,\n];\nexport type WeekDayNames = readonly [string, string, string, string, string, string, string];\n\nconst weekDayNames: WeekDayNames = [\n  t(\"datePicker.day.sunday\"),\n  t(\"datePicker.day.monday\"),\n  t(\"datePicker.day.tuesday\"),\n  t(\"datePicker.day.wednesday\"),\n  t(\"datePicker.day.thursday\"),\n  t(\"datePicker.day.friday\"),\n  t(\"datePicker.day.saturday\"),\n];\n\nconst monthNames: MonthNames = [\n  t(\"datePicker.month.january\"),\n  t(\"datePicker.month.february\"),\n  t(\"datePicker.month.march\"),\n  t(\"datePicker.month.april\"),\n  t(\"datePicker.month.may\"),\n  t(\"datePicker.month.june\"),\n  t(\"datePicker.month.july\"),\n  t(\"datePicker.month.august\"),\n  t(\"datePicker.month.september\"),\n  t(\"datePicker.month.october\"),\n  t(\"datePicker.month.november\"),\n  t(\"datePicker.month.december\"),\n];\n\ntype YearMonth = {\n  year: number;\n  month: number;\n};\n\nconst weekDayIndex = {\n  sunday: 0,\n  monday: 1,\n  tuesday: 2,\n  wednesday: 3,\n  thursday: 4,\n  friday: 5,\n  saturday: 6,\n};\n\nexport type DatePickerDate = {\n  day: number;\n  month: number;\n  year: number;\n};\n\nexport type DatePickerRange = {\n  start: Option<DatePickerDate>;\n  end: Option<DatePickerDate>;\n};\n\nconst rifmDateProps = getRifmProps({\n  accept: \"numeric\",\n  charMap: { 2: \"/\", 4: \"/\" },\n  maxLength: 8,\n});\n\nconst parseDate = (value: string, format: DateFormat): Option<DatePickerDate> => {\n  const date = dayjs.utc(value, format);\n  return date.isValid()\n    ? Option.Some({ day: date.date(), month: date.month(), year: date.year() })\n    : Option.None();\n};\n\nconst parseRange = (value: { start: string; end: string }, format: DateFormat): DatePickerRange => {\n  return {\n    start: parseDate(value.start, format),\n    end: parseDate(value.end, format),\n  };\n};\n\nconst stringifyDate = (value: DatePickerDate, format: DateFormat): string => {\n  const date = dayjs.utc().year(value.year).month(value.month).date(value.day);\n  return date.format(format);\n};\n\nexport const validateDateRangeOrder = (\n  value: { start: string; end: string },\n  format: DateFormat,\n) => {\n  const range = parseRange(value, format);\n\n  if (range.start.isNone() || range.end.isNone()) {\n    return true;\n  }\n\n  if (isDateAfter(range.start.value, range.end.value)) {\n    return false;\n  }\n\n  return true;\n};\n\nconst range = (start: number, end: number): number[] => {\n  const result = [];\n  for (let i = start; i <= end; i++) {\n    result.push(i);\n  }\n  return result;\n};\n\nconst groupEvery = <T,>(input: T[], groupSize: number): T[][] => {\n  const result = [];\n  const nbGroups = Math.ceil(input.length / groupSize);\n  for (let i = 0; i < nbGroups; i++) {\n    result.push(input.slice(i * groupSize, (i + 1) * groupSize));\n  }\n\n  return result;\n};\n\nconst padEnd = <T,>(input: T[], length: number, value: T): T[] => {\n  const itemsToAppend = new Array(length - input.length).fill(value) as T[];\n  return [...input, ...itemsToAppend];\n};\n\nexport const isTodayOrFutureDate = (date: DatePickerDate): boolean => {\n  const yesterday = new Date();\n  yesterday.setDate(yesterday.getDate() - 1);\n\n  const yesterdayDate: DatePickerDate = {\n    day: yesterday.getDate(),\n    month: yesterday.getMonth(),\n    year: yesterday.getFullYear(),\n  };\n\n  return isDateAfter(date, yesterdayDate);\n};\n\nexport const isDateInRange =\n  (minDate: Date, maxDate: Date) =>\n  (date: DatePickerDate): boolean => {\n    const min: DatePickerDate = {\n      day: minDate.getDate(),\n      month: minDate.getMonth(),\n      year: minDate.getFullYear(),\n    };\n    const max: DatePickerDate = {\n      day: maxDate.getDate(),\n      month: maxDate.getMonth(),\n      year: maxDate.getFullYear(),\n    };\n\n    return (\n      (isDateAfter(date, min) && isDateBefore(date, max)) ||\n      isDateEquals(date, min) ||\n      isDateEquals(date, max)\n    );\n  };\n\nconst isDateToday = (date: DatePickerDate): boolean => {\n  const today = new Date();\n  return (\n    date.day === today.getDate() &&\n    date.month === today.getMonth() &&\n    date.year === today.getFullYear()\n  );\n};\n\nconst getMonthDates = (month: number, year: number): DatePickerDate[] => {\n  const aggregate = (acc: DatePickerDate[], date: Date): DatePickerDate[] => {\n    const dateDay = date.getDate();\n    const dateMonth = date.getMonth();\n    const dateYear = date.getFullYear();\n\n    if (date.getMonth() !== month) {\n      return acc;\n    }\n\n    return aggregate(\n      [...acc, { day: dateDay, month: dateMonth, year: dateYear }],\n      new Date(year, month, dateDay + 1),\n    );\n  };\n\n  return aggregate([], new Date(year, month, 1));\n};\n\nconst getMonthWeeks = (\n  month: number,\n  year: number,\n  firstWeekDay: keyof typeof weekDayIndex,\n): Option<DatePickerDate>[][] => {\n  const firstWeekDayIndex = weekDayIndex[firstWeekDay];\n  const monthFirstWeekDay = new Date(year, month, 1).getDay();\n  const monthDates = getMonthDates(month, year).map(date => Option.Some(date));\n\n  const nbDaysToPrepend =\n    monthFirstWeekDay >= firstWeekDayIndex\n      ? monthFirstWeekDay - firstWeekDayIndex\n      : NB_DAYS_IN_WEEK - firstWeekDayIndex + monthFirstWeekDay;\n\n  for (let i = 0; i < nbDaysToPrepend; i++) {\n    monthDates.unshift(Option.None());\n  }\n  const weeks = groupEvery(monthDates, NB_DAYS_IN_WEEK);\n  const lastWeek = weeks[weeks.length - 1];\n\n  if (!lastWeek) {\n    return weeks;\n  }\n  weeks[weeks.length - 1] = padEnd(lastWeek, NB_DAYS_IN_WEEK, Option.None());\n\n  return weeks;\n};\n\nconst getWeekDayNames = (\n  dayNames: WeekDayNames,\n  firstWeekDay: keyof typeof weekDayIndex = \"sunday\",\n): WeekDayNames => {\n  const firstWeekDayIndex = weekDayIndex[firstWeekDay];\n  const firstWeekDayNames = dayNames.slice(firstWeekDayIndex);\n  const lastWeekDayNames = dayNames.slice(0, firstWeekDayIndex);\n\n  // @ts-expect-error\n  return [...firstWeekDayNames, ...lastWeekDayNames];\n};\n\nconst isDateEquals = (date1: DatePickerDate, date2: DatePickerDate): boolean => {\n  return date1.day === date2.day && date1.month === date2.month && date1.year === date2.year;\n};\n\nconst isDateBefore = (date1: DatePickerDate, date2: DatePickerDate): boolean => {\n  return (\n    date1.year < date2.year ||\n    (date1.year === date2.year && date1.month < date2.month) ||\n    (date1.year === date2.year && date1.month === date2.month && date1.day < date2.day)\n  );\n};\n\nconst isDateAfter = (date1: DatePickerDate, date2: DatePickerDate): boolean => {\n  return (\n    date1.year > date2.year ||\n    (date1.year === date2.year && date1.month > date2.month) ||\n    (date1.year === date2.year && date1.month === date2.month && date1.day > date2.day)\n  );\n};\n\nconst isDateRange = (value: Option<DatePickerDate> | DatePickerRange): value is DatePickerRange => {\n  return match(value)\n    .with({ start: P._, end: P._ }, () => true)\n    .otherwise(() => false);\n};\n\nconst isSelectedDate = (date: DatePickerDate, value: Option<DatePickerDate> | DatePickerRange) => {\n  return match(value)\n    .with(Option.P.Some(P.select()), value => isDateEquals(value, date))\n    .with(Option.P.None, () => false)\n    .with(P.when(isDateRange), ({ start, end }) => {\n      // if range is invalid, we don't display any selection\n      if (start.isSome() && end.isSome() && isDateAfter(start.value, end.value)) {\n        return false;\n      }\n\n      return (\n        start.match({\n          Some: start => isDateEquals(start, date),\n          None: () => false,\n        }) ||\n        end.match({\n          Some: end => isDateEquals(end, date),\n          None: () => false,\n        })\n      );\n    })\n    .exhaustive();\n};\n\nconst getRangeIndicatorType = (\n  date: DatePickerDate,\n  value: Option<DatePickerDate> | DatePickerRange,\n): \"none\" | \"start\" | \"end\" | \"between\" => {\n  if (!isDateRange(value)) {\n    return \"none\";\n  }\n\n  const { start, end } = value;\n  if (start.isNone() || end.isNone()) {\n    return \"none\";\n  }\n\n  const startDate = start.value;\n  const endDate = end.value;\n\n  // no interval indicator if range is invalid\n  if (isDateAfter(startDate, endDate)) {\n    return \"none\";\n  }\n  if (isDateEquals(startDate, endDate)) {\n    return \"none\";\n  }\n  if (isDateEquals(date, startDate)) {\n    return \"start\";\n  }\n  if (isDateEquals(date, endDate)) {\n    return \"end\";\n  }\n  if (isDateAfter(date, startDate) && isDateBefore(date, endDate)) {\n    return \"between\";\n  }\n  return \"none\";\n};\n\nconst computeDateDistanceInDays = (date1: DatePickerDate, date2: DatePickerDate): number => {\n  const date1Date = new Date(date1.year, date1.month, date1.day);\n  const date2Date = new Date(date2.year, date2.month, date2.day);\n\n  const diffInMs = Math.abs(date2Date.getTime() - date1Date.getTime());\n  return Math.round(diffInMs / (1000 * 3600 * 24));\n};\n\nconst getNewDateRange = (\n  currentRange: DatePickerRange,\n  selectedDate: DatePickerDate,\n): DatePickerRange => {\n  const { start, end } = currentRange;\n\n  // Handle initial selection\n  if (start.isNone()) {\n    return { start: Option.Some(selectedDate), end: Option.None() };\n  }\n  if (end.isNone()) {\n    if (isDateAfter(selectedDate, start.value)) {\n      return { start, end: Option.Some(selectedDate) };\n    }\n\n    return { start: Option.Some(selectedDate), end: currentRange.start };\n  }\n\n  // Handle selection outside of the current range\n  if (isDateBefore(selectedDate, start.value)) {\n    return { start: Option.Some(selectedDate), end: currentRange.end };\n  }\n  if (isDateAfter(selectedDate, end.value)) {\n    return { start: currentRange.start, end: Option.Some(selectedDate) };\n  }\n\n  // We change the closest date to the new date\n  const startDistance = computeDateDistanceInDays(start.value, selectedDate);\n  const endDistance = computeDateDistanceInDays(end.value, selectedDate);\n\n  if (startDistance < endDistance) {\n    return { start: Option.Some(selectedDate), end: currentRange.end };\n  }\n  return { start: currentRange.start, end: Option.Some(selectedDate) };\n};\n\nconst getTodayYearMonth = (): YearMonth => ({\n  month: new Date().getMonth(),\n  year: new Date().getFullYear(),\n});\n\nconst getYearMonth = (value: string | undefined, format: DateFormat): Option<YearMonth> => {\n  if (isNullishOrEmpty(value)) {\n    return Option.None();\n  }\n  return parseDate(value, format);\n};\n\nconst isYearMonthBefore = (date1: YearMonth, date2: YearMonth): boolean => {\n  return date1.year < date2.year || (date1.year === date2.year && date1.month < date2.month);\n};\n\nconst isYearMonthEquals = (date1: YearMonth, date2: YearMonth): boolean => {\n  return date1.year === date2.year && date1.month === date2.month;\n};\n\nconst minYearMonth = (date1: YearMonth, date2: YearMonth): YearMonth => {\n  return isYearMonthBefore(date1, date2) ? date1 : date2;\n};\n\nconst maxYearMonth = (date1: YearMonth, date2: YearMonth): YearMonth => {\n  return isYearMonthBefore(date1, date2) ? date2 : date1;\n};\n\nconst incrementYearMonth = ({ month, year }: YearMonth): YearMonth => {\n  if (month === 11) {\n    return { month: 0, year: year + 1 };\n  }\n  return { month: month + 1, year };\n};\n\nconst decrementYearMonth = ({ month, year }: YearMonth): YearMonth => {\n  if (month === 0) {\n    return { month: 11, year: year - 1 };\n  }\n  return { month: month - 1, year };\n};\n\ntype YearMonthSelectProps = {\n  monthNames: MonthNames;\n  value: YearMonth;\n  arrowsPosition?: \"around\" | \"right\";\n  hideArrows?: boolean;\n  minValue?: YearMonth;\n  maxValue?: YearMonth;\n  onChange: (value: YearMonth) => void;\n};\n\nconst YearMonthSelect = ({\n  monthNames,\n  value,\n  arrowsPosition = \"right\",\n  hideArrows,\n  minValue,\n  maxValue,\n  onChange,\n}: YearMonthSelectProps) => {\n  const monthItems = useMemo<Item<number>[]>(\n    () => monthNames.map((name, index) => ({ name, value: index })),\n    [monthNames],\n  );\n\n  const yearItems = useMemo<Item<number>[]>(\n    () =>\n      range(value.year - 5, value.year + 5).map(year => ({\n        name: year.toString(),\n        value: year,\n      })),\n    [value.year],\n  );\n\n  const selectMonth = (month: number) => {\n    onChange({ year: value.year, month });\n  };\n\n  const selectYear = (year: number) => {\n    onChange({ year, month: value.month });\n  };\n\n  const setPreviousMonth = () => {\n    onChange(decrementYearMonth(value));\n  };\n\n  const setNextMonth = () => {\n    onChange(incrementYearMonth(value));\n  };\n\n  const isPreviousDisabled = !minValue\n    ? false\n    : value.year <= minValue.year && value.month <= minValue.month;\n  const isNextDisabled = !maxValue\n    ? false\n    : value.year >= maxValue.year && value.month >= maxValue.month;\n\n  return (\n    <Box direction=\"row\" alignItems=\"center\">\n      {arrowsPosition === \"around\" && hideArrows !== true && (\n        <>\n          <LakeButton\n            size=\"small\"\n            mode=\"tertiary\"\n            icon=\"arrow-left-filled\"\n            disabled={isPreviousDisabled}\n            onPress={setPreviousMonth}\n            ariaLabel={t(\"datePicker.month.previous\")}\n          />\n\n          <Fill minWidth={12} />\n        </>\n      )}\n\n      <LakeSelect\n        items={monthItems}\n        value={value.month}\n        onValueChange={selectMonth}\n        mode=\"borderless\"\n        size=\"small\"\n        hideErrors={true}\n        style={styles.monthSelect}\n      />\n\n      <LakeSelect\n        items={yearItems}\n        value={value.year}\n        onValueChange={selectYear}\n        mode=\"borderless\"\n        size=\"small\"\n        hideErrors={true}\n        style={styles.yearSelect}\n      />\n\n      {hideArrows !== true && (\n        <>\n          <Fill minWidth={12} />\n\n          {arrowsPosition === \"right\" && (\n            <>\n              <LakeButton\n                size=\"small\"\n                mode=\"tertiary\"\n                icon=\"arrow-left-filled\"\n                disabled={isPreviousDisabled}\n                onPress={setPreviousMonth}\n                ariaLabel={t(\"datePicker.month.previous\")}\n              />\n\n              <Space width={12} />\n            </>\n          )}\n\n          <LakeButton\n            size=\"small\"\n            mode=\"tertiary\"\n            icon=\"arrow-right-filled\"\n            disabled={isNextDisabled}\n            onPress={setNextMonth}\n            ariaLabel={t(\"datePicker.month.next\")}\n          />\n        </>\n      )}\n    </Box>\n  );\n};\n\ntype MonthCalendarProps = {\n  month: number;\n  year: number;\n  value: Option<DatePickerDate> | DatePickerRange;\n  firstWeekDay: keyof typeof weekDayIndex;\n  isSelectable?: (date: DatePickerDate) => boolean;\n  onChange: (date: DatePickerDate) => void;\n};\n\nconst MonthCalendar = ({\n  month,\n  year,\n  value,\n  firstWeekDay,\n  isSelectable,\n  onChange,\n}: MonthCalendarProps) => {\n  const dayNames = useMemo(() => getWeekDayNames(weekDayNames, firstWeekDay), [firstWeekDay]);\n  const weeks = useMemo(\n    () => getMonthWeeks(month, year, firstWeekDay),\n    [month, year, firstWeekDay],\n  );\n\n  return (\n    <View>\n      <Box direction=\"row\" alignItems=\"center\" style={styles.weekRow}>\n        {dayNames.map(dayName => (\n          <View key={dayName} style={styles.dayName}>\n            <LakeText variant=\"medium\" color={colors.gray[600]}>\n              {dayName.substring(0, 1)}\n            </LakeText>\n          </View>\n        ))}\n      </Box>\n\n      {weeks.map((week, weekIndex) => (\n        <Box key={weekIndex} direction=\"row\" alignItems=\"center\" style={styles.weekRow}>\n          {week.map((date, dateIndex) => {\n            const isDisabled = date.match({\n              Some: date => isNotNullish(isSelectable) && !isSelectable(date),\n              None: () => true,\n            });\n            const isSelected = date.match({\n              Some: date => isSelectedDate(date, value),\n              None: () => false,\n            });\n            const isToday = date.match({\n              Some: date => isDateToday(date),\n              None: () => false,\n            });\n            const rangeIndicator = date.match({\n              Some: date => getRangeIndicatorType(date, value),\n              None: () => \"none\" as const,\n            });\n\n            return (\n              <View key={dateIndex} style={styles.dayContainer}>\n                {rangeIndicator !== \"none\" && (\n                  <View\n                    style={[\n                      styles.dayRangeIndicator,\n                      rangeIndicator === \"start\" && styles.dayStartRangeIndicator,\n                      rangeIndicator === \"end\" && styles.dayEndRangeIndicator,\n                    ]}\n                  />\n                )}\n\n                <Pressable\n                  disabled={isDisabled}\n                  onPress={() => date.match({ Some: onChange, None: noop })}\n                  style={({ focused, hovered, pressed }) => [\n                    styles.dayNumber,\n                    focused && styles.dayNumberFocused,\n                    hovered && styles.dayNumberHover,\n                    pressed && styles.dayNumberPressed,\n                    isSelected && styles.dayNumberSelected,\n                  ]}\n                >\n                  <LakeText\n                    variant=\"smallRegular\"\n                    color={\n                      isSelected\n                        ? colors.current.contrast\n                        : isDisabled\n                          ? colors.gray[300]\n                          : isToday\n                            ? colors.current[500]\n                            : colors.gray[900]\n                    }\n                  >\n                    {date.match({ Some: ({ day }) => day.toString(), None: () => \" \" })}\n                  </LakeText>\n\n                  {isToday && <View style={styles.todayIndicator} />}\n                </Pressable>\n              </View>\n            );\n          })}\n        </Box>\n      ))}\n    </View>\n  );\n};\n\nexport type DatePickerProps = {\n  label: string;\n  value?: string;\n  error?: string;\n  format: DateFormat;\n  firstWeekDay: keyof typeof weekDayIndex;\n  isSelectable?: (date: DatePickerDate) => boolean;\n  onChange: (date: string) => void;\n};\n\ntype DatePickerPopoverContentProps = Except<DatePickerProps, \"label\" | \"error\"> & {\n  desktop: boolean;\n};\n\nconst DatePickerPopoverContent = ({\n  value,\n  format,\n  firstWeekDay,\n  desktop,\n  isSelectable,\n  onChange,\n}: DatePickerPopoverContentProps) => {\n  const [monthYear, setMonthYear] = useState(() =>\n    getYearMonth(value, format).getOr(getTodayYearMonth()),\n  );\n\n  // Automatically change displayed year and month when user change the value with text input\n  useEffect(() => {\n    const yearMonth = getYearMonth(value, format);\n    if (yearMonth.isSome()) {\n      setMonthYear(yearMonth.value);\n    }\n  }, [value, format]);\n\n  const handleChange = useCallback(\n    (date: DatePickerDate) => {\n      const formatted = stringifyDate(date, format);\n      onChange(formatted);\n    },\n    [format, onChange],\n  );\n\n  return (\n    <>\n      <YearMonthSelect\n        monthNames={monthNames}\n        value={monthYear}\n        hideArrows={!desktop}\n        onChange={setMonthYear}\n      />\n\n      <Space height={24} />\n\n      <MonthCalendar\n        month={monthYear.month}\n        year={monthYear.year}\n        value={isNotNullishOrEmpty(value) ? parseDate(value, format) : Option.None()}\n        firstWeekDay={firstWeekDay}\n        isSelectable={isSelectable}\n        onChange={handleChange}\n      />\n    </>\n  );\n};\n\nexport const DatePicker = ({\n  label,\n  value,\n  error,\n  format,\n  firstWeekDay,\n  isSelectable,\n  onChange,\n}: DatePickerProps) => {\n  const { desktop } = useResponsive(DATE_PICKER_MOBILE_THRESHOLD);\n  const ref = useRef<TextInput>(null);\n  const [isOpened, { open, close }] = useDisclosure(false);\n  const popoverId = useId();\n\n  return (\n    <>\n      <Box direction=\"row\" alignItems=\"end\">\n        <LakeLabel\n          label={label}\n          style={styles.label}\n          actions={\n            <LakeButton\n              mode=\"secondary\"\n              icon=\"calendar-ltr-regular\"\n              size=\"small\"\n              onPress={open}\n              ariaLabel={t(\"common.open\")}\n            />\n          }\n          render={id => (\n            <Rifm value={value ?? \"\"} onChange={onChange} {...rifmDateProps}>\n              {({ value, onChange }) => (\n                <LakeTextInput\n                  ref={ref}\n                  id={id}\n                  placeholder={format}\n                  value={value}\n                  error={error}\n                  onChange={onChange}\n                  ariaExpanded={isOpened}\n                />\n              )}\n            </Rifm>\n          )}\n        />\n      </Box>\n\n      <Popover id={popoverId} role=\"dialog\" onDismiss={close} referenceRef={ref} visible={isOpened}>\n        <View style={desktop ? styles.popoverDesktop : styles.popover}>\n          <DatePickerPopoverContent\n            value={value}\n            format={format}\n            firstWeekDay={firstWeekDay}\n            desktop={desktop}\n            isSelectable={isSelectable}\n            onChange={onChange}\n          />\n        </View>\n      </Popover>\n    </>\n  );\n};\n\ntype DatePickerModalProps = Except<DatePickerProps, \"error\"> & {\n  visible: boolean;\n  cancelLabel: string;\n  confirmLabel: string;\n  validate?: (value: string) => ValidatorResult;\n  onDismiss: () => void;\n};\n\nexport const DatePickerModal = ({\n  value,\n  format,\n  firstWeekDay,\n  isSelectable,\n  onChange,\n  visible,\n  label,\n  cancelLabel,\n  confirmLabel,\n  validate,\n  onDismiss,\n}: DatePickerModalProps) => {\n  const { desktop } = useResponsive(DATE_PICKER_MOBILE_THRESHOLD);\n  const { Field, submitForm, setFieldValue, resetField } = useForm({\n    date: {\n      initialValue: value ?? \"\",\n      validate,\n    },\n  });\n\n  const handleCancel = () => {\n    setFieldValue(\"date\", value ?? \"\");\n    onDismiss();\n  };\n\n  const handleConfirm = () => {\n    submitForm({\n      onSuccess: values => {\n        const date = values.date.getOr(\"\");\n\n        if (isNotEmpty(date)) {\n          onChange(date);\n        }\n\n        onDismiss();\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (!visible) {\n      resetField(\"date\");\n    }\n  }, [visible, resetField]);\n\n  return (\n    <DateModal visible={visible} maxWidth={500} onPressClose={handleCancel}>\n      <Field name=\"date\">\n        {({ ref, value, error, onBlur, onChange }) => (\n          <>\n            <LakeLabel\n              label={label}\n              render={id => (\n                <Rifm value={value} onChange={onChange} {...rifmDateProps}>\n                  {({ value, onChange }) => (\n                    <LakeTextInput\n                      ref={ref}\n                      id={id}\n                      placeholder={format}\n                      value={value}\n                      error={error}\n                      onBlur={onBlur}\n                      onChange={onChange}\n                    />\n                  )}\n                </Rifm>\n              )}\n            />\n\n            <DatePickerPopoverContent\n              value={value}\n              format={format}\n              firstWeekDay={firstWeekDay}\n              desktop={desktop}\n              isSelectable={isSelectable}\n              onChange={onChange}\n            />\n          </>\n        )}\n      </Field>\n\n      <Space height={24} />\n\n      <Box direction=\"row\" alignItems=\"center\">\n        <LakeButton mode=\"secondary\" size=\"small\" onPress={handleCancel} style={styles.button}>\n          {cancelLabel}\n        </LakeButton>\n\n        <Space width={24} />\n\n        <LakeButton color=\"current\" size=\"small\" onPress={handleConfirm} style={styles.button}>\n          {confirmLabel}\n        </LakeButton>\n      </Box>\n    </DateModal>\n  );\n};\n\ntype DateModalProps = {\n  children: ReactNode;\n  visible: boolean;\n  maxWidth: number;\n  withCloseButton?: boolean;\n  onPressClose: () => void;\n};\n\nconst DateModal = ({\n  children,\n  visible,\n  maxWidth,\n  withCloseButton,\n  onPressClose,\n}: DateModalProps) => {\n  const { desktop } = useResponsive(MODALE_MOBILE_THRESHOLD);\n\n  if (desktop) {\n    return (\n      <LakeModal\n        visible={visible}\n        maxWidth={maxWidth}\n        onPressClose={withCloseButton === true ? onPressClose : undefined}\n      >\n        {children}\n      </LakeModal>\n    );\n  }\n\n  return (\n    <BottomPanel visible={visible} onPressClose={onPressClose}>\n      <View style={styles.popover}>{children}</View>\n    </BottomPanel>\n  );\n};\n\nexport type DateRangePickerProps = {\n  value: { start: string; end: string };\n  error?: string;\n  format: DateFormat;\n  startLabel: string;\n  endLabel: string;\n  firstWeekDay: keyof typeof weekDayIndex;\n  isSelectable?: (date: DatePickerDate) => boolean;\n  onChange: (date: { start: string; end: string }) => void;\n};\n\ntype DateRangePickerModalContentProps = Except<\n  DateRangePickerProps,\n  \"startLabel\" | \"endLabel\" | \"error\"\n> & {\n  desktop: boolean;\n  displayTwoCalendar: boolean;\n};\n\nconst DateRangePickerModalContent = ({\n  value,\n  format,\n  firstWeekDay,\n  desktop,\n  displayTwoCalendar,\n  isSelectable,\n  onChange,\n}: DateRangePickerModalContentProps) => {\n  const isFirstMount = useFirstMountState();\n  const [periods, setPeriods] = useState(() => {\n    const startYearMonth = getYearMonth(value.start, format).getOr(getTodayYearMonth());\n    const endYearMonth = getYearMonth(value.end, format).getOr(incrementYearMonth(startYearMonth));\n    return {\n      start: startYearMonth,\n      end: isYearMonthEquals(startYearMonth, endYearMonth)\n        ? incrementYearMonth(startYearMonth)\n        : endYearMonth,\n    };\n  });\n\n  // Automatically change displayed year and month when start date changes\n  useEffect(() => {\n    if (isFirstMount) {\n      return;\n    }\n\n    const startYearMonth = getYearMonth(value.start, format);\n\n    if (startYearMonth.isSome()) {\n      setPeriods(periods => {\n        const isStartAndEndSameMonth = isYearMonthEquals(startYearMonth.value, periods.end);\n        if (isStartAndEndSameMonth) {\n          return {\n            start: decrementYearMonth(periods.end),\n            end: periods.end,\n          };\n        }\n\n        // change end period if it becomes before start period\n        const endPeriod = maxYearMonth(periods.end, incrementYearMonth(startYearMonth.value));\n\n        return {\n          start: startYearMonth.value,\n          end: endPeriod,\n        };\n      });\n    }\n  }, [isFirstMount, value.start, format]);\n\n  // Automatically change displayed year and month when end date changes\n  useEffect(() => {\n    if (isFirstMount) {\n      return;\n    }\n\n    const endYearMonth = getYearMonth(value.end, format);\n\n    if (endYearMonth.isSome()) {\n      setPeriods(periods => {\n        const isStartAndEndSameMonth = isYearMonthEquals(periods.start, endYearMonth.value);\n        if (isStartAndEndSameMonth) {\n          return {\n            start: periods.start,\n            end: incrementYearMonth(periods.start),\n          };\n        }\n\n        // change start period if it becomes after end period\n        const startPeriod = minYearMonth(periods.start, decrementYearMonth(endYearMonth.value));\n\n        return {\n          start: startPeriod,\n          end: endYearMonth.value,\n        };\n      });\n    }\n  }, [isFirstMount, value.end, format]);\n\n  const setStartPeriod = useCallback((yearMonth: YearMonth) => {\n    setPeriods(periods => ({\n      start: yearMonth,\n      end: maxYearMonth(periods.end, incrementYearMonth(yearMonth)),\n    }));\n  }, []);\n\n  const setEndPeriod = useCallback((yearMonth: YearMonth) => {\n    setPeriods(periods => ({\n      start: minYearMonth(periods.start, decrementYearMonth(yearMonth)),\n      end: yearMonth,\n    }));\n  }, []);\n\n  const dateRange = useMemo(() => parseRange(value, format), [value, format]);\n\n  const handleSelectDate = (date: DatePickerDate) => {\n    const newRange = getNewDateRange(dateRange, date);\n    const newValue = {\n      start: newRange.start.match({\n        Some: date => stringifyDate(date, format),\n        None: () => value.start,\n      }),\n      end: newRange.end.match({\n        Some: date => stringifyDate(date, format),\n        None: () => value.end,\n      }),\n    };\n    onChange(newValue);\n  };\n\n  if (!displayTwoCalendar) {\n    return (\n      <>\n        <YearMonthSelect\n          monthNames={monthNames}\n          value={periods.start}\n          hideArrows={!desktop}\n          onChange={setStartPeriod}\n        />\n\n        <Space height={24} />\n\n        <MonthCalendar\n          month={periods.start.month}\n          year={periods.start.year}\n          value={dateRange}\n          firstWeekDay={firstWeekDay}\n          isSelectable={isSelectable}\n          onChange={handleSelectDate}\n        />\n      </>\n    );\n  }\n\n  return (\n    <View>\n      <Box direction=\"row\" alignItems=\"start\">\n        <View style={styles.rangeCalendarSide}>\n          <YearMonthSelect\n            monthNames={monthNames}\n            value={periods.start}\n            maxValue={decrementYearMonth(periods.end)}\n            arrowsPosition=\"around\"\n            onChange={setStartPeriod}\n          />\n\n          <Space height={24} />\n\n          <MonthCalendar\n            month={periods.start.month}\n            year={periods.start.year}\n            value={dateRange}\n            firstWeekDay={firstWeekDay}\n            isSelectable={isSelectable}\n            onChange={handleSelectDate}\n          />\n        </View>\n\n        <Separator space={24} horizontal={true} />\n\n        <View style={styles.rangeCalendarSide}>\n          <YearMonthSelect\n            monthNames={monthNames}\n            value={periods.end}\n            minValue={incrementYearMonth(periods.start)}\n            arrowsPosition=\"around\"\n            onChange={setEndPeriod}\n          />\n\n          <Space height={24} />\n\n          <MonthCalendar\n            month={periods.end.month}\n            year={periods.end.year}\n            value={dateRange}\n            firstWeekDay={firstWeekDay}\n            isSelectable={isSelectable}\n            onChange={handleSelectDate}\n          />\n        </View>\n      </Box>\n    </View>\n  );\n};\n\nexport const DateRangePicker = ({\n  value,\n  error,\n  format,\n  startLabel,\n  endLabel,\n  firstWeekDay,\n  isSelectable,\n  onChange,\n}: DateRangePickerProps) => {\n  const { desktop } = useResponsive(DATE_PICKER_MOBILE_THRESHOLD);\n  const { desktop: displayTwoCalendar } = useResponsive(DATE_RANGE_PICKER_THRESHOLD);\n  const ref = useRef<TextInput>(null);\n  const [isOpened, { open, close }] = useDisclosure(false);\n\n  const handleStartChange = useCallback(\n    (start: string) => {\n      onChange({ start, end: value.end });\n    },\n    [value, onChange],\n  );\n\n  const handleEndChange = useCallback(\n    (end: string) => {\n      onChange({ start: value.start, end });\n    },\n    [value, onChange],\n  );\n\n  return (\n    <View>\n      <Box direction=\"row\" alignItems=\"end\">\n        <LakeLabel\n          label={startLabel}\n          style={styles.label}\n          render={id => (\n            <Rifm value={value.start} onChange={handleStartChange} {...rifmDateProps}>\n              {({ value, onChange }) => (\n                <LakeTextInput\n                  ref={ref}\n                  id={id}\n                  placeholder={format}\n                  value={value}\n                  onChange={onChange}\n                  error={error}\n                  hideErrors={true}\n                  ariaExpanded={isOpened}\n                />\n              )}\n            </Rifm>\n          )}\n        />\n\n        <Space width={12} />\n\n        <Box style={styles.arrowContainer} justifyContent=\"center\">\n          <Icon name=\"arrow-right-filled\" size={20} />\n        </Box>\n\n        <Space width={12} />\n\n        <LakeLabel\n          label={endLabel}\n          style={styles.label}\n          render={id => (\n            <Rifm value={value.end} onChange={handleEndChange} {...rifmDateProps}>\n              {({ value, onChange }) => (\n                <LakeTextInput\n                  id={id}\n                  placeholder={format}\n                  value={value}\n                  onChange={onChange}\n                  error={error}\n                  hideErrors={true}\n                  ariaExpanded={isOpened}\n                />\n              )}\n            </Rifm>\n          )}\n        />\n\n        <Space width={12} />\n\n        <LakeButton\n          mode=\"secondary\"\n          icon=\"calendar-ltr-regular\"\n          size=\"small\"\n          onPress={open}\n          ariaLabel={t(\"common.open\")}\n        />\n      </Box>\n\n      <Space height={4} />\n\n      <LakeText variant=\"smallRegular\" color={colors.negative[500]}>\n        {error ?? \" \"}\n      </LakeText>\n\n      <DateModal visible={isOpened} maxWidth={900} withCloseButton={true} onPressClose={close}>\n        <DateRangePickerModalContent\n          value={value}\n          format={format}\n          firstWeekDay={firstWeekDay}\n          desktop={desktop}\n          displayTwoCalendar={displayTwoCalendar}\n          isSelectable={isSelectable}\n          onChange={onChange}\n        />\n      </DateModal>\n    </View>\n  );\n};\n\ntype DateRangePickerModalProps = DateRangePickerProps & {\n  visible: boolean;\n  cancelLabel: string;\n  confirmLabel: string;\n  onDismiss: () => void;\n};\n\nexport const DateRangePickerModal = ({\n  value,\n  error,\n  format,\n  firstWeekDay,\n  isSelectable,\n  onChange,\n  visible,\n  startLabel,\n  endLabel,\n  cancelLabel,\n  confirmLabel,\n  onDismiss,\n}: DateRangePickerModalProps) => {\n  const { desktop } = useResponsive(MODALE_MOBILE_THRESHOLD);\n  const { desktop: displayTwoCalendar } = useResponsive(DATE_RANGE_PICKER_THRESHOLD);\n  const [localeValue, setLocaleValue] = useState(value);\n\n  useEffect(() => {\n    setLocaleValue(value);\n  }, [value]);\n\n  const handleStartChange = (start: string) => {\n    setLocaleValue({ start, end: localeValue.end });\n  };\n\n  const handleEndChange = (end: string) => {\n    setLocaleValue({ start: localeValue.start, end });\n  };\n\n  const handleCancel = () => {\n    setLocaleValue(value);\n    onDismiss();\n  };\n\n  const handleConfirm = () => {\n    onChange(localeValue);\n    onDismiss();\n  };\n\n  return (\n    <DateModal visible={visible} maxWidth={900} onPressClose={handleCancel}>\n      <View>\n        <Box direction=\"row\" alignItems=\"end\">\n          <LakeLabel\n            label={startLabel}\n            style={styles.label}\n            render={id => (\n              <Rifm value={localeValue.start} onChange={handleStartChange} {...rifmDateProps}>\n                {({ value, onChange }) => (\n                  <LakeTextInput\n                    id={id}\n                    placeholder={format}\n                    value={value}\n                    onChange={onChange}\n                    error={error}\n                    hideErrors={true}\n                  />\n                )}\n              </Rifm>\n            )}\n          />\n\n          <Space width={12} />\n\n          <Box style={styles.arrowContainer} justifyContent=\"center\">\n            <Icon name=\"arrow-right-filled\" size={20} />\n          </Box>\n\n          <Space width={12} />\n\n          <LakeLabel\n            label={endLabel}\n            style={styles.label}\n            render={id => (\n              <Rifm value={localeValue.end} onChange={handleEndChange} {...rifmDateProps}>\n                {({ value, onChange }) => (\n                  <LakeTextInput\n                    id={id}\n                    placeholder={format}\n                    value={value}\n                    onChange={onChange}\n                    error={error}\n                    hideErrors={true}\n                  />\n                )}\n              </Rifm>\n            )}\n          />\n        </Box>\n\n        <Space height={4} />\n\n        <LakeText variant=\"smallRegular\" color={colors.negative[500]}>\n          {error ?? \" \"}\n        </LakeText>\n      </View>\n\n      <DateRangePickerModalContent\n        value={localeValue}\n        format={format}\n        firstWeekDay={firstWeekDay}\n        desktop={desktop}\n        displayTwoCalendar={displayTwoCalendar}\n        isSelectable={isSelectable}\n        onChange={setLocaleValue}\n      />\n\n      <Space height={24} />\n\n      <Box direction=\"row\" alignItems=\"center\">\n        <LakeButton mode=\"secondary\" size=\"small\" onPress={handleCancel} style={styles.button}>\n          {cancelLabel}\n        </LakeButton>\n\n        <Space width={24} />\n\n        <LakeButton color=\"current\" size=\"small\" onPress={handleConfirm} style={styles.button}>\n          {confirmLabel}\n        </LakeButton>\n      </Box>\n    </DateModal>\n  );\n};\n","import { Meta } from \"@storybook/react\";\nimport { LakeButton } from \"@swan-io/lake/src/components/LakeButton\";\nimport { LakeText } from \"@swan-io/lake/src/components/LakeText\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport { WithPartnerAccentColor } from \"@swan-io/lake/src/components/WithPartnerAccentColor\";\nimport { isNotNullish, isNotNullishOrEmpty } from \"@swan-io/lake/src/utils/nullish\";\nimport { useRef, useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { Except } from \"type-fest\";\nimport { BirthdatePicker } from \"../src/components/BirthdatePicker\";\nimport {\n  DatePicker,\n  DatePickerModal,\n  DatePickerProps,\n  DateRangePicker,\n  DateRangePickerModal,\n  DateRangePickerProps,\n  isDateInRange,\n  isTodayOrFutureDate,\n  validateDateRangeOrder,\n} from \"../src/components/DatePicker\";\nimport { StoryBlock, StoryPart } from \"./_StoriesComponents\";\n\nconst styles = StyleSheet.create({\n  container: {\n    maxWidth: 430,\n  },\n  button: {\n    alignSelf: \"flex-start\",\n  },\n});\n\nconst FIFTEEN_DAYS_AGO = new Date();\nFIFTEEN_DAYS_AGO.setDate(FIFTEEN_DAYS_AGO.getDate() - 15);\n\nconst FIFTEEN_DAYS_LATER = new Date();\nFIFTEEN_DAYS_LATER.setDate(FIFTEEN_DAYS_LATER.getDate() + 15);\n\nexport default {\n  title: \"Forms/DatePicker\",\n  component: DatePicker,\n} as Meta<typeof DatePicker>;\n\nconst InteractiveDatePicker = ({ ...props }: Except<DatePickerProps, \"value\" | \"onChange\">) => {\n  const [value, setValue] = useState<string>();\n\n  return <DatePicker {...props} value={value} onChange={setValue} />;\n};\n\nconst InteractiveDateRangePicker = ({\n  ...props\n}: Except<DateRangePickerProps, \"value\" | \"onChange\">) => {\n  const [value, setValue] = useState({ start: \"\", end: \"\" });\n  const isRangeValid = validateDateRangeOrder(value, props.format);\n\n  return (\n    <DateRangePicker\n      {...props}\n      value={value}\n      error={isRangeValid ? undefined : \"End date can't be before start date\"}\n      onChange={setValue}\n    />\n  );\n};\n\nexport const Default = () => {\n  return (\n    <WithPartnerAccentColor color=\"#0F6FDE\">\n      <StoryBlock title=\"DatePicker\">\n        <StoryPart title=\"Default\">\n          <View style={styles.container}>\n            <InteractiveDatePicker\n              label=\"Select a date\"\n              firstWeekDay=\"monday\"\n              format=\"DD/MM/YYYY\"\n            />\n          </View>\n        </StoryPart>\n\n        <StoryPart title=\"Week starting sunday\">\n          <View style={styles.container}>\n            <InteractiveDatePicker\n              label=\"Select a date\"\n              firstWeekDay=\"sunday\"\n              format=\"DD/MM/YYYY\"\n            />\n          </View>\n        </StoryPart>\n\n        <StoryPart title=\"Selectable only in the future\">\n          <View style={styles.container}>\n            <InteractiveDatePicker\n              label=\"Select a date\"\n              firstWeekDay=\"sunday\"\n              format=\"DD/MM/YYYY\"\n              isSelectable={isTodayOrFutureDate}\n            />\n          </View>\n        </StoryPart>\n\n        <StoryPart title=\"Selectable only in a range (15 days before or after today)\">\n          <View style={styles.container}>\n            <InteractiveDatePicker\n              label=\"Select a date\"\n              firstWeekDay=\"sunday\"\n              format=\"DD/MM/YYYY\"\n              isSelectable={isDateInRange(FIFTEEN_DAYS_AGO, FIFTEEN_DAYS_LATER)}\n            />\n          </View>\n        </StoryPart>\n      </StoryBlock>\n    </WithPartnerAccentColor>\n  );\n};\n\nexport const ButtonWithModal = () => {\n  const buttonRef = useRef<View>(null);\n  const [value, setValue] = useState(\"\");\n  const [isOpened, setIsOpened] = useState(false);\n\n  return (\n    <WithPartnerAccentColor color=\"#0F6FDE\">\n      <StoryBlock title=\"DatePicker Modal\">\n        <StoryPart title=\"Default\">\n          <LakeText>Selected date: {value}</LakeText>\n          <Space height={20} />\n\n          <LakeButton ref={buttonRef} style={styles.button} onPress={() => setIsOpened(true)}>\n            Open date picker\n          </LakeButton>\n\n          <DatePickerModal\n            visible={isOpened}\n            value={value}\n            firstWeekDay=\"monday\"\n            format=\"DD/MM/YYYY\"\n            label=\"Select a date\"\n            confirmLabel=\"Select\"\n            cancelLabel=\"Cancel\"\n            onChange={setValue}\n            onDismiss={() => setIsOpened(false)}\n          />\n        </StoryPart>\n      </StoryBlock>\n    </WithPartnerAccentColor>\n  );\n};\n\nexport const Range = () => {\n  return (\n    <WithPartnerAccentColor color=\"#0F6FDE\">\n      <StoryBlock title=\"DateRangePicker\">\n        <StoryPart title=\"Default\">\n          <View style={styles.container}>\n            <InteractiveDateRangePicker\n              startLabel=\"Start date\"\n              endLabel=\"End date\"\n              firstWeekDay=\"monday\"\n              format=\"DD/MM/YYYY\"\n            />\n          </View>\n        </StoryPart>\n      </StoryBlock>\n    </WithPartnerAccentColor>\n  );\n};\n\nexport const ButtonWithRangePopover = () => {\n  const [value, setValue] = useState({ start: \"\", end: \"\" });\n  const [isOpened, setIsOpened] = useState(false);\n\n  return (\n    <WithPartnerAccentColor color=\"#0F6FDE\">\n      <StoryBlock title=\"DatePicker Popover\">\n        <StoryPart title=\"Default\">\n          <LakeText>\n            Selected date: {value.start} - {value.end}\n          </LakeText>\n\n          <Space height={20} />\n\n          <LakeButton style={styles.button} onPress={() => setIsOpened(true)}>\n            Open date range picker\n          </LakeButton>\n\n          <DateRangePickerModal\n            visible={isOpened}\n            value={value}\n            firstWeekDay=\"monday\"\n            format=\"DD/MM/YYYY\"\n            startLabel=\"Start date\"\n            endLabel=\"End date\"\n            confirmLabel=\"Select\"\n            cancelLabel=\"Cancel\"\n            onChange={setValue}\n            onDismiss={() => setIsOpened(false)}\n          />\n        </StoryPart>\n      </StoryBlock>\n    </WithPartnerAccentColor>\n  );\n};\n\nexport const Inline = () => {\n  const initialValue = \"\";\n\n  const [birthdate, setBirthdate] = useState<string | undefined>(initialValue);\n\n  return (\n    <WithPartnerAccentColor color=\"#0F6FDE\">\n      <StoryBlock title=\"Inline picker\">\n        <StoryPart title=\"Default\">\n          <View style={styles.container}>\n            {isNotNullishOrEmpty(birthdate) && <LakeText>Selected date: {birthdate}</LakeText>}\n\n            <BirthdatePicker\n              label={\"Birthdate\"}\n              value={initialValue}\n              onValueChange={setBirthdate}\n            />\n          </View>\n        </StoryPart>\n\n        <StoryPart title=\"Readonly\">\n          <View style={styles.container}>\n            {isNotNullish(birthdate) && <LakeText>Selected date: {birthdate}</LakeText>}\n\n            <BirthdatePicker\n              label={\"Birthdate\"}\n              value={initialValue}\n              readOnly={true}\n              onValueChange={setBirthdate}\n            />\n          </View>\n        </StoryPart>\n      </StoryBlock>\n    </WithPartnerAccentColor>\n  );\n};\n"],"names":["identity","value","noop","isPromise","useForm","config","_a","_b","forceUpdate","useReducer","mounted","useRef","formStatus","arg","useEffect","fields","field","fieldsListener","api","useMemo","getIsEqual","name","_a2","getInitialValue","getSanitize","getStrategy","getValidate","isMounted","isTalkative","setState","state","getFieldState","talkative","validity","sanitize","isEqual","runRenderCallbacks","callback","setTalkative","strategies","strategy","item","prevState","getValidity","error","getFieldValue","options","getFieldRef","ref","focusField","internalValidateField","validate","setFieldValue","setFieldError","resetField","sanitizeField","validateField","listenFields","names","listener","acc","getOnChange","getOnBlur","resetForm","Dict","focusFirstError","results","index","result","isSuccessfulSubmission","setFormSubmitted","onSuccess","onFailure","focusOnFirstError","keys","values","errors","Option","effect","promiseEffect","Future","tmp","Field","children","subscribe","getSnapshot","useSyncExternalStore","isFirstMounting","FieldsListener","getMostLikelyUserCountry","countries","language","country","isCountryCCA2","getCountryByCCA2","france","months","t","styles","StyleSheet","colors","order","match","InlineDatePicker","label","readOnly","onValueChange","validateDate","externalError","style","desktop","useResponsive","breakpoints","touched","mountWithInitialValue","isNotNullish","extractDate","date","errorMessage","isNullish","formatExtractedDate","View","jsx","onChange","LakeLabel","id","day","LakeTextInput","month","LakeSelect","year","Box","jsxs","Stack","InputError","BirthdatePicker","validateBirthdate","useFirstMountState","isFirstMount","spacings","MODALE_MOBILE_THRESHOLD","DATE_PICKER_MOBILE_THRESHOLD","DATE_RANGE_PICKER_THRESHOLD","NB_DAYS_IN_WEEK","weekDayNames","monthNames","weekDayIndex","rifmDateProps","getRifmProps","parseDate","format","dayjs","parseRange","stringifyDate","validateDateRangeOrder","range","isDateAfter","start","end","groupEvery","input","groupSize","nbGroups","i","padEnd","length","itemsToAppend","isTodayOrFutureDate","yesterday","yesterdayDate","isDateInRange","minDate","maxDate","min","max","isDateBefore","isDateEquals","isDateToday","today","getMonthDates","aggregate","dateDay","dateMonth","dateYear","getMonthWeeks","firstWeekDay","firstWeekDayIndex","monthFirstWeekDay","monthDates","nbDaysToPrepend","weeks","lastWeek","getWeekDayNames","dayNames","firstWeekDayNames","lastWeekDayNames","date1","date2","isDateRange","P","isSelectedDate","getRangeIndicatorType","startDate","endDate","computeDateDistanceInDays","date1Date","date2Date","diffInMs","getNewDateRange","currentRange","selectedDate","startDistance","endDistance","getTodayYearMonth","getYearMonth","isNullishOrEmpty","isYearMonthBefore","isYearMonthEquals","minYearMonth","maxYearMonth","incrementYearMonth","decrementYearMonth","YearMonthSelect","arrowsPosition","hideArrows","minValue","maxValue","monthItems","yearItems","selectMonth","selectYear","setPreviousMonth","setNextMonth","isPreviousDisabled","isNextDisabled","Fragment","LakeButton","Fill","Space","MonthCalendar","isSelectable","dayName","LakeText","week","weekIndex","dateIndex","isDisabled","isSelected","isToday","rangeIndicator","Pressable","focused","hovered","pressed","DatePickerPopoverContent","monthYear","setMonthYear","useState","yearMonth","handleChange","useCallback","formatted","isNotNullishOrEmpty","DatePicker","isOpened","open","close","useDisclosure","popoverId","useId","Rifm","Popover","DatePickerModal","visible","cancelLabel","confirmLabel","onDismiss","submitForm","handleCancel","handleConfirm","isNotEmpty","DateModal","onBlur","maxWidth","withCloseButton","onPressClose","LakeModal","BottomPanel","DateRangePickerModalContent","displayTwoCalendar","periods","setPeriods","startYearMonth","endYearMonth","endPeriod","setStartPeriod","setEndPeriod","dateRange","handleSelectDate","newRange","newValue","Separator","DateRangePicker","startLabel","endLabel","handleStartChange","handleEndChange","Icon","DateRangePickerModal","localeValue","setLocaleValue","create","container","button","alignSelf","FIFTEEN_DAYS_AGO","Date","setDate","getDate","FIFTEEN_DAYS_LATER","DatePicker_stories","title","component","InteractiveDatePicker","props","setValue","InteractiveDateRangePicker","isRangeValid","undefined","Default","WithPartnerAccentColor","StoryBlock","StoryPart","ButtonWithModal","buttonRef","setIsOpened","Range","ButtonWithRangePopover","Inline","birthdate","setBirthdate","initialValue"],"mappings":"syDAkBA,IAAIA,GAAYC,GAAUA,EACtBC,GAAO,IAAM,CACjB,EAEIC,GAAaF,GAAU,CAAC,CAACA,IAAU,OAAOA,GAAU,UAAY,OAAOA,GAAU,aAAe,OAAOA,EAAM,MAAS,WAStHG,GAAWC,GAAW,CACxB,IAAIC,EAAIC,EACR,KAAM,CAAA,CAAGC,CAAW,EAAIC,EAAAA,WAAW,IAAM,CAAA,EAAI,CAAA,CAAE,EACzCC,EAAUC,EAAAA,OAAO,EAAK,EACtBC,EAAaD,EAAAA,OAAO,WAAW,EAC/BE,EAAMF,EAAAA,OAAON,CAAM,EACzBQ,EAAI,QAAUR,EACdS,EAAAA,UAAU,KACRJ,EAAQ,QAAU,GACX,IAAM,CACXA,EAAQ,QAAU,EACpB,GACC,CAAA,CAAE,EACL,MAAMK,EAASJ,EAAAA,OAAA,EACTK,EAAQL,EAAAA,OAAA,EACRM,EAAiBN,EAAAA,OAAA,EACjBO,EAAMC,EAAAA,QAAQ,IAAM,CACxB,MAAMC,EAAcC,GAAS,CAC3B,IAAIC,EACJ,OAAQA,EAAMT,EAAI,QAAQQ,CAAI,EAAE,UAAY,KAAOC,EAAM,OAAO,EAClE,EACMC,EAAmBF,GAASR,EAAI,QAAQQ,CAAI,EAAE,aAC9CG,EAAeH,GAAS,CAC5B,IAAIC,EACJ,OAAQA,EAAMT,EAAI,QAAQQ,CAAI,EAAE,WAAa,KAAOC,EAAMtB,EAC5D,EACMyB,EAAeJ,GAAS,CAC5B,IAAIC,EACJ,OAAQA,EAAMT,EAAI,QAAQQ,CAAI,EAAE,WAAa,KAAOC,EAAM,iBAC5D,EACMI,EAAeL,GAAS,CAC5B,IAAIC,EACJ,OAAQA,EAAMT,EAAI,QAAQQ,CAAI,EAAE,WAAa,KAAOC,EAAMpB,EAC5D,EACMyB,EAAaN,GAASN,EAAO,QAAQM,CAAI,EAAE,QAC3CO,EAAeP,GAASN,EAAO,QAAQM,CAAI,EAAE,MAAM,UACnDQ,EAAW,CAACR,EAAMS,IAAU,CAChCf,EAAO,QAAQM,CAAI,EAAE,MAAQ,OAAOS,GAAU,WAAaA,EAAMf,EAAO,QAAQM,CAAI,EAAE,KAAK,EAAIS,CACjG,EACMC,EAAiBV,GAAS,CAC9B,KAAM,CAAE,UAAAW,EAAW,MAAA/B,EAAO,SAAAgC,CAAA,EAAalB,EAAO,QAAQM,CAAI,EAAE,MAC5D,GAAI,CAACW,GAAaC,EAAS,MAAQ,UACjC,MAAO,CAAE,MAAAhC,EAAO,MAAO,GAAO,MAAO,MAAA,EAEvC,MAAMiC,EAAWV,EAAYH,CAAI,EAC3Bc,GAAUf,EAAWC,CAAI,EAC/B,MAAO,CACL,MAAApB,EACA,MAAOgC,EAAS,MAAQ,SAAW,CAACE,GAAQD,EAASX,EAAgBF,CAAI,CAAC,EAAGa,EAASjC,CAAK,CAAC,EAC5F,MAAOgC,EAAS,MAAQ,UAAYA,EAAS,MAAQ,MAAA,CAEzD,EACMG,EAAsBf,GAAS,CACnCN,EAAO,QAAQM,CAAI,EAAE,UAAU,QAASgB,GAAaA,GAAU,CACjE,EACMC,EAAe,CAACjB,EAAMkB,IAAe,CACzC,MAAMC,EAAWf,EAAYJ,CAAI,GAC7B,CAACkB,GAAcA,EAAW,KAAME,GAASD,IAAaC,CAAI,IAC5DZ,EAASR,EAAOqB,IAAe,CAC7B,GAAGA,EACH,UAAW,EAAA,EACX,CAEN,EACMC,GAAeC,GAAU,OAAOA,EAAU,IAAc,CAAE,IAAK,OAAA,EAAY,CAAE,IAAK,UAAW,MAAAA,CAAA,EAC7FC,EAAgB,CAACxB,EAAMyB,EAAU,CAAA,IAAO,CAC5C,KAAM,CAAE,SAAAZ,EAAW,EAAA,EAAUY,EACvB7C,EAAQc,EAAO,QAAQM,CAAI,GAAK,KAAOE,EAAgBF,CAAI,EAAIN,EAAO,QAAQM,CAAI,EAAE,MAAM,MAChG,OAAOa,EAAWV,EAAYH,CAAI,EAAEpB,CAAK,EAAIA,CAC/C,EACM8C,GAAe1B,GAAS,CAC5B,KAAM,CAAE,IAAA2B,CAAA,EAAQjC,EAAO,QAAQM,CAAI,EACnC,OAAO2B,CACT,EACMC,GAAc5B,GAAS,CAC3B,KAAM,CAAE,IAAA2B,CAAA,EAAQjC,EAAO,QAAQM,CAAI,EAC/B2B,EAAI,SAAW,OAAOA,EAAI,QAAQ,OAAU,YAC9CA,EAAI,QAAQ,MAAA,CAEhB,EACME,GAAyB7B,GAAS,CACtC,MAAM8B,EAAWzB,EAAYL,CAAI,EAC3BpB,EAAQ4C,EAAcxB,EAAM,CAAE,SAAU,GAAM,EAC9CuB,EAAQO,EAASlD,EAAO,CAAE,cAAA4C,EAAe,WAAAI,GAAY,EAC3D,OAAIL,IAAU,QACZN,EAAajB,EAAM,CAAC,YAAa,iBAAiB,CAAC,EAErDQ,EAASR,EAAOqB,IAAe,CAC7B,GAAGA,EACH,SAAUC,GAAYC,CAAK,CAAA,EAC3B,EACFR,EAAmBf,CAAI,EAChBuB,CACT,EACMQ,GAAgB,CAAC/B,EAAMpB,EAAO6C,EAAU,CAAA,IAAO,CACnD,KAAM,CAAE,SAAAK,EAAW,EAAA,EAAUL,EAC7BjB,EAASR,EAAOqB,IAAe,CAC7B,GAAGA,EACH,MAAAzC,CAAA,EACA,EACEkD,GACFb,EAAajB,CAAI,EAEd6B,GAAsB7B,CAAI,CACjC,EACMgC,GAAgB,CAAChC,EAAMuB,IAAU,CACrCf,EAASR,EAAOqB,IAAe,CAC7B,GAAGA,EACH,SAAUC,GAAYC,CAAK,CAAA,EAC3B,EACFN,EAAajB,CAAI,EACjBe,EAAmBf,CAAI,CACzB,EACMiC,GAAcjC,GAAS,CAC3BQ,EAASR,EAAM,CACb,MAAOE,EAAgBF,CAAI,EAC3B,UAAW,GACX,SAAU,CAAE,IAAK,SAAA,CAAU,CAC5B,EACDe,EAAmBf,CAAI,CACzB,EACMkC,GAAiBlC,GAAS,CAC9B,MAAMa,EAAWV,EAAYH,CAAI,EACjCQ,EAASR,EAAM,CAAC,CAAE,UAAAW,EAAW,MAAA/B,EAAO,SAAAgC,MAAgB,CAClD,MAAOC,EAASjC,CAAK,EACrB,UAAA+B,EACA,SAAAC,CAAA,EACA,EACFG,EAAmBf,CAAI,CACzB,EACMmC,GAAiBnC,GAAS,CAC9B,GAAKM,EAAUN,CAAI,EAGnB,OAAAiB,EAAajB,CAAI,EACV6B,GAAsB7B,CAAI,CACnC,EACMoC,GAAe,CAACC,EAAOC,IAAa,CACxC,MAAMtB,EAAW,IAAM,CACrBsB,EACED,EAAM,OACJ,CAACE,EAAKvC,KACJuC,EAAIvC,CAAI,EAAIU,EAAcV,CAAI,EACvBuC,GAET,CAAA,CAAC,CACH,CAEJ,EACA,OAAAF,EAAM,QAASrC,GAASN,EAAO,QAAQM,CAAI,EAAE,UAAU,IAAIgB,CAAQ,CAAC,EAC7D,IAAM,CACXqB,EAAM,QAASrC,GAAS,CAClBN,EAAO,QAAQM,CAAI,GAAK,MAC1BN,EAAO,QAAQM,CAAI,EAAE,UAAU,OAAOgB,CAAQ,CAElD,CAAC,CACH,CACF,EACMwB,GAAexC,GAAUpB,GAAU,CACvC4B,EAASR,EAAOqB,IAAe,CAC7B,GAAGA,EACH,MAAAzC,CAAA,EACA,EACFqC,EAAajB,EAAM,CAAC,UAAU,CAAC,GAC3BT,EAAW,UAAY,aAAeA,EAAW,UAAY,eAC/DA,EAAW,QAAU,UACrBJ,EAAA,GAEG0C,GAAsB7B,CAAI,CACjC,EACMyC,GAAazC,GAAS,IAAM,CAChC,KAAM,CAAE,SAAAY,CAAA,EAAalB,EAAO,QAAQM,CAAI,EAAE,MACtCY,EAAS,MAAQ,WAAa,CAACL,EAAYP,CAAI,IACjDiB,EAAajB,EAAM,CAAC,SAAU,iBAAiB,CAAC,EAC3C6B,GAAsB7B,CAAI,EAEnC,EACM0C,GAAY,IAAM,CACtBC,GAAK,KAAKnD,EAAI,OAAO,EAAE,QAASQ,GAASiC,GAAWjC,CAAI,CAAC,EACzDT,EAAW,QAAU,YACrBJ,EAAA,CACF,EACMyD,GAAkB,CAACP,EAAOQ,IAAY,CAC1C,MAAMC,EAAQD,EAAQ,UAAWE,GAAW,OAAOA,EAAW,GAAW,EACnE/C,EAAOqC,EAAMS,CAAK,EACpB,OAAO9C,EAAS,KAClB4B,GAAW5B,CAAI,CAEnB,EACMgD,GAA0BH,GAAYA,EAAQ,MAAOE,GAAW,OAAOA,EAAW,GAAW,EAC7FE,GAAmB,IAAM,CAC7B1D,EAAW,QAAU,YACjBF,EAAQ,SACVF,EAAA,CAEJ,EA4CA,MAAO,CACL,cAAAqC,EACA,YAAAE,GACA,cAAAK,GACA,cAAAC,GACA,WAAAJ,GACA,WAAAK,GACA,cAAAC,GACA,cAAAC,GACA,aAAAC,GACA,UAAAM,GACA,WAtDiB,CAAC,CAClB,UAAAQ,EAAYrE,GACZ,UAAAsE,EAAYtE,GACZ,kBAAAuE,EAAoB,EAAA,EAClB,KAAO,CACT,GAAI7D,EAAW,UAAY,aACzB,OAEFA,EAAW,QAAU,aACrB,MAAM8D,EAAOV,GAAK,KAAKjD,EAAO,OAAO,EAC/B2C,EAAQgB,EAAK,OAAQrD,GAASN,EAAO,QAAQM,CAAI,EAAE,OAAO,EAC1DsD,GAAS,CAAA,EACTC,GAAS,CAAA,EACTV,GAAU,CAAA,EAShB,GARAQ,EAAK,QAASrD,GAAS,CACrBsD,GAAOtD,CAAI,EAAIwD,EAAO,KAAA,CACxB,CAAC,EACDnB,EAAM,QAAQ,CAACrC,EAAM8C,IAAU,CAC7B7B,EAAajB,CAAI,EACjBsD,GAAOtD,CAAI,EAAIwD,EAAO,KAAKhC,EAAcxB,EAAM,CAAE,SAAU,EAAA,CAAM,CAAC,EAClE6C,GAAQC,CAAK,EAAIjB,GAAsB7B,CAAI,CAC7C,CAAC,EACGgD,GAAuBH,EAAO,EAAG,CACnC,MAAMY,EAASP,EAAUI,EAAM,EACzBI,EAAgBC,GAAO,SAASF,CAAM,EAAIA,EAAO,YAAcA,EACjE3E,GAAU4E,CAAa,GACzBvE,EAAA,EACKuE,EAAc,QAAQT,EAAgB,GAE3CA,GAAA,CAEJ,MACMG,GACFR,GAAgBP,EAAOQ,EAAO,EAEhCR,EAAM,QAAQ,CAACrC,EAAM8C,IAAU,CAC7BS,GAAOvD,CAAI,EAAI6C,GAAQC,CAAK,CAC9B,CAAC,EACDK,EAAUI,EAAM,EAChBhE,EAAW,QAAU,YACrBJ,EAAA,CAEJ,EAaE,YAAAqD,GACA,UAAAC,GACA,cAAA/B,CAAA,CAEJ,EAAG,CAAA,CAAE,EACCkD,EAAM,CAAA,EACZ,UAAW5D,KAAQR,EAAI,QACjB,OAAO,UAAU,eAAe,KAAKA,EAAI,QAASQ,CAAI,IACxD4D,EAAI5D,CAAI,GAAKd,GAAMD,EAAKS,EAAO,UAAY,KAAO,OAAST,EAAGe,CAAI,IAAM,KAAOd,EAAK,CAClF,cAA+B,IAC/B,IAAK,CAAE,QAAS,IAAA,EAChB,QAAS,GACT,MAAO,CACL,MAAOM,EAAI,QAAQQ,CAAI,EAAE,aACzB,UAAW,GACX,SAAU,CAAE,IAAK,SAAA,CAAU,CAC7B,GAKN,GADAN,EAAO,QAAUkE,EACb,CAACjE,EAAM,QAAS,CAClB,MAAMkE,EAAQ,CAAC,CAAE,KAAA7D,EAAM,SAAA8D,KAAe,CACpC,KAAM,CAAE,UAAAC,EAAW,YAAAC,CAAA,EAAgBlE,EAAAA,QACjC,KAAO,CACL,YAAa,IAAMJ,EAAO,QAAQM,CAAI,EAAE,MACxC,UAAYgB,IACVtB,EAAO,QAAQM,CAAI,EAAE,UAAU,IAAIgB,CAAQ,EACpC,IAAM,CACPtB,EAAO,QAAQM,CAAI,GAAK,MAC1BN,EAAO,QAAQM,CAAI,EAAE,UAAU,OAAOgB,CAAQ,CAElD,EACF,GAEF,CAAChB,CAAI,CAAA,EAEPiE,OAAAA,uBAAqBF,EAAWC,EAAaA,CAAW,EACxDvE,EAAAA,UAAU,IAAM,CACd,MAAMyE,EAAkB,CAACxE,EAAO,QAAQM,CAAI,EAAE,QAC9C,OAAIkE,IACFxE,EAAO,QAAQM,CAAI,EAAE,QAAU,IAQ1B,IAAM,CACPkE,GACExE,EAAO,QAAQM,CAAI,GAAK,OAC1BN,EAAO,QAAQM,CAAI,EAAE,QAAU,GAGrC,CACF,EAAG,CAACA,CAAI,CAAC,EACF8D,EAAS,CACd,GAAGjE,EAAI,cAAcG,CAAI,EACzB,IAAKN,EAAO,QAAQM,CAAI,EAAE,IAC1B,OAAQF,EAAAA,QAAQ,IAAMD,EAAI,UAAUG,CAAI,EAAG,CAACA,CAAI,CAAC,EACjD,SAAUF,EAAAA,QAAQ,IAAMD,EAAI,YAAYG,CAAI,EAAG,CAACA,CAAI,CAAC,CAAA,CACtD,CACH,EACA6D,EAAM,YAAc,QACpBlE,EAAM,QAAUkE,EAChB,MAAMM,EAAiB,CAAC,CAAE,MAAA9B,EAAO,SAAAyB,KAAe,CAC9C,KAAM,CAAE,UAAAC,EAAW,YAAAC,CAAA,EAAgBlE,EAAAA,QACjC,KAAO,CACL,YAAa,IAAM,KAAK,UAAUuC,EAAM,IAAKrC,GAASN,EAAO,QAAQM,CAAI,EAAE,KAAK,CAAC,EACjF,UAAYgB,IACVqB,EAAM,QAASrC,GAASN,EAAO,QAAQM,CAAI,EAAE,UAAU,IAAIgB,CAAQ,CAAC,EAC7D,IAAM,CACXqB,EAAM,QAASrC,GAASN,EAAO,QAAQM,CAAI,EAAE,UAAU,OAAOgB,CAAQ,CAAC,CACzE,EACF,GAGF,CAAC,KAAK,UAAUqB,CAAK,CAAC,CAAA,EAExB4B,OAAAA,uBAAqBF,EAAWC,EAAaA,CAAW,EACjDF,EACLzB,EAAM,OACJ,CAACE,EAAKvC,KACJuC,EAAIvC,CAAI,EAAIH,EAAI,cAAcG,CAAI,EAC3BuC,GAET,CAAA,CAAC,CACH,CAEJ,EACA4B,EAAe,YAAc,iBAC7BvE,EAAe,QAAUuE,CAC3B,CACA,MAAO,CACL,WAAY5E,EAAW,QACvB,MAAOI,EAAM,QACb,eAAgBC,EAAe,QAC/B,cAAeC,EAAI,cACnB,YAAaA,EAAI,YACjB,cAAeA,EAAI,cACnB,cAAeA,EAAI,cACnB,WAAYA,EAAI,WAChB,WAAYA,EAAI,WAChB,cAAeA,EAAI,cACnB,cAAeA,EAAI,cACnB,aAAcA,EAAI,aAClB,UAAWA,EAAI,UACf,WAAYA,EAAI,UAAA,CAEpB,ECtYO,MAAMuE,GAA2B,IAAe,CACrD,MAAMC,EAAY,UAAU,UAAU,IAAIC,GAAYA,EAAS,MAAM,GAAG,EAAE,CAAC,CAAC,EAE5E,UAAWC,KAAWF,EACpB,GAAIG,GAAcD,CAAO,EACvB,OAAOE,GAAiBF,CAAO,EAKnC,OAAOG,EACT,ECKMC,GAAS,CACb,CAAE,MAAO,KAAM,KAAMC,EAAE,0BAA0B,CAAA,EACjD,CAAE,MAAO,KAAM,KAAMA,EAAE,2BAA2B,CAAA,EAClD,CAAE,MAAO,KAAM,KAAMA,EAAE,wBAAwB,CAAA,EAC/C,CAAE,MAAO,KAAM,KAAMA,EAAE,wBAAwB,CAAA,EAC/C,CAAE,MAAO,KAAM,KAAMA,EAAE,sBAAsB,CAAA,EAC7C,CAAE,MAAO,KAAM,KAAMA,EAAE,uBAAuB,CAAA,EAC9C,CAAE,MAAO,KAAM,KAAMA,EAAE,uBAAuB,CAAA,EAC9C,CAAE,MAAO,KAAM,KAAMA,EAAE,yBAAyB,CAAA,EAChD,CAAE,MAAO,KAAM,KAAMA,EAAE,4BAA4B,CAAA,EACnD,CAAE,MAAO,KAAM,KAAMA,EAAE,0BAA0B,CAAA,EACjD,CAAE,MAAO,KAAM,KAAMA,EAAE,2BAA2B,CAAA,EAClD,CAAE,MAAO,KAAM,KAAMA,EAAE,2BAA2B,CAAA,CACpD,EAEMC,EAASC,GAAW,OAAO,CAC/B,UAAW,CAAE,WAAY,CAAA,EACzB,UAAW,CACT,SAAU,GACV,SAAU,CAAA,EAEZ,IAAK,CACH,SAAU,GACV,SAAU,CAAA,EAEZ,WAAY,CACV,SAAU,GACV,SAAU,CAAA,EAEZ,KAAM,CACJ,SAAU,IACV,SAAU,CAAA,EAEZ,MAAO,CACL,YAAaC,EAAO,SAAS,GAAG,CAAA,CAEpC,CAAC,EAaKC,GAAQC,GAAMb,GAAA,EAA2B,IAAI,EAChD,aACA,KAAK,KAAM,IAAM,KAAK,EACtB,KAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAK,EACtE,UAAU,IAAM,KAAK,EAEXc,GAAmB,CAAC,CAC/B,MAAAtG,EACA,MAAAuG,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,SAAAvD,EAAWwD,GACX,MAAOC,EACP,MAAAC,CACF,IAA6B,CAC3B,KAAM,CAAE,QAAAC,CAAA,EAAYC,EAAcC,GAAY,KAAK,EAO7CC,EAAUtG,EAAAA,OAAO,IAAI,GAA+B,EACpDuG,EAAwBvG,EAAAA,OAAOV,GAAS,IAAI,EAE5C,CAAE,MAAAiF,EAAO,cAAA1B,CAAA,EAAkBpD,GAAQ,CACvC,KAAM,CACJ,aAAc+G,EAAalH,CAAK,EAAImH,GAAYnH,CAAK,EAAI,OACzD,SAAUoH,GACRF,EAAaE,CAAI,EACb,CACE,IAAKA,EAAK,IAAI,KAAA,EACd,MAAOA,EAAK,MAAM,KAAA,EAClB,KAAMA,EAAK,KAAK,KAAA,CAAK,EAEvB,OACN,SAAU,WACV,SAAUA,GAAQ,CAChB,MAAMC,EAAenE,EAASkE,CAAI,EAElC,OAAIE,GAAUD,CAAY,GAAKH,EAAaE,CAAI,EACvCX,IAAgBc,GAAoBH,CAAI,CAAC,GAEhDX,IAAgB,MAAS,EAClBY,EAEX,CAAA,CACF,CACD,EAEKX,EAAe,IAAM,EAEvBO,EAAsB,SACrBD,EAAQ,QAAQ,IAAI,KAAK,GAAKA,EAAQ,QAAQ,IAAI,OAAO,GAAKA,EAAQ,QAAQ,IAAI,MAAM,IAEzFzD,EAAc,MAAM,CAExB,EAEA,aACGiE,EAAA,CAAK,MAAO,CAACvB,EAAO,UAAWW,CAAK,EACnC,SAAAa,EAAAA,IAACxC,EAAA,CAAM,KAAK,OACT,SAAA,CAAC,CAAE,MAAAtC,EAAO,SAAA+E,EAAU,MAAA1H,KACnByH,EAAAA,IAACE,EAAA,CACC,MAAApB,EACA,OAAQqB,GAAM,CACZ,MAAMC,QACHL,EAAA,CAAK,MAAOX,EAAUZ,EAAO,IAAMA,EAAO,UACzC,SAAAwB,EAAAA,IAACK,EAAA,CACC,GAAAF,EACA,SAAApB,EACA,OAAQU,EAAavE,CAAK,GAAKuE,EAAaP,CAAa,IAAMV,EAAO,MACtE,YAAaD,EAAE,gBAAgB,EAC/B,MAAOhG,GAAO,KAAO,OACrB,OAAQ,IAAM,CACZgH,EAAQ,QAAQ,IAAI,KAAK,EACzBN,EAAAA,CACF,EACA,WAAY,GACZ,aAAcmB,GAAO,CACnBH,EAAS,CACP,IAAAG,EACA,MAAO7H,GAAO,OAAS,GACvB,KAAMA,GAAO,MAAQ,EAAA,CACtB,CACH,EACA,QAAQ,QACR,UAAW,EACX,aAAa,UAAA,CAAA,EAEjB,EAGI+H,EACJN,EAAAA,IAACO,GAAA,CACC,MAAOhI,GAAO,QAAU,GAAK,OAAYA,GAAO,MAChD,OAAQkH,EAAavE,CAAK,GAAKuE,EAAaP,CAAa,IAAMV,EAAO,MACtE,SAAAO,EACA,YAAaR,EAAE,kBAAkB,EACjC,WAAY,GACZ,MAAOD,GACP,cAAegC,GAAS,CACtBf,EAAQ,QAAQ,IAAI,OAAO,EAC3BN,EAAAA,EAEAgB,EAAS,CACP,IAAK1H,GAAO,KAAO,GACnB,MAAA+H,EACA,KAAM/H,GAAO,MAAQ,EAAA,CACtB,CACH,CAAA,CAAA,EAIEiI,QACHT,EAAA,CAAK,MAAOX,EAAUZ,EAAO,KAAOA,EAAO,WAC1C,SAAAwB,EAAAA,IAACK,EAAA,CACC,MAAO9H,GAAO,KACd,OAAQkH,EAAavE,CAAK,GAAKuE,EAAaP,CAAa,IAAMV,EAAO,MACtE,SAAAO,EACA,YAAaR,EAAE,iBAAiB,EAChC,OAAQ,IAAM,CACZgB,EAAQ,QAAQ,IAAI,MAAM,EAC1BN,EAAAA,CACF,EACA,WAAY,GACZ,aAAcuB,GACZP,EAAS,CACP,IAAK1H,GAAO,KAAO,GACnB,MAAOA,GAAO,OAAS,GACvB,KAAAiI,CAAA,CACD,EAEH,QAAQ,QACR,UAAW,EACX,aAAa,WAAA,CAAA,EAEjB,EAGF,cACGC,EAAA,CACE,SAAA,CAAA9B,KAAU,MACT+B,EAAAA,KAACC,GAAA,CAAM,UAAU,MAAM,MAAO,EAC3B,SAAA,CAAAP,EAAI,IAAEE,EAAM,IAAEE,CAAA,EACjB,EAEAE,EAAAA,KAACC,GAAA,CAAM,UAAU,MAAM,MAAO,EAC3B,SAAA,CAAAL,EAAM,IAAEF,EAAI,IAAEI,CAAA,EACjB,EAGFR,EAAAA,IAACY,GAAA,CAAW,QAAS1F,GAASgE,CAAA,CAAe,CAAA,EAC/C,CAEJ,CAAA,CAAA,EAGN,CAAA,CACF,CAEJ;;;;;;;;;;;;mBCvNO,MAAM2B,GAAkB,CAAC,CAC9B,MAAAtI,EACA,MAAAuG,EACA,SAAAC,EAAW,GACX,cAAAC,EACA,MAAOE,EACP,MAAAC,CACF,IAEIa,EAAAA,IAACnB,GAAA,CACC,MAAAtG,EACA,MAAAuG,EACA,SAAAC,EACA,cAAAC,EACA,MAAOE,EACP,MAAAC,EACA,SAAU2B,EAAA,CAAA,2zBC3BT,MAAMC,GAAqB,IAAe,CAC/C,MAAMC,EAAe/H,EAAAA,OAAO,EAAI,EAEhC,OAAI+H,EAAa,SACfA,EAAa,QAAU,GAChB,IAGFA,EAAa,OACtB,ECyBMxC,EAASC,GAAW,OAAO,CAC/B,MAAO,CACL,KAAM,CAAA,EAER,eAAgB,CACd,OAAQ,EAAA,EAEV,QAAS,CACP,QAASwC,GAAS,EAAE,CAAA,EAEtB,eAAgB,CACd,QAASA,GAAS,EAAE,CAAA,EAEtB,kBAAmB,CACjB,KAAM,CAAA,EAER,OAAQ,CACN,KAAM,CAAA,EAER,YAAa,CACX,MAAO,GAAA,EAET,WAAY,CACV,MAAO,GAAA,EAET,QAAS,CACP,gBAAiBA,GAAS,CAAC,CAAA,EAE7B,QAAS,CACP,KAAM,EACN,OAAQ,GACR,WAAY,SACZ,eAAgB,QAAA,EAElB,aAAc,CACZ,KAAM,EACN,WAAY,QAAA,EAEd,kBAAmB,CACjB,SAAU,WACV,IAAK,EACL,MAAO,EACP,OAAQ,EACR,KAAM,EACN,gBAAiBvC,EAAO,QAAQ,GAAG,CAAA,EAErC,uBAAwB,CACtB,KAAM,KAAA,EAER,qBAAsB,CACpB,MAAO,KAAA,EAET,UAAW,CACT,MAAO,GACP,OAAQ,GACR,WAAY,SACZ,eAAgB,SAChB,aAAc,EAAA,EAEhB,iBAAkB,CAAA,EAClB,eAAgB,CACd,gBAAiBA,EAAO,QAAQ,GAAG,CAAA,EAErC,iBAAkB,CAAA,EAClB,kBAAmB,CACjB,gBAAiBA,EAAO,QAAQ,GAAG,CAAA,EAErC,eAAgB,CACd,SAAU,WACV,KAAM,EACN,MAAO,EACP,OAAQ,EACR,MAAO,EACP,OAAQ,EACR,iBAAkB,OAClB,aAAc,EACd,gBAAiBA,EAAO,QAAQ,GAAG,CAAA,CAEvC,CAAC,EAEKwC,GAA0B,IAC1BC,GAA+B,IAC/BC,GAA8B,IAE9BC,GAAkB,EAkBlBC,GAA6B,CACjC/C,EAAE,uBAAuB,EACzBA,EAAE,uBAAuB,EACzBA,EAAE,wBAAwB,EAC1BA,EAAE,0BAA0B,EAC5BA,EAAE,yBAAyB,EAC3BA,EAAE,uBAAuB,EACzBA,EAAE,yBAAyB,CAC7B,EAEMgD,GAAyB,CAC7BhD,EAAE,0BAA0B,EAC5BA,EAAE,2BAA2B,EAC7BA,EAAE,wBAAwB,EAC1BA,EAAE,wBAAwB,EAC1BA,EAAE,sBAAsB,EACxBA,EAAE,uBAAuB,EACzBA,EAAE,uBAAuB,EACzBA,EAAE,yBAAyB,EAC3BA,EAAE,4BAA4B,EAC9BA,EAAE,0BAA0B,EAC5BA,EAAE,2BAA2B,EAC7BA,EAAE,2BAA2B,CAC/B,EAOMiD,GAAe,CACnB,OAAQ,EACR,OAAQ,EACR,QAAS,EACT,UAAW,EACX,SAAU,EACV,OAAQ,EACR,SAAU,CACZ,EAaMC,GAAgBC,GAAa,CACjC,OAAQ,UACR,QAAS,CAAE,EAAG,IAAK,EAAG,GAAA,EACtB,UAAW,CACb,CAAC,EAEKC,GAAY,CAACpJ,EAAeqJ,IAA+C,CAC/E,MAAMjC,EAAOkC,GAAM,IAAItJ,EAAOqJ,CAAM,EACpC,OAAOjC,EAAK,UACRxC,EAAO,KAAK,CAAE,IAAKwC,EAAK,KAAA,EAAQ,MAAOA,EAAK,MAAA,EAAS,KAAMA,EAAK,MAAK,CAAG,EACxExC,EAAO,KAAA,CACb,EAEM2E,GAAa,CAACvJ,EAAuCqJ,KAClD,CACL,MAAOD,GAAUpJ,EAAM,MAAOqJ,CAAM,EACpC,IAAKD,GAAUpJ,EAAM,IAAKqJ,CAAM,CAAA,GAI9BG,GAAgB,CAACxJ,EAAuBqJ,IAC/BC,GAAM,IAAA,EAAM,KAAKtJ,EAAM,IAAI,EAAE,MAAMA,EAAM,KAAK,EAAE,KAAKA,EAAM,GAAG,EAC/D,OAAOqJ,CAAM,EAGdI,GAAyB,CACpCzJ,EACAqJ,IACG,CACH,MAAMK,EAAQH,GAAWvJ,EAAOqJ,CAAM,EAEtC,OAAIK,EAAM,MAAM,OAAA,GAAYA,EAAM,IAAI,SAC7B,GAGL,CAAAC,EAAYD,EAAM,MAAM,MAAOA,EAAM,IAAI,KAAK,CAKpD,EAEMA,GAAQ,CAACE,EAAeC,IAA0B,CACtD,MAAM1F,EAAS,CAAA,EACf,QAAS,EAAIyF,EAAO,GAAKC,EAAK,IAC5B1F,EAAO,KAAK,CAAC,EAEf,OAAOA,CACT,EAEM2F,GAAa,CAAKC,EAAYC,IAA6B,CAC/D,MAAM7F,EAAS,CAAA,EACT8F,EAAW,KAAK,KAAKF,EAAM,OAASC,CAAS,EACnD,QAASE,EAAI,EAAGA,EAAID,EAAUC,IAC5B/F,EAAO,KAAK4F,EAAM,MAAMG,EAAIF,GAAYE,EAAI,GAAKF,CAAS,CAAC,EAG7D,OAAO7F,CACT,EAEMgG,GAAS,CAAKJ,EAAYK,EAAgBpK,IAAkB,CAChE,MAAMqK,EAAgB,IAAI,MAAMD,EAASL,EAAM,MAAM,EAAE,KAAK/J,CAAK,EACjE,MAAO,CAAC,GAAG+J,EAAO,GAAGM,CAAa,CACpC,EAEaC,GAAuBlD,GAAkC,CACpE,MAAMmD,MAAgB,KACtBA,EAAU,QAAQA,EAAU,QAAA,EAAY,CAAC,EAEzC,MAAMC,EAAgC,CACpC,IAAKD,EAAU,QAAA,EACf,MAAOA,EAAU,SAAA,EACjB,KAAMA,EAAU,YAAA,CAAY,EAG9B,OAAOZ,EAAYvC,EAAMoD,CAAa,CACxC,EAEaC,GACX,CAACC,EAAeC,IACfvD,GAAkC,CACjC,MAAMwD,EAAsB,CAC1B,IAAKF,EAAQ,QAAA,EACb,MAAOA,EAAQ,SAAA,EACf,KAAMA,EAAQ,YAAA,CAAY,EAEtBG,EAAsB,CAC1B,IAAKF,EAAQ,QAAA,EACb,MAAOA,EAAQ,SAAA,EACf,KAAMA,EAAQ,YAAA,CAAY,EAG5B,OACGhB,EAAYvC,EAAMwD,CAAG,GAAKE,GAAa1D,EAAMyD,CAAG,GACjDE,EAAa3D,EAAMwD,CAAG,GACtBG,EAAa3D,EAAMyD,CAAG,CAE1B,EAEIG,GAAe5D,GAAkC,CACrD,MAAM6D,MAAY,KAClB,OACE7D,EAAK,MAAQ6D,EAAM,QAAA,GACnB7D,EAAK,QAAU6D,EAAM,SAAA,GACrB7D,EAAK,OAAS6D,EAAM,YAAA,CAExB,EAEMC,GAAgB,CAACnD,EAAeE,IAAmC,CACvE,MAAMkD,EAAY,CAACxH,EAAuByD,IAAiC,CACzE,MAAMgE,EAAUhE,EAAK,QAAA,EACfiE,EAAYjE,EAAK,SAAA,EACjBkE,EAAWlE,EAAK,YAAA,EAEtB,OAAIA,EAAK,SAAA,IAAeW,EACfpE,EAGFwH,EACL,CAAC,GAAGxH,EAAK,CAAE,IAAKyH,EAAS,MAAOC,EAAW,KAAMC,EAAU,EAC3D,IAAI,KAAKrD,EAAMF,EAAOqD,EAAU,CAAC,CAAA,CAErC,EAEA,OAAOD,EAAU,CAAA,EAAI,IAAI,KAAKlD,EAAMF,EAAO,CAAC,CAAC,CAC/C,EAEMwD,GAAgB,CACpBxD,EACAE,EACAuD,IAC+B,CAC/B,MAAMC,EAAoBxC,GAAauC,CAAY,EAC7CE,EAAoB,IAAI,KAAKzD,EAAMF,EAAO,CAAC,EAAE,OAAA,EAC7C4D,EAAaT,GAAcnD,EAAOE,CAAI,EAAE,IAAIb,GAAQxC,EAAO,KAAKwC,CAAI,CAAC,EAErEwE,EACJF,GAAqBD,EACjBC,EAAoBD,EACpB3C,GAAkB2C,EAAoBC,EAE5C,QAASxB,EAAI,EAAGA,EAAI0B,EAAiB1B,IACnCyB,EAAW,QAAQ/G,EAAO,MAAM,EAElC,MAAMiH,EAAQ/B,GAAW6B,EAAY7C,EAAe,EAC9CgD,EAAWD,EAAMA,EAAM,OAAS,CAAC,EAEvC,OAAKC,IAGLD,EAAMA,EAAM,OAAS,CAAC,EAAI1B,GAAO2B,EAAUhD,GAAiBlE,EAAO,MAAM,GAElEiH,CACT,EAEME,GAAkB,CACtBC,EACAR,EAA0C,WACzB,CACjB,MAAMC,EAAoBxC,GAAauC,CAAY,EAC7CS,EAAoBD,EAAS,MAAMP,CAAiB,EACpDS,EAAmBF,EAAS,MAAM,EAAGP,CAAiB,EAG5D,MAAO,CAAC,GAAGQ,EAAmB,GAAGC,CAAgB,CACnD,EAEMnB,EAAe,CAACoB,EAAuBC,IACpCD,EAAM,MAAQC,EAAM,KAAOD,EAAM,QAAUC,EAAM,OAASD,EAAM,OAASC,EAAM,KAGlFtB,GAAe,CAACqB,EAAuBC,IAEzCD,EAAM,KAAOC,EAAM,MAClBD,EAAM,OAASC,EAAM,MAAQD,EAAM,MAAQC,EAAM,OACjDD,EAAM,OAASC,EAAM,MAAQD,EAAM,QAAUC,EAAM,OAASD,EAAM,IAAMC,EAAM,IAI7EzC,EAAc,CAACwC,EAAuBC,IAExCD,EAAM,KAAOC,EAAM,MAClBD,EAAM,OAASC,EAAM,MAAQD,EAAM,MAAQC,EAAM,OACjDD,EAAM,OAASC,EAAM,MAAQD,EAAM,QAAUC,EAAM,OAASD,EAAM,IAAMC,EAAM,IAI7EC,GAAerM,GACZqG,GAAMrG,CAAK,EACf,KAAK,CAAE,MAAOsM,GAAE,EAAG,IAAKA,GAAE,GAAK,IAAM,EAAI,EACzC,UAAU,IAAM,EAAK,EAGpBC,GAAiB,CAACnF,EAAsBpH,IACrCqG,GAAMrG,CAAK,EACf,KAAK4E,EAAO,EAAE,KAAK0H,GAAE,OAAA,CAAQ,EAAGtM,GAAS+K,EAAa/K,EAAOoH,CAAI,CAAC,EAClE,KAAKxC,EAAO,EAAE,KAAM,IAAM,EAAK,EAC/B,KAAK0H,GAAE,KAAKD,EAAW,EAAG,CAAC,CAAE,MAAAzC,EAAO,IAAAC,KAE/BD,EAAM,UAAYC,EAAI,OAAA,GAAYF,EAAYC,EAAM,MAAOC,EAAI,KAAK,EAC/D,GAIPD,EAAM,MAAM,CACV,KAAMA,GAASmB,EAAanB,EAAOxC,CAAI,EACvC,KAAM,IAAM,EAAA,CACb,GACDyC,EAAI,MAAM,CACR,KAAMA,GAAOkB,EAAalB,EAAKzC,CAAI,EACnC,KAAM,IAAM,EAAA,CACb,CAEJ,EACA,WAAA,EAGCoF,GAAwB,CAC5BpF,EACApH,IACyC,CACzC,GAAI,CAACqM,GAAYrM,CAAK,EACpB,MAAO,OAGT,KAAM,CAAE,MAAA4J,EAAO,IAAAC,CAAA,EAAQ7J,EACvB,GAAI4J,EAAM,OAAA,GAAYC,EAAI,SACxB,MAAO,OAGT,MAAM4C,EAAY7C,EAAM,MAClB8C,EAAU7C,EAAI,MAMpB,OAHIF,EAAY8C,EAAWC,CAAO,GAG9B3B,EAAa0B,EAAWC,CAAO,EAC1B,OAEL3B,EAAa3D,EAAMqF,CAAS,EACvB,QAEL1B,EAAa3D,EAAMsF,CAAO,EACrB,MAEL/C,EAAYvC,EAAMqF,CAAS,GAAK3B,GAAa1D,EAAMsF,CAAO,EACrD,UAEF,MACT,EAEMC,GAA4B,CAACR,EAAuBC,IAAkC,CAC1F,MAAMQ,EAAY,IAAI,KAAKT,EAAM,KAAMA,EAAM,MAAOA,EAAM,GAAG,EACvDU,EAAY,IAAI,KAAKT,EAAM,KAAMA,EAAM,MAAOA,EAAM,GAAG,EAEvDU,EAAW,KAAK,IAAID,EAAU,UAAYD,EAAU,SAAS,EACnE,OAAO,KAAK,MAAME,GAAY,IAAO,KAAO,GAAG,CACjD,EAEMC,GAAkB,CACtBC,EACAC,IACoB,CACpB,KAAM,CAAE,MAAArD,EAAO,IAAAC,CAAA,EAAQmD,EAGvB,GAAIpD,EAAM,SACR,MAAO,CAAE,MAAOhF,EAAO,KAAKqI,CAAY,EAAG,IAAKrI,EAAO,MAAK,EAE9D,GAAIiF,EAAI,SACN,OAAIF,EAAYsD,EAAcrD,EAAM,KAAK,EAChC,CAAE,MAAAA,EAAO,IAAKhF,EAAO,KAAKqI,CAAY,CAAA,EAGxC,CAAE,MAAOrI,EAAO,KAAKqI,CAAY,EAAG,IAAKD,EAAa,KAAA,EAI/D,GAAIlC,GAAamC,EAAcrD,EAAM,KAAK,EACxC,MAAO,CAAE,MAAOhF,EAAO,KAAKqI,CAAY,EAAG,IAAKD,EAAa,GAAA,EAE/D,GAAIrD,EAAYsD,EAAcpD,EAAI,KAAK,EACrC,MAAO,CAAE,MAAOmD,EAAa,MAAO,IAAKpI,EAAO,KAAKqI,CAAY,CAAA,EAInE,MAAMC,EAAgBP,GAA0B/C,EAAM,MAAOqD,CAAY,EACnEE,EAAcR,GAA0B9C,EAAI,MAAOoD,CAAY,EAErE,OAAIC,EAAgBC,EACX,CAAE,MAAOvI,EAAO,KAAKqI,CAAY,EAAG,IAAKD,EAAa,GAAA,EAExD,CAAE,MAAOA,EAAa,MAAO,IAAKpI,EAAO,KAAKqI,CAAY,CAAA,CACnE,EAEMG,GAAoB,KAAkB,CAC1C,MAAO,IAAI,KAAA,EAAO,SAAA,EAClB,KAAM,IAAI,KAAA,EAAO,YAAA,CACnB,GAEMC,EAAe,CAACrN,EAA2BqJ,IAC3CiE,GAAiBtN,CAAK,EACjB4E,EAAO,KAAA,EAETwE,GAAUpJ,EAAOqJ,CAAM,EAG1BkE,GAAoB,CAACpB,EAAkBC,IACpCD,EAAM,KAAOC,EAAM,MAASD,EAAM,OAASC,EAAM,MAAQD,EAAM,MAAQC,EAAM,MAGhFoB,GAAoB,CAACrB,EAAkBC,IACpCD,EAAM,OAASC,EAAM,MAAQD,EAAM,QAAUC,EAAM,MAGtDqB,GAAe,CAACtB,EAAkBC,IAC/BmB,GAAkBpB,EAAOC,CAAK,EAAID,EAAQC,EAG7CsB,GAAe,CAACvB,EAAkBC,IAC/BmB,GAAkBpB,EAAOC,CAAK,EAAIA,EAAQD,EAG7CwB,EAAqB,CAAC,CAAE,MAAA5F,EAAO,KAAAE,KAC/BF,IAAU,GACL,CAAE,MAAO,EAAG,KAAME,EAAO,CAAA,EAE3B,CAAE,MAAOF,EAAQ,EAAG,KAAAE,CAAA,EAGvB2F,GAAqB,CAAC,CAAE,MAAA7F,EAAO,KAAAE,KAC/BF,IAAU,EACL,CAAE,MAAO,GAAI,KAAME,EAAO,CAAA,EAE5B,CAAE,MAAOF,EAAQ,EAAG,KAAAE,CAAA,EAavB4F,GAAkB,CAAC,CACvB,WAAA7E,EACA,MAAAhJ,EACA,eAAA8N,EAAiB,QACjB,WAAAC,EACA,SAAAC,EACA,SAAAC,EACA,SAAAvG,CACF,IAA4B,CAC1B,MAAMwG,EAAahN,EAAAA,QACjB,IAAM8H,EAAW,IAAI,CAAC5H,EAAM8C,KAAW,CAAE,KAAA9C,EAAM,MAAO8C,CAAA,EAAQ,EAC9D,CAAC8E,CAAU,CAAA,EAGPmF,EAAYjN,EAAAA,QAChB,IACEwI,GAAM1J,EAAM,KAAO,EAAGA,EAAM,KAAO,CAAC,EAAE,IAAIiI,IAAS,CACjD,KAAMA,EAAK,SAAA,EACX,MAAOA,CAAA,EACP,EACJ,CAACjI,EAAM,IAAI,CAAA,EAGPoO,EAAerG,GAAkB,CACrCL,EAAS,CAAE,KAAM1H,EAAM,KAAM,MAAA+H,EAAO,CACtC,EAEMsG,EAAcpG,GAAiB,CACnCP,EAAS,CAAE,KAAAO,EAAM,MAAOjI,EAAM,MAAO,CACvC,EAEMsO,EAAmB,IAAM,CAC7B5G,EAASkG,GAAmB5N,CAAK,CAAC,CACpC,EAEMuO,EAAe,IAAM,CACzB7G,EAASiG,EAAmB3N,CAAK,CAAC,CACpC,EAEMwO,EAAsBR,EAExBhO,EAAM,MAAQgO,EAAS,MAAQhO,EAAM,OAASgO,EAAS,MADvD,GAEES,EAAkBR,EAEpBjO,EAAM,MAAQiO,EAAS,MAAQjO,EAAM,OAASiO,EAAS,MADvD,GAGJ,OACE9F,EAAAA,KAACD,EAAA,CAAI,UAAU,MAAM,WAAW,SAC7B,SAAA,CAAA4F,IAAmB,UAAYC,IAAe,IAC7C5F,EAAAA,KAAAuG,EAAAA,SAAA,CACE,SAAA,CAAAjH,EAAAA,IAACkH,EAAA,CACC,KAAK,QACL,KAAK,WACL,KAAK,oBACL,SAAUH,EACV,QAASF,EACT,UAAWtI,EAAE,2BAA2B,CAAA,CAAA,EAG1CyB,EAAAA,IAACmH,GAAA,CAAK,SAAU,EAAA,CAAI,CAAA,EACtB,EAGFnH,EAAAA,IAACO,GAAA,CACC,MAAOkG,EACP,MAAOlO,EAAM,MACb,cAAeoO,EACf,KAAK,aACL,KAAK,QACL,WAAY,GACZ,MAAOnI,EAAO,WAAA,CAAA,EAGhBwB,EAAAA,IAACO,GAAA,CACC,MAAOmG,EACP,MAAOnO,EAAM,KACb,cAAeqO,EACf,KAAK,aACL,KAAK,QACL,WAAY,GACZ,MAAOpI,EAAO,UAAA,CAAA,EAGf8H,IAAe,IACd5F,EAAAA,KAAAuG,EAAAA,SAAA,CACE,SAAA,CAAAjH,EAAAA,IAACmH,GAAA,CAAK,SAAU,EAAA,CAAI,EAEnBd,IAAmB,SAClB3F,EAAAA,KAAAuG,EAAAA,SAAA,CACE,SAAA,CAAAjH,EAAAA,IAACkH,EAAA,CACC,KAAK,QACL,KAAK,WACL,KAAK,oBACL,SAAUH,EACV,QAASF,EACT,UAAWtI,EAAE,2BAA2B,CAAA,CAAA,EAG1CyB,EAAAA,IAACoH,EAAA,CAAM,MAAO,EAAA,CAAI,CAAA,EACpB,EAGFpH,EAAAA,IAACkH,EAAA,CACC,KAAK,QACL,KAAK,WACL,KAAK,qBACL,SAAUF,EACV,QAASF,EACT,UAAWvI,EAAE,uBAAuB,CAAA,CAAA,CACtC,CAAA,CACF,CAAA,EAEJ,CAEJ,EAWM8I,GAAgB,CAAC,CACrB,MAAA/G,EACA,KAAAE,EACA,MAAAjI,EACA,aAAAwL,EACA,aAAAuD,EACA,SAAArH,CACF,IAA0B,CACxB,MAAMsE,EAAW9K,EAAAA,QAAQ,IAAM6K,GAAgBhD,GAAcyC,CAAY,EAAG,CAACA,CAAY,CAAC,EACpFK,EAAQ3K,EAAAA,QACZ,IAAMqK,GAAcxD,EAAOE,EAAMuD,CAAY,EAC7C,CAACzD,EAAOE,EAAMuD,CAAY,CAAA,EAG5B,cACGhE,EAAA,CACC,SAAA,CAAAC,MAACS,EAAA,CAAI,UAAU,MAAM,WAAW,SAAS,MAAOjC,EAAO,QACpD,SAAA+F,EAAS,IAAIgD,GACZvH,EAAAA,IAACD,EAAA,CAAmB,MAAOvB,EAAO,QAChC,SAAAwB,EAAAA,IAACwH,EAAA,CAAS,QAAQ,SAAS,MAAO9I,EAAO,KAAK,GAAG,EAC9C,SAAA6I,EAAQ,UAAU,EAAG,CAAC,CAAA,CACzB,CAAA,EAHSA,CAIX,CACD,EACH,EAECnD,EAAM,IAAI,CAACqD,EAAMC,IAChB1H,EAAAA,IAACS,GAAoB,UAAU,MAAM,WAAW,SAAS,MAAOjC,EAAO,QACpE,WAAK,IAAI,CAACmB,EAAMgI,IAAc,CAC7B,MAAMC,EAAajI,EAAK,MAAM,CAC5B,KAAMA,GAAQF,EAAa6H,CAAY,GAAK,CAACA,EAAa3H,CAAI,EAC9D,KAAM,IAAM,EAAA,CACb,EACKkI,EAAalI,EAAK,MAAM,CAC5B,KAAMA,GAAQmF,GAAenF,EAAMpH,CAAK,EACxC,KAAM,IAAM,EAAA,CACb,EACKuP,EAAUnI,EAAK,MAAM,CACzB,KAAMA,GAAQ4D,GAAY5D,CAAI,EAC9B,KAAM,IAAM,EAAA,CACb,EACKoI,EAAiBpI,EAAK,MAAM,CAChC,KAAMA,GAAQoF,GAAsBpF,EAAMpH,CAAK,EAC/C,KAAM,IAAM,MAAA,CACb,EAED,OACEmI,EAAAA,KAACX,EAAA,CAAqB,MAAOvB,EAAO,aACjC,SAAA,CAAAuJ,IAAmB,QAClB/H,EAAAA,IAACD,EAAA,CACC,MAAO,CACLvB,EAAO,kBACPuJ,IAAmB,SAAWvJ,EAAO,uBACrCuJ,IAAmB,OAASvJ,EAAO,oBAAA,CACrC,CAAA,EAIJkC,EAAAA,KAACsH,GAAA,CACC,SAAUJ,EACV,QAAS,IAAMjI,EAAK,MAAM,CAAE,KAAMM,EAAU,KAAMzH,GAAM,EACxD,MAAO,CAAC,CAAE,QAAAyP,EAAS,QAAAC,EAAS,QAAAC,KAAc,CACxC3J,EAAO,UACPyJ,GAAWzJ,EAAO,iBAClB0J,GAAW1J,EAAO,eAClB2J,GAAW3J,EAAO,iBAClBqJ,GAAcrJ,EAAO,iBAAA,EAGvB,SAAA,CAAAwB,EAAAA,IAACwH,EAAA,CACC,QAAQ,eACR,MACEK,EACInJ,EAAO,QAAQ,SACfkJ,EACElJ,EAAO,KAAK,GAAG,EACfoJ,EACEpJ,EAAO,QAAQ,GAAG,EAClBA,EAAO,KAAK,GAAG,EAGxB,SAAAiB,EAAK,MAAM,CAAE,KAAM,CAAC,CAAE,IAAAS,CAAA,IAAUA,EAAI,SAAA,EAAY,KAAM,IAAM,IAAK,CAAA,CAAA,EAGnE0H,GAAW9H,EAAAA,IAACD,EAAA,CAAK,MAAOvB,EAAO,cAAA,CAAgB,CAAA,CAAA,CAAA,CAClD,CAAA,EAtCSmJ,CAuCX,CAEJ,CAAC,CAAA,EA7DOD,CA8DV,CACD,CAAA,EACH,CAEJ,EAgBMU,GAA2B,CAAC,CAChC,MAAA7P,EACA,OAAAqJ,EACA,aAAAmC,EACA,QAAA3E,EACA,aAAAkI,EACA,SAAArH,CACF,IAAqC,CACnC,KAAM,CAACoI,EAAWC,CAAY,EAAIC,EAAAA,SAAS,IACzC3C,EAAarN,EAAOqJ,CAAM,EAAE,MAAM+D,IAAmB,CAAA,EAIvDvM,EAAAA,UAAU,IAAM,CACd,MAAMoP,EAAY5C,EAAarN,EAAOqJ,CAAM,EACxC4G,EAAU,UACZF,EAAaE,EAAU,KAAK,CAEhC,EAAG,CAACjQ,EAAOqJ,CAAM,CAAC,EAElB,MAAM6G,EAAeC,EAAAA,YAClB/I,GAAyB,CACxB,MAAMgJ,EAAY5G,GAAcpC,EAAMiC,CAAM,EAC5C3B,EAAS0I,CAAS,CACpB,EACA,CAAC/G,EAAQ3B,CAAQ,CAAA,EAGnB,OACES,EAAAA,KAAAuG,WAAA,CACE,SAAA,CAAAjH,EAAAA,IAACoG,GAAA,CACC,WAAA7E,GACA,MAAO8G,EACP,WAAY,CAACjJ,EACb,SAAUkJ,CAAA,CAAA,EAGZtI,EAAAA,IAACoH,EAAA,CAAM,OAAQ,EAAA,CAAI,EAEnBpH,EAAAA,IAACqH,GAAA,CACC,MAAOgB,EAAU,MACjB,KAAMA,EAAU,KAChB,MAAOO,GAAoBrQ,CAAK,EAAIoJ,GAAUpJ,EAAOqJ,CAAM,EAAIzE,EAAO,KAAA,EACtE,aAAA4G,EACA,aAAAuD,EACA,SAAUmB,CAAA,CAAA,CACZ,EACF,CAEJ,EAEaI,GAAa,CAAC,CACzB,MAAA/J,EACA,MAAAvG,EACA,MAAA2C,EACA,OAAA0G,EACA,aAAAmC,EACA,aAAAuD,EACA,SAAArH,CACF,IAAuB,CACrB,KAAM,CAAE,QAAAb,CAAA,EAAYC,EAAc8B,EAA4B,EACxD7F,EAAMrC,EAAAA,OAAkB,IAAI,EAC5B,CAAC6P,EAAU,CAAE,KAAAC,EAAM,MAAAC,EAAO,EAAIC,GAAc,EAAK,EACjDC,EAAYC,EAAAA,MAAA,EAElB,OACEzI,EAAAA,KAAAuG,WAAA,CACE,SAAA,CAAAjH,EAAAA,IAACS,EAAA,CAAI,UAAU,MAAM,WAAW,MAC9B,SAAAT,EAAAA,IAACE,EAAA,CACC,MAAApB,EACA,MAAON,EAAO,MACd,QACEwB,EAAAA,IAACkH,EAAA,CACC,KAAK,YACL,KAAK,uBACL,KAAK,QACL,QAAS6B,EACT,UAAWxK,EAAE,aAAa,CAAA,CAAA,EAG9B,OAAQ4B,GACNH,EAAAA,IAACoJ,EAAA,CAAK,MAAO7Q,GAAS,GAAI,SAAA0H,EAAqB,GAAGwB,GAC/C,UAAC,CAAE,MAAAlJ,EAAO,SAAA0H,KACTD,EAAAA,IAACK,EAAA,CACC,IAAA/E,EACA,GAAA6E,EACA,YAAayB,EACb,MAAOrJ,EACP,MAAA2C,EACA,SAAU+E,EACV,aAAc6I,CAAA,CAAA,CAChB,CAEJ,CAAA,CAAA,EAGN,QAECO,GAAA,CAAQ,GAAIH,EAAW,KAAK,SAAS,UAAWF,EAAO,aAAc1N,EAAK,QAASwN,EAClF,eAAC/I,EAAA,CAAK,MAAOX,EAAUZ,EAAO,eAAiBA,EAAO,QACpD,SAAAwB,EAAAA,IAACoI,GAAA,CACC,MAAA7P,EACA,OAAAqJ,EACA,aAAAmC,EACA,QAAA3E,EACA,aAAAkI,EACA,SAAArH,CAAA,CAAA,EAEJ,CAAA,CACF,CAAA,EACF,CAEJ,EAUaqJ,GAAkB,CAAC,CAC9B,MAAA/Q,EACA,OAAAqJ,EACA,aAAAmC,EACA,aAAAuD,EACA,SAAArH,EACA,QAAAsJ,EACA,MAAAzK,EACA,YAAA0K,EACA,aAAAC,EACA,SAAAhO,EACA,UAAAiO,CACF,IAA4B,CAC1B,KAAM,CAAE,QAAAtK,CAAA,EAAYC,EAAc8B,EAA4B,EACxD,CAAE,MAAA3D,EAAO,WAAAmM,EAAY,cAAAjO,EAAe,WAAAE,CAAA,EAAelD,GAAQ,CAC/D,KAAM,CACJ,aAAcH,GAAS,GACvB,SAAAkD,CAAA,CACF,CACD,EAEKmO,EAAe,IAAM,CACzBlO,EAAc,OAAQnD,GAAS,EAAE,EACjCmR,EAAA,CACF,EAEMG,EAAgB,IAAM,CAC1BF,EAAW,CACT,UAAW1M,GAAU,CACnB,MAAM0C,EAAO1C,EAAO,KAAK,MAAM,EAAE,EAE7B6M,GAAWnK,CAAI,GACjBM,EAASN,CAAI,EAGf+J,EAAA,CACF,CAAA,CACD,CACH,EAEAtQ,OAAAA,EAAAA,UAAU,IAAM,CACTmQ,GACH3N,EAAW,MAAM,CAErB,EAAG,CAAC2N,EAAS3N,CAAU,CAAC,SAGrBmO,GAAA,CAAU,QAAAR,EAAkB,SAAU,IAAK,aAAcK,EACxD,SAAA,CAAA5J,EAAAA,IAACxC,EAAA,CAAM,KAAK,OACT,SAAA,CAAC,CAAE,IAAAlC,EAAK,MAAA/C,EAAO,MAAA2C,EAAO,OAAA8O,EAAQ,SAAA/J,CAAAA,IAC7BS,OAAAuG,EAAAA,SAAA,CACE,SAAA,CAAAjH,EAAAA,IAACE,EAAA,CACC,MAAApB,EACA,OAAQqB,IACNH,EAAAA,IAACoJ,EAAA,CAAK,MAAO7Q,EAAO,SAAU0H,EAAW,GAAGwB,GACzC,UAAC,CAAE,MAAAlJ,EAAO,SAAA0H,MACTD,EAAAA,IAACK,EAAA,CACC,IAAA/E,EACA,GAAA6E,GACA,YAAayB,EACb,MAAOrJ,EACP,MAAA2C,EACA,OAAA8O,EACA,SAAU/J,EAAA,CAAA,CACZ,CAEJ,CAAA,CAAA,EAIJD,EAAAA,IAACoI,GAAA,CACC,MAAO7P,EACP,OAAAqJ,EACA,aAAAmC,EACA,QAAA3E,EACA,aAAAkI,EACA,SAAUrH,CAAA,CAAA,CACZ,CAAA,CACF,CAAA,CAEJ,EAEAD,EAAAA,IAACoH,EAAA,CAAM,OAAQ,EAAA,CAAI,EAEnB1G,EAAAA,KAACD,EAAA,CAAI,UAAU,MAAM,WAAW,SAC9B,SAAA,CAAAT,EAAAA,IAACkH,EAAA,CAAW,KAAK,YAAY,KAAK,QAAQ,QAAS0C,EAAc,MAAOpL,EAAO,OAC5E,SAAAgL,CAAA,CACH,EAEAxJ,EAAAA,IAACoH,EAAA,CAAM,MAAO,EAAA,CAAI,EAElBpH,EAAAA,IAACkH,EAAA,CAAW,MAAM,UAAU,KAAK,QAAQ,QAAS2C,EAAe,MAAOrL,EAAO,OAC5E,SAAAiL,CAAA,CACH,CAAA,CAAA,CACF,CAAA,EACF,CAEJ,EAUMM,GAAY,CAAC,CACjB,SAAAtM,EACA,QAAA8L,EACA,SAAAU,EACA,gBAAAC,EACA,aAAAC,CACF,IAAsB,CACpB,KAAM,CAAE,QAAA/K,CAAA,EAAYC,EAAc6B,EAAuB,EAEzD,OAAI9B,EAEAY,EAAAA,IAACoK,GAAA,CACC,QAAAb,EACA,SAAAU,EACA,aAAcC,IAAoB,GAAOC,EAAe,OAEvD,SAAA1M,CAAA,CAAA,EAMLuC,EAAAA,IAACqK,GAAA,CAAY,QAAAd,EAAkB,aAAAY,EAC7B,SAAAnK,EAAAA,IAACD,GAAK,MAAOvB,EAAO,QAAU,SAAAf,CAAA,CAAS,CAAA,CACzC,CAEJ,EAqBM6M,GAA8B,CAAC,CACnC,MAAA/R,EACA,OAAAqJ,EACA,aAAAmC,EACA,QAAA3E,EACA,mBAAAmL,EACA,aAAAjD,EACA,SAAArH,CACF,IAAwC,CACtC,MAAMe,EAAeD,GAAA,EACf,CAACyJ,EAASC,CAAU,EAAIlC,EAAAA,SAAS,IAAM,CAC3C,MAAMmC,EAAiB9E,EAAarN,EAAM,MAAOqJ,CAAM,EAAE,MAAM+D,IAAmB,EAC5EgF,EAAe/E,EAAarN,EAAM,IAAKqJ,CAAM,EAAE,MAAMsE,EAAmBwE,CAAc,CAAC,EAC7F,MAAO,CACL,MAAOA,EACP,IAAK3E,GAAkB2E,EAAgBC,CAAY,EAC/CzE,EAAmBwE,CAAc,EACjCC,CAAA,CAER,CAAC,EAGDvR,EAAAA,UAAU,IAAM,CACd,GAAI4H,EACF,OAGF,MAAM0J,EAAiB9E,EAAarN,EAAM,MAAOqJ,CAAM,EAEnD8I,EAAe,UACjBD,EAAWD,GAAW,CAEpB,GAD+BzE,GAAkB2E,EAAe,MAAOF,EAAQ,GAAG,EAEhF,MAAO,CACL,MAAOrE,GAAmBqE,EAAQ,GAAG,EACrC,IAAKA,EAAQ,GAAA,EAKjB,MAAMI,EAAY3E,GAAauE,EAAQ,IAAKtE,EAAmBwE,EAAe,KAAK,CAAC,EAEpF,MAAO,CACL,MAAOA,EAAe,MACtB,IAAKE,CAAA,CAET,CAAC,CAEL,EAAG,CAAC5J,EAAczI,EAAM,MAAOqJ,CAAM,CAAC,EAGtCxI,EAAAA,UAAU,IAAM,CACd,GAAI4H,EACF,OAGF,MAAM2J,EAAe/E,EAAarN,EAAM,IAAKqJ,CAAM,EAE/C+I,EAAa,UACfF,EAAWD,GACsBzE,GAAkByE,EAAQ,MAAOG,EAAa,KAAK,EAEzE,CACL,MAAOH,EAAQ,MACf,IAAKtE,EAAmBsE,EAAQ,KAAK,CAAA,EAOlC,CACL,MAHkBxE,GAAawE,EAAQ,MAAOrE,GAAmBwE,EAAa,KAAK,CAAC,EAIpF,IAAKA,EAAa,KAAA,CAErB,CAEL,EAAG,CAAC3J,EAAczI,EAAM,IAAKqJ,CAAM,CAAC,EAEpC,MAAMiJ,EAAiBnC,cAAaF,GAAyB,CAC3DiC,EAAWD,IAAY,CACrB,MAAOhC,EACP,IAAKvC,GAAauE,EAAQ,IAAKtE,EAAmBsC,CAAS,CAAC,CAAA,EAC5D,CACJ,EAAG,CAAA,CAAE,EAECsC,EAAepC,cAAaF,GAAyB,CACzDiC,EAAWD,IAAY,CACrB,MAAOxE,GAAawE,EAAQ,MAAOrE,GAAmBqC,CAAS,CAAC,EAChE,IAAKA,CAAA,EACL,CACJ,EAAG,CAAA,CAAE,EAECuC,EAAYtR,UAAQ,IAAMqI,GAAWvJ,EAAOqJ,CAAM,EAAG,CAACrJ,EAAOqJ,CAAM,CAAC,EAEpEoJ,EAAoBrL,GAAyB,CACjD,MAAMsL,EAAW3F,GAAgByF,EAAWpL,CAAI,EAC1CuL,EAAW,CACf,MAAOD,EAAS,MAAM,MAAM,CAC1B,KAAMtL,GAAQoC,GAAcpC,EAAMiC,CAAM,EACxC,KAAM,IAAMrJ,EAAM,KAAA,CACnB,EACD,IAAK0S,EAAS,IAAI,MAAM,CACtB,KAAMtL,GAAQoC,GAAcpC,EAAMiC,CAAM,EACxC,KAAM,IAAMrJ,EAAM,GAAA,CACnB,CAAA,EAEH0H,EAASiL,CAAQ,CACnB,EAEA,OAAKX,QAyBFxK,EAAA,CACC,SAAAW,EAAAA,KAACD,GAAI,UAAU,MAAM,WAAW,QAC9B,SAAA,CAAAC,EAAAA,KAACX,EAAA,CAAK,MAAOvB,EAAO,kBAClB,SAAA,CAAAwB,EAAAA,IAACoG,GAAA,CACC,WAAA7E,GACA,MAAOiJ,EAAQ,MACf,SAAUrE,GAAmBqE,EAAQ,GAAG,EACxC,eAAe,SACf,SAAUK,CAAA,CAAA,EAGZ7K,EAAAA,IAACoH,EAAA,CAAM,OAAQ,EAAA,CAAI,EAEnBpH,EAAAA,IAACqH,GAAA,CACC,MAAOmD,EAAQ,MAAM,MACrB,KAAMA,EAAQ,MAAM,KACpB,MAAOO,EACP,aAAAhH,EACA,aAAAuD,EACA,SAAU0D,CAAA,CAAA,CACZ,EACF,EAEAhL,EAAAA,IAACmL,GAAA,CAAU,MAAO,GAAI,WAAY,GAAM,EAExCzK,EAAAA,KAACX,EAAA,CAAK,MAAOvB,EAAO,kBAClB,SAAA,CAAAwB,EAAAA,IAACoG,GAAA,CACC,WAAA7E,GACA,MAAOiJ,EAAQ,IACf,SAAUtE,EAAmBsE,EAAQ,KAAK,EAC1C,eAAe,SACf,SAAUM,CAAA,CAAA,EAGZ9K,EAAAA,IAACoH,EAAA,CAAM,OAAQ,EAAA,CAAI,EAEnBpH,EAAAA,IAACqH,GAAA,CACC,MAAOmD,EAAQ,IAAI,MACnB,KAAMA,EAAQ,IAAI,KAClB,MAAOO,EACP,aAAAhH,EACA,aAAAuD,EACA,SAAU0D,CAAA,CAAA,CACZ,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EArEEtK,EAAAA,KAAAuG,WAAA,CACE,SAAA,CAAAjH,EAAAA,IAACoG,GAAA,CACC,WAAA7E,GACA,MAAOiJ,EAAQ,MACf,WAAY,CAACpL,EACb,SAAUyL,CAAA,CAAA,EAGZ7K,EAAAA,IAACoH,EAAA,CAAM,OAAQ,EAAA,CAAI,EAEnBpH,EAAAA,IAACqH,GAAA,CACC,MAAOmD,EAAQ,MAAM,MACrB,KAAMA,EAAQ,MAAM,KACpB,MAAOO,EACP,aAAAhH,EACA,aAAAuD,EACA,SAAU0D,CAAA,CAAA,CACZ,EACF,CAqDN,EAEaI,GAAkB,CAAC,CAC9B,MAAA7S,EACA,MAAA2C,EACA,OAAA0G,EACA,WAAAyJ,EACA,SAAAC,EACA,aAAAvH,EACA,aAAAuD,EACA,SAAArH,CACF,IAA4B,CAC1B,KAAM,CAAE,QAAAb,CAAA,EAAYC,EAAc8B,EAA4B,EACxD,CAAE,QAASoJ,GAAuBlL,EAAc+B,EAA2B,EAC3E9F,EAAMrC,EAAAA,OAAkB,IAAI,EAC5B,CAAC6P,EAAU,CAAE,KAAAC,EAAM,MAAAC,EAAO,EAAIC,GAAc,EAAK,EAEjDsC,EAAoB7C,EAAAA,YACvBvG,GAAkB,CACjBlC,EAAS,CAAE,MAAAkC,EAAO,IAAK5J,EAAM,IAAK,CACpC,EACA,CAACA,EAAO0H,CAAQ,CAAA,EAGZuL,EAAkB9C,EAAAA,YACrBtG,GAAgB,CACfnC,EAAS,CAAE,MAAO1H,EAAM,MAAO,IAAA6J,EAAK,CACtC,EACA,CAAC7J,EAAO0H,CAAQ,CAAA,EAGlB,cACGF,EAAA,CACC,SAAA,CAAAW,EAAAA,KAACD,EAAA,CAAI,UAAU,MAAM,WAAW,MAC9B,SAAA,CAAAT,EAAAA,IAACE,EAAA,CACC,MAAOmL,EACP,MAAO7M,EAAO,MACd,OAAQ2B,GACNH,MAACoJ,EAAA,CAAK,MAAO7Q,EAAM,MAAO,SAAUgT,EAAoB,GAAG9J,GACxD,SAAA,CAAC,CAAE,MAAAlJ,EAAO,SAAA0H,KACTD,EAAAA,IAACK,EAAA,CACC,IAAA/E,EACA,GAAA6E,EACA,YAAayB,EACb,MAAOrJ,EACP,SAAU0H,EACV,MAAA/E,EACA,WAAY,GACZ,aAAc4N,CAAA,CAAA,CAChB,CAEJ,CAAA,CAAA,EAIJ9I,EAAAA,IAACoH,EAAA,CAAM,MAAO,EAAA,CAAI,EAElBpH,EAAAA,IAACS,EAAA,CAAI,MAAOjC,EAAO,eAAgB,eAAe,SAChD,SAAAwB,EAAAA,IAACyL,GAAA,CAAK,KAAK,qBAAqB,KAAM,GAAI,EAC5C,EAEAzL,EAAAA,IAACoH,EAAA,CAAM,MAAO,EAAA,CAAI,EAElBpH,EAAAA,IAACE,EAAA,CACC,MAAOoL,EACP,MAAO9M,EAAO,MACd,OAAQ2B,GACNH,MAACoJ,EAAA,CAAK,MAAO7Q,EAAM,IAAK,SAAUiT,EAAkB,GAAG/J,GACpD,SAAA,CAAC,CAAE,MAAAlJ,EAAO,SAAA0H,KACTD,EAAAA,IAACK,EAAA,CACC,GAAAF,EACA,YAAayB,EACb,MAAOrJ,EACP,SAAU0H,EACV,MAAA/E,EACA,WAAY,GACZ,aAAc4N,CAAA,CAAA,CAChB,CAEJ,CAAA,CAAA,EAIJ9I,EAAAA,IAACoH,EAAA,CAAM,MAAO,EAAA,CAAI,EAElBpH,EAAAA,IAACkH,EAAA,CACC,KAAK,YACL,KAAK,uBACL,KAAK,QACL,QAAS6B,EACT,UAAWxK,EAAE,aAAa,CAAA,CAAA,CAC5B,EACF,EAEAyB,EAAAA,IAACoH,EAAA,CAAM,OAAQ,CAAA,CAAG,EAElBpH,EAAAA,IAACwH,EAAA,CAAS,QAAQ,eAAe,MAAO9I,EAAO,SAAS,GAAG,EACxD,SAAAxD,GAAS,GAAA,CACZ,EAEA8E,EAAAA,IAAC+J,IAAU,QAASjB,EAAU,SAAU,IAAK,gBAAiB,GAAM,aAAcE,EAChF,SAAAhJ,EAAAA,IAACsK,GAAA,CACC,MAAA/R,EACA,OAAAqJ,EACA,aAAAmC,EACA,QAAA3E,EACA,mBAAAmL,EACA,aAAAjD,EACA,SAAArH,CAAA,CAAA,CACF,CACF,CAAA,EACF,CAEJ,EASayL,GAAuB,CAAC,CACnC,MAAAnT,EACA,MAAA2C,EACA,OAAA0G,EACA,aAAAmC,EACA,aAAAuD,EACA,SAAArH,EACA,QAAAsJ,EACA,WAAA8B,EACA,SAAAC,EACA,YAAA9B,EACA,aAAAC,EACA,UAAAC,CACF,IAAiC,CAC/B,KAAM,CAAE,QAAAtK,CAAA,EAAYC,EAAc6B,EAAuB,EACnD,CAAE,QAASqJ,GAAuBlL,EAAc+B,EAA2B,EAC3E,CAACuK,EAAaC,CAAc,EAAIrD,EAAAA,SAAShQ,CAAK,EAEpDa,EAAAA,UAAU,IAAM,CACdwS,EAAerT,CAAK,CACtB,EAAG,CAACA,CAAK,CAAC,EAEV,MAAMgT,EAAqBpJ,GAAkB,CAC3CyJ,EAAe,CAAE,MAAAzJ,EAAO,IAAKwJ,EAAY,IAAK,CAChD,EAEMH,EAAmBpJ,GAAgB,CACvCwJ,EAAe,CAAE,MAAOD,EAAY,MAAO,IAAAvJ,EAAK,CAClD,EAEMwH,EAAe,IAAM,CACzBgC,EAAerT,CAAK,EACpBmR,EAAA,CACF,EAEMG,EAAgB,IAAM,CAC1B5J,EAAS0L,CAAW,EACpBjC,EAAA,CACF,EAEA,cACGK,GAAA,CAAU,QAAAR,EAAkB,SAAU,IAAK,aAAcK,EACxD,SAAA,CAAAlJ,OAACX,EAAA,CACC,SAAA,CAAAW,EAAAA,KAACD,EAAA,CAAI,UAAU,MAAM,WAAW,MAC9B,SAAA,CAAAT,EAAAA,IAACE,EAAA,CACC,MAAOmL,EACP,MAAO7M,EAAO,MACd,OAAQ2B,GACNH,MAACoJ,EAAA,CAAK,MAAOuC,EAAY,MAAO,SAAUJ,EAAoB,GAAG9J,GAC9D,SAAA,CAAC,CAAE,MAAAlJ,EAAO,SAAA0H,KACTD,EAAAA,IAACK,EAAA,CACC,GAAAF,EACA,YAAayB,EACb,MAAOrJ,EACP,SAAU0H,EACV,MAAA/E,EACA,WAAY,EAAA,CAAA,CACd,CAEJ,CAAA,CAAA,EAIJ8E,EAAAA,IAACoH,EAAA,CAAM,MAAO,EAAA,CAAI,EAElBpH,EAAAA,IAACS,EAAA,CAAI,MAAOjC,EAAO,eAAgB,eAAe,SAChD,SAAAwB,EAAAA,IAACyL,GAAA,CAAK,KAAK,qBAAqB,KAAM,GAAI,EAC5C,EAEAzL,EAAAA,IAACoH,EAAA,CAAM,MAAO,EAAA,CAAI,EAElBpH,EAAAA,IAACE,EAAA,CACC,MAAOoL,EACP,MAAO9M,EAAO,MACd,OAAQ2B,GACNH,MAACoJ,EAAA,CAAK,MAAOuC,EAAY,IAAK,SAAUH,EAAkB,GAAG/J,GAC1D,SAAA,CAAC,CAAE,MAAAlJ,EAAO,SAAA0H,KACTD,EAAAA,IAACK,EAAA,CACC,GAAAF,EACA,YAAayB,EACb,MAAOrJ,EACP,SAAU0H,EACV,MAAA/E,EACA,WAAY,EAAA,CAAA,CACd,CAEJ,CAAA,CAAA,CAEJ,EACF,EAEA8E,EAAAA,IAACoH,EAAA,CAAM,OAAQ,CAAA,CAAG,EAElBpH,EAAAA,IAACwH,EAAA,CAAS,QAAQ,eAAe,MAAO9I,EAAO,SAAS,GAAG,EACxD,SAAAxD,GAAS,GAAA,CACZ,CAAA,EACF,EAEA8E,EAAAA,IAACsK,GAAA,CACC,MAAOqB,EACP,OAAA/J,EACA,aAAAmC,EACA,QAAA3E,EACA,mBAAAmL,EACA,aAAAjD,EACA,SAAUsE,CAAA,CAAA,EAGZ5L,EAAAA,IAACoH,EAAA,CAAM,OAAQ,EAAA,CAAI,EAEnB1G,EAAAA,KAACD,EAAA,CAAI,UAAU,MAAM,WAAW,SAC9B,SAAA,CAAAT,EAAAA,IAACkH,EAAA,CAAW,KAAK,YAAY,KAAK,QAAQ,QAAS0C,EAAc,MAAOpL,EAAO,OAC5E,SAAAgL,CAAA,CACH,EAEAxJ,EAAAA,IAACoH,EAAA,CAAM,MAAO,EAAA,CAAI,EAElBpH,EAAAA,IAACkH,EAAA,CAAW,MAAM,UAAU,KAAK,QAAQ,QAAS2C,EAAe,MAAOrL,EAAO,OAC5E,SAAAiL,CAAA,CACH,CAAA,CAAA,CACF,CAAA,EACF,CAEJ;;;;;;;;;;;;o7BC56CA,MAAMjL,EAASC,GAAWoN,OAAO,CAC/BC,UAAW,CACT7B,SAAU,GAAA,EAEZ8B,OAAQ,CACNC,UAAW,YAAA,CAEf,CAAC,EAEKC,OAAuBC,KAC7BD,GAAiBE,QAAQF,GAAiBG,QAAAA,EAAY,EAAE,EAExD,MAAMC,OAAyBH,KAC/BG,GAAmBF,QAAQE,GAAmBD,QAAAA,EAAY,EAAE,EAE5D,MAAAE,GAAe,CACbC,MAAO,mBACPC,UAAW3D,EACb,EAEM4D,GAAwBA,CAAC,CAAE,GAAGC,CAAqD,IAAM,CAC7F,KAAM,CAACnU,EAAOoU,CAAQ,EAAIpE,WAAAA,EAE1B,aAAQM,GAAA,IAAe6D,EAAO,MAAAnU,EAAc,SAAUoU,EAAS,CACjE,EAEMC,GAA6BA,CAAC,CAClC,GAAGF,CAC+C,IAAM,CACxD,KAAM,CAACnU,EAAOoU,CAAQ,EAAIpE,WAAS,CAAEpG,MAAO,GAAIC,IAAK,EAAA,CAAI,EACnDyK,EAAe7K,GAAuBzJ,EAAOmU,EAAM9K,MAAM,EAE/D,OACE5B,MAACoL,GAAA,CACC,GAAIsB,EACJ,MAAAnU,EACA,MAAOsU,EAAeC,OAAY,sCAClC,SAAUH,CAAAA,CAAQ,CAGxB,EAEaI,GAAUA,UAElBC,GAAA,CAAuB,MAAM,UAC5B,SAAAtM,EAAAA,KAACuM,GAAA,CAAW,MAAM,aAChB,SAAA,CAAAjN,EAAAA,IAACkN,GAAU,MAAM,UACf,SAAAlN,EAAAA,IAACD,EAAA,CAAK,MAAOvB,EAAOsN,UAClB,SAAA9L,EAAAA,IAACyM,GAAA,CACC,MAAM,gBACN,aAAa,SACb,OAAO,aAAW,EAEtB,CAAA,CACF,QAECS,EAAA,CAAU,MAAM,uBACf,SAAAlN,EAAAA,IAACD,EAAA,CAAK,MAAOvB,EAAOsN,UAClB,SAAA9L,EAAAA,IAACyM,GAAA,CACC,MAAM,gBACN,aAAa,SACb,OAAO,aAAW,EAEtB,CAAA,CACF,EAEAzM,EAAAA,IAACkN,GAAU,MAAM,gCACf,eAACnN,EAAA,CAAK,MAAOvB,EAAOsN,UAClB,SAAA9L,MAACyM,IACC,MAAM,gBACN,aAAa,SACb,OAAO,aACP,aAAc5J,GAAmB,EAErC,CAAA,CACF,EAEA7C,EAAAA,IAACkN,GAAU,MAAM,6DACf,eAACnN,EAAA,CAAK,MAAOvB,EAAOsN,UAClB,SAAA9L,EAAAA,IAACyM,GAAA,CACC,MAAM,gBACN,aAAa,SACb,OAAO,aACP,aAAczJ,GAAciJ,GAAkBI,EAAkB,CAAA,CAAC,CAAA,CAErE,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,EAISc,GAAkBA,IAAM,CACnC,MAAMC,EAAYnU,EAAAA,OAAa,IAAI,EAC7B,CAACV,EAAOoU,CAAQ,EAAIpE,EAAAA,SAAS,EAAE,EAC/B,CAACO,EAAUuE,CAAW,EAAI9E,EAAAA,SAAS,EAAK,EAE9C,OACEvI,EAAAA,IAACgN,GAAA,CAAuB,MAAM,UAC5B,SAAAhN,EAAAA,IAACiN,GAAA,CAAW,MAAM,mBAChB,SAAAvM,EAAAA,KAACwM,EAAA,CAAU,MAAM,UACf,SAAA,CAAAxM,OAAC8G,EAAA,CAAS,SAAA,CAAA,kBAAgBjP,CAAAA,EAAM,EAChCyH,EAAAA,IAACoH,EAAA,CAAM,OAAQ,EAAA,CAAG,EAElBpH,EAAAA,IAACkH,EAAA,CAAW,IAAKkG,EAAW,MAAO5O,EAAOuN,OAAQ,QAAS,IAAMsB,EAAY,EAAI,EAAE,SAAA,kBAAA,CAEnF,EAEArN,MAACsJ,IACC,QAASR,EACT,MAAAvQ,EACA,aAAa,SACb,OAAO,aACP,MAAM,gBACN,aAAa,SACb,YAAY,SACZ,SAAUoU,EACV,UAAW,IAAMU,EAAY,EAAK,CAAA,CAAC,CAAA,CAAA,CAEvC,EACF,EACF,CAEJ,EAEaC,GAAQA,IAEjBtN,EAAAA,IAACgN,GAAA,CAAuB,MAAM,UAC5B,SAAAhN,EAAAA,IAACiN,GAAA,CAAW,MAAM,kBAChB,SAAAjN,EAAAA,IAACkN,EAAA,CAAU,MAAM,UACf,eAACnN,EAAA,CAAK,MAAOvB,EAAOsN,UAClB,SAAA9L,EAAAA,IAAC4M,GAAA,CACC,WAAW,aACX,SAAS,WACT,aAAa,SACb,OAAO,YAAA,CAAW,CAAA,CAEtB,CAAA,CACF,EACF,EACF,EAISW,GAAyBA,IAAM,CAC1C,KAAM,CAAChV,EAAOoU,CAAQ,EAAIpE,WAAS,CAAEpG,MAAO,GAAIC,IAAK,EAAA,CAAI,EACnD,CAAC0G,EAAUuE,CAAW,EAAI9E,EAAAA,SAAS,EAAK,EAE9C,OACEvI,EAAAA,IAACgN,GAAA,CAAuB,MAAM,UAC5B,SAAAhN,EAAAA,IAACiN,GAAA,CAAW,MAAM,qBAChB,SAAAvM,EAAAA,KAACwM,EAAA,CAAU,MAAM,UACf,SAAA,CAAAxM,OAAC8G,EAAA,CAAQ,SAAA,CAAA,kBACSjP,EAAM4J,MAAM,MAAI5J,EAAM6J,GAAAA,EACxC,EAEApC,EAAAA,IAACoH,EAAA,CAAM,OAAQ,EAAA,CAAG,EAElBpH,EAAAA,IAACkH,EAAA,CAAW,MAAO1I,EAAOuN,OAAQ,QAAS,IAAMsB,EAAY,EAAI,EAAE,SAAA,wBAAA,CAEnE,EAEArN,EAAAA,IAAC0L,IACC,QAAS5C,EACT,MAAAvQ,EACA,aAAa,SACb,OAAO,aACP,WAAW,aACX,SAAS,WACT,aAAa,SACb,YAAY,SACZ,SAAUoU,EACV,UAAW,IAAMU,EAAY,EAAK,CAAA,CAAC,CAAA,CAAA,CAEvC,EACF,EACF,CAEJ,EAEaG,GAASA,IAAM,CAG1B,KAAM,CAACC,EAAWC,CAAY,EAAInF,EAAAA,SAA6BoF,EAAY,EAE3E,aACGX,GAAA,CAAuB,MAAM,UAC5B,SAAAtM,EAAAA,KAACuM,GAAA,CAAW,MAAM,gBAChB,SAAA,CAAAjN,EAAAA,IAACkN,GAAU,MAAM,UACf,gBAACnN,EAAA,CAAK,MAAOvB,EAAOsN,UACjBlD,SAAAA,CAAAA,GAAoB6E,CAAS,GAAK/M,EAAAA,KAAC8G,EAAA,CAAS,SAAA,CAAA,kBAAgBiG,CAAAA,EAAU,QAEtE5M,GAAA,CACC,MAAO,YACP,MAAO8M,GACP,cAAeD,CAAAA,CAAY,CAAA,CAAA,CAE/B,CAAA,CACF,EAEA1N,EAAAA,IAACkN,GAAU,MAAM,WACf,gBAACnN,EAAA,CAAK,MAAOvB,EAAOsN,UACjBrM,SAAAA,CAAAA,EAAagO,CAAS,GAAK/M,EAAAA,KAAC8G,EAAA,CAAS,SAAA,CAAA,kBAAgBiG,CAAAA,EAAU,EAEhEzN,EAAAA,IAACa,IACC,MAAO,YACP,MAAO8M,GACP,SAAU,GACV,cAAeD,CAAAA,CAAY,CAAA,CAAA,CAE/B,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}