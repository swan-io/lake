{"version":3,"file":"LakeCheckbox-CX-BNnNM.js","sources":["../../../packages/lake/src/components/LakeCheckbox.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { ColorVariants, colors } from \"../constants/design\";\nimport { LakeText } from \"./LakeText\";\nimport { Pressable } from \"./Pressable\";\nimport { Space } from \"./Space\";\nimport { Animate, Path, Svg } from \"./Svg\";\n\nconst SIZE = 16;\nconst RADIUS = 4;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: SIZE,\n    height: SIZE,\n    borderRadius: RADIUS,\n    borderWidth: 1,\n    borderColor: colors.gray[500],\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  mixed: {\n    width: SIZE - 8,\n    height: 2,\n  },\n  labelled: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n});\n\nexport type CheckboxProps = {\n  value: boolean | \"mixed\";\n  color?: ColorVariants;\n  disabled?: boolean;\n  isError?: boolean;\n};\n\nexport const LakeCheckbox = ({\n  value,\n  color = \"current\",\n  disabled = false,\n  isError = false,\n}: CheckboxProps) => {\n  const isFirstRender = useRef(true);\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n\n  useEffect(() => {\n    if (!isFirstRender.current) {\n      setShouldAnimate(true);\n    }\n    isFirstRender.current = false;\n  }, [value]);\n\n  return (\n    <View\n      role=\"none\"\n      style={[\n        styles.container,\n        disabled && styles.disabled,\n        value !== false && {\n          backgroundColor: colors[color].primary,\n          borderColor: colors[color].primary,\n        },\n        isError && { borderColor: colors.negative[500] },\n      ]}\n    >\n      {value === true && (\n        <Svg viewBox=\"0 0 16 16\">\n          <Path\n            d=\"m3.5 7.5 2.8 3.4 5.6-6.7\"\n            stroke={colors[color].contrast}\n            strokeWidth={1.5}\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeDasharray=\"20\"\n            strokeDashoffset={shouldAnimate ? \"20\" : \"0\"}\n          >\n            {shouldAnimate && (\n              <Animate\n                attributeName=\"stroke-dashoffset\"\n                values=\"20;0\"\n                dur=\"150ms\"\n                begin=\"150ms\"\n                fill=\"freeze\"\n              />\n            )}\n          </Path>\n        </Svg>\n      )}\n\n      {value === \"mixed\" && (\n        <View style={[styles.mixed, { backgroundColor: colors[color].contrast }]} />\n      )}\n    </View>\n  );\n};\n\nexport type LabelledCheckboxProps = CheckboxProps & {\n  onValueChange: (value: boolean) => void;\n  label: string;\n  disabled?: boolean;\n  isError?: boolean;\n};\n\nexport const LakeLabelledCheckbox = ({\n  value,\n  color,\n  label,\n  onValueChange,\n  disabled = false,\n  isError = false,\n}: LabelledCheckboxProps) => {\n  return (\n    <Pressable\n      role=\"checkbox\"\n      aria-checked={value}\n      style={styles.labelled}\n      onPress={() => onValueChange(value === true ? false : true)}\n      disabled={disabled}\n    >\n      <LakeCheckbox value={value} color={color} disabled={disabled} isError={isError} />\n      <Space width={8} />\n\n      <LakeText color={colors.gray[900]} userSelect=\"none\">\n        {label}\n      </LakeText>\n    </Pressable>\n  );\n};\n"],"names":["SIZE","RADIUS","styles","StyleSheet","colors","LakeCheckbox","value","color","disabled","isError","isFirstRender","useRef","shouldAnimate","setShouldAnimate","useState","useEffect","jsxs","View","jsx","Svg","Path","Animate","LakeLabelledCheckbox","label","onValueChange","Pressable","Space","LakeText"],"mappings":"oLAQA,MAAAA,EAAA,GACAC,EAAA,EAEAC,EAAAC,EAAA,OAAA,CACA,UAAA,CACA,MAAAH,EACA,OAAAA,EACA,aAAAC,EACA,YAAA,EACA,YAAAG,EAAA,KAAA,GAAA,EACA,WAAA,SACA,eAAA,QACA,EACA,MAAA,CACA,MAAAJ,EAAA,EACA,OAAA,CACA,EACA,SAAA,CACA,cAAA,MACA,WAAA,QACA,EACA,SAAA,CACA,QAAA,EACA,CACA,CAAA,EASAK,EAAA,CAAA,CACA,MAAAC,EACA,MAAAC,EAAA,UACA,SAAAC,EAAA,GACA,QAAAC,EAAA,EACA,IAAA,CACA,MAAAC,EAAAC,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAC,WAAA,EAAA,EAEAC,OAAAA,EAAAA,UAAA,IAAA,CACAL,EAAA,SACAG,EAAA,EAAA,EAEAH,EAAA,QAAA,EAAA,EACA,CAAAJ,CAAA,CAAA,EAGAU,EAAA,KAAAC,EAAA,CACA,KAAA,OACA,MAAA,CACAf,EAAA,UACAM,GAAAN,EAAA,SACAI,IAAA,IAAA,CACA,gBAAAF,EAAAG,CAAA,EAAA,QACA,YAAAH,EAAAG,CAAA,EAAA,OACA,EACAE,GAAA,CAAA,YAAAL,EAAA,SAAA,GAAA,CAAA,CACA,EAEA,SAAA,CAAAE,IAAA,IACAY,MAAAC,EAAA,CAAA,QAAA,YACA,SAAAD,EAAA,IAAAE,EAAA,CACA,EAAA,2BACA,OAAAhB,EAAAG,CAAA,EAAA,SACA,YAAA,IACA,KAAA,OACA,cAAA,QACA,eAAA,QACA,gBAAA,KACA,iBAAAK,EAAA,KAAA,IAEA,SACAA,GAAAM,EAAA,IAAAG,EAAA,CACA,cAAA,oBACA,OAAA,OACA,IAAA,QACA,MAAA,QACA,KAAA,QAAA,CACA,CAAA,CAAA,EAGA,EAGAf,IAAA,SACAY,EAAA,IAAAD,EAAA,CAAA,MAAA,CAAAf,EAAA,MAAA,CAAA,gBAAAE,EAAAG,CAAA,EAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAIA,EASAe,EAAA,CAAA,CACA,MAAAhB,EACA,MAAAC,EACA,MAAAgB,EACA,cAAAC,EACA,SAAAhB,EAAA,GACA,QAAAC,EAAA,EACA,IAEAO,EAAA,KAAAS,EAAA,CACA,KAAA,WACA,eAAAnB,EACA,MAAAJ,EAAA,SACA,QAAA,IAAAsB,EAAAlB,IAAA,EAAA,EACA,SAAAE,EAEA,SAAA,CAAAU,EAAA,IAAAb,EAAA,CAAA,MAAAC,EAAA,MAAAC,EAAA,SAAAC,EAAA,QAAAC,EAAA,EACAS,EAAAA,IAAAQ,EAAA,CAAA,MAAA,CAAA,CAAA,EAEAR,EAAAA,IAAAS,GAAA,MAAAvB,EAAA,KAAA,GAAA,EAAA,WAAA,OACA,SACAmB,CAAA,CAAA,CAAA,CAAA,CAAA"}