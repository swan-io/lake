{"version":3,"file":"LoadingView-04f13346.js","sources":["../../../packages/lake/src/components/LoadingView.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport { ActivityIndicator, StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\nimport { colors } from \"../constants/colors\";\n\nconst styles = StyleSheet.create({\n  base: {\n    alignItems: \"center\",\n    flexGrow: 1,\n    flexShrink: 1,\n    justifyContent: \"center\",\n  },\n  indicator: {\n    opacity: 0,\n\n    animationKeyframes: {\n      from: { opacity: 0 },\n      to: { opacity: 1 },\n    },\n\n    animationDuration: \"250ms\",\n    animationFillMode: \"forwards\",\n    animationTimingFunction: \"ease\",\n  },\n});\n\ntype Props = {\n  color?: string;\n  delay?: number;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst isDev = process.env.NODE_ENV === \"development\";\n\nexport const LoadingView = forwardRef<View, Props>(\n  ({ color = colors.gray[100], delay = isDev ? 0 : 1000, style }, forwardedRef) => (\n    <View ref={forwardedRef} style={[styles.base, style]}>\n      <ActivityIndicator\n        size=\"small\"\n        color={color}\n        style={[styles.indicator, delay > 0 && { animationDelay: delay.toString() + \"ms\" }]}\n      />\n    </View>\n  ),\n);\n"],"names":["styles","StyleSheet","LoadingView","forwardRef","color","colors","delay","style","forwardedRef","jsx","View","ActivityIndicator"],"mappings":"+KAIA,MAAAA,EAAAC,EAAA,OAAA,CAAiC,KAAA,CACzB,WAAA,SACQ,SAAA,EACF,WAAA,EACE,eAAA,QACI,EAClB,UAAA,CACW,QAAA,EACA,mBAAA,CAEW,KAAA,CAAA,QAAA,CAAA,EACC,GAAA,CAAA,QAAA,CAAA,CACF,EACnB,kBAAA,QAEmB,kBAAA,WACA,wBAAA,MACM,CAE7B,CAAA,EAUOC,EAAAC,EAAA,WAAoB,CAAA,CAAA,MAAAC,EAAAC,EAAA,KAAA,GAAA,EAAA,MAAAC,EAAA,IAAA,MAAAC,CAAA,EAAAC,IAAAC,EAAAC,EAAA,CAAA,IAAAF,EAAA,MAAA,CAAAR,EAAA,KAAAO,CAAA,EAAA,SAAAE,EAGrBE,EAAC,CAAA,KAAA,QACM,MAAAP,EACL,MAAA,CAAAJ,EAAA,UAAAM,EAAA,GAAA,CAAA,eAAAA,EAAA,SAAA,EAAA,IAAA,CAAA,CACkF,CAAA,EAAA,CAI1F"}