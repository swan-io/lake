{"version":3,"file":"RIB.stories-164571b6.js","sources":["../../../packages/lake/src/components/AutoWidthImage.tsx","../../../packages/shared-business/src/components/RIB.tsx"],"sourcesContent":["import { forwardRef, memo, useEffect, useState } from \"react\";\nimport { Image, ImageProps } from \"react-native\";\nimport { Except } from \"type-fest\";\nimport { isNotNullish } from \"../utils/nullish\";\n\ntype Props = Except<ImageProps, \"source\"> & {\n  ariaLabel?: string;\n  maxWidth?: number;\n  height: number;\n  sourceUri: string;\n};\n\nexport const AutoWidthImage = memo(\n  forwardRef<Image, Props>(\n    ({ ariaLabel, maxWidth, height, sourceUri, style, ...props }, forwardedRef) => {\n      const [size, setSize] = useState<{ height: number; width: number }>({\n        height,\n        width: 0,\n      });\n\n      useEffect(() => {\n        Image.getSize(sourceUri, (fetchedWidth, fetchedHeight) => {\n          const ratio = fetchedWidth / fetchedHeight;\n          const width = ratio * height;\n\n          if (isNotNullish(maxWidth) && maxWidth < width) {\n            const height = maxWidth / ratio;\n            setSize({ height, width: maxWidth });\n          } else {\n            setSize({ height, width });\n          }\n        });\n      }, [maxWidth, height, sourceUri]);\n\n      return (\n        <Image\n          aria-label={ariaLabel}\n          ref={forwardedRef}\n          source={{ uri: sourceUri }}\n          style={[style, size]}\n          {...props}\n        />\n      );\n    },\n  ),\n);\n\nAutoWidthImage.displayName = \"AutoWidthImage\";\n","import { AutoWidthImage } from \"@swan-io/lake/src/components/AutoWidthImage\";\nimport { Box } from \"@swan-io/lake/src/components/Box\";\nimport { Fill } from \"@swan-io/lake/src/components/Fill\";\nimport { LakeHeading } from \"@swan-io/lake/src/components/LakeHeading\";\nimport { Separator } from \"@swan-io/lake/src/components/Separator\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport { SwanLogo } from \"@swan-io/lake/src/components/SwanLogo\";\nimport { WithPartnerAccentColor } from \"@swan-io/lake/src/components/WithPartnerAccentColor\";\nimport {\n  colors,\n  fonts,\n  interFontStyle,\n  invariantColors,\n  radii,\n  spacings,\n} from \"@swan-io/lake/src/constants/design\";\nimport { isNotNullishOrEmpty } from \"@swan-io/lake/src/utils/nullish\";\nimport { StyleProp, StyleSheet, Text, TextStyle, View } from \"react-native\";\nimport { match } from \"ts-pattern\";\nimport { t } from \"../utils/i18n\";\n\nconst LOGO_MAX_HEIGHT = 26;\nconst LOGO_MAX_WIDTH = 200;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: 470,\n    borderRadius: radii[8],\n    backgroundColor: invariantColors.white,\n    borderWidth: 1,\n    borderColor: colors.gray[100],\n  },\n  part: {\n    padding: spacings[24],\n  },\n  label: {\n    ...interFontStyle,\n    fontSize: 10,\n  },\n  labelPartner: {\n    color: colors.partner[500],\n    fontWeight: \"500\",\n  },\n  mainInfo: {\n    fontFamily: fonts.iban,\n    fontSize: 12,\n    color: colors.gray[900],\n  },\n  smallInfo: {\n    fontFamily: fonts.iban,\n    fontSize: 10,\n    color: colors.gray[900],\n  },\n  addressInfo: {\n    ...interFontStyle,\n    fontSize: 12,\n    color: colors.gray[900],\n  },\n  partnershipText: {\n    ...interFontStyle,\n    fontSize: 8,\n    color: colors.gray[500],\n  },\n  defaultLogo: {\n    height: LOGO_MAX_HEIGHT,\n    width: 115,\n  },\n  swanLogo: {\n    width: 26,\n    height: 6,\n  },\n});\n\ntype Address = {\n  name: string;\n  address: string;\n  zipCode: string;\n  city: string;\n  country: string;\n};\n\ntype RIBv1Props = {\n  version: \"v1\";\n  partnerColor: string;\n  partnerLogoUrl?: string;\n  iban: string;\n  bic: string;\n  bank: string;\n  agency: string;\n  bankNumber: string;\n  bankKey: string;\n  bankAddress: Address;\n  accountHolderAddress: Address;\n};\n\nexport type RIBProps = RIBv1Props;\n\nexport const RIB = (props: RIBProps) =>\n  match(props)\n    .with({ version: \"v1\" }, props => <RIBv1 {...props} />)\n    .exhaustive();\n\nconst RIBv1 = ({\n  partnerColor,\n  partnerLogoUrl,\n  iban,\n  bic,\n  bank,\n  agency,\n  bankNumber,\n  bankKey,\n  bankAddress,\n  accountHolderAddress,\n}: RIBProps) => {\n  return (\n    <WithPartnerAccentColor color={partnerColor}>\n      <View style={styles.container}>\n        <View style={styles.part}>\n          <Box direction=\"row\" alignItems=\"center\">\n            {isNotNullishOrEmpty(partnerLogoUrl) ? (\n              <AutoWidthImage\n                sourceUri={partnerLogoUrl}\n                height={LOGO_MAX_HEIGHT}\n                maxWidth={LOGO_MAX_WIDTH}\n                resizeMode=\"contain\"\n              />\n            ) : (\n              <SwanLogo style={styles.defaultLogo} />\n            )}\n\n            <Fill minWidth={24} />\n\n            <LakeHeading level={2} variant=\"h3\" color={colors.gray[900]}>\n              {t(\"rib.bankDetails\")}\n            </LakeHeading>\n          </Box>\n\n          <Space height={24} />\n\n          <Box direction=\"row\" alignItems=\"center\">\n            <RibValue type=\"mainInfo\" color=\"partner\" label={t(\"rib.iban\")} value={iban} />\n            <Space width={24} />\n            <RibValue type=\"mainInfo\" color=\"partner\" label={t(\"rib.bic\")} value={bic} />\n          </Box>\n\n          <Space height={8} />\n\n          <Box direction=\"row\" alignItems=\"center\">\n            <RibValue type=\"smallInfo\" color=\"gray\" label={t(\"rib.bank\")} value={bank} />\n            <Space width={24} />\n            <RibValue type=\"smallInfo\" color=\"gray\" label={t(\"rib.agency\")} value={agency} />\n            <Space width={24} />\n            <RibValue type=\"smallInfo\" color=\"gray\" label={t(\"rib.number\")} value={bankNumber} />\n            <Space width={24} />\n            <RibValue type=\"smallInfo\" color=\"gray\" label={t(\"rib.key\")} value={bankKey} />\n          </Box>\n        </View>\n\n        <Separator />\n\n        <View style={styles.part}>\n          <Box direction=\"row\" alignItems=\"center\">\n            <RibValue\n              type=\"addressInfo\"\n              color=\"partner\"\n              label={t(\"rib.address\")}\n              value={[\n                bankAddress.name,\n                bankAddress.address,\n                `${bankAddress.zipCode} ${bankAddress.city}`,\n                bankAddress.country,\n              ]}\n            />\n\n            <Space width={24} />\n\n            <RibValue\n              type=\"addressInfo\"\n              color=\"partner\"\n              label={t(\"rib.accountHolder\")}\n              value={[\n                accountHolderAddress.name,\n                accountHolderAddress.address,\n                `${accountHolderAddress.zipCode} ${accountHolderAddress.city}`,\n                accountHolderAddress.country,\n              ]}\n            />\n          </Box>\n\n          <Space height={12} />\n\n          <Box direction=\"row\" alignItems=\"center\">\n            <Text style={styles.partnershipText}>{t(\"rib.partnership\")}</Text>\n            <Space width={4} />\n            <SwanLogo color={colors.gray[900]} style={styles.swanLogo} />\n          </Box>\n        </View>\n      </View>\n    </WithPartnerAccentColor>\n  );\n};\n\ntype RibValueProps = {\n  type: \"mainInfo\" | \"smallInfo\" | \"addressInfo\";\n  color: \"partner\" | \"gray\";\n  label: string;\n  value: string | string[];\n};\n\nconst ribValueStyle: Record<RibValueProps[\"type\"], StyleProp<TextStyle>> = {\n  mainInfo: styles.mainInfo,\n  smallInfo: styles.smallInfo,\n  addressInfo: styles.addressInfo,\n};\n\nconst RibValue = ({ type, color, label, value }: RibValueProps) => {\n  const lines = Array.isArray(value) ? value : [value];\n\n  return (\n    <View>\n      <Text style={[styles.label, color === \"partner\" && styles.labelPartner]}>{label}</Text>\n      <Space height={4} />\n\n      {lines.map((line, index) => (\n        <Text key={index} style={ribValueStyle[type]}>\n          {line}\n        </Text>\n      ))}\n    </View>\n  );\n};\n"],"names":["AutoWidthImage","memo","forwardRef","ariaLabel","maxWidth","height","sourceUri","style","props","forwardedRef","size","setSize","useState","useEffect","Image","fetchedWidth","fetchedHeight","ratio","width","isNotNullish","height2","jsx","LOGO_MAX_HEIGHT","LOGO_MAX_WIDTH","styles","StyleSheet","radii","invariantColors","colors","spacings","interFontStyle","fonts","RIB","match","props2","RIBv1","partnerColor","partnerLogoUrl","iban","bic","bank","agency","bankNumber","bankKey","bankAddress","accountHolderAddress","WithPartnerAccentColor","jsxs","View","Box","isNotNullishOrEmpty","SwanLogo","Fill","LakeHeading","t","Space","RibValue","Separator","Text","ribValueStyle","type","color","label","value","lines","line","index"],"mappings":"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"}