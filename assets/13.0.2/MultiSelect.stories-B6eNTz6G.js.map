{"version":3,"file":"MultiSelect.stories-B6eNTz6G.js","sources":["../../../packages/lake/src/components/SectionList.tsx","../../../packages/lake/src/components/MultiSelect.tsx","../../../packages/lake/__stories__/MultiSelect.stories.tsx"],"sourcesContent":["import { Fragment, ReactNode, Ref, useEffect, useId, useRef } from \"react\";\nimport { StyleProp, StyleSheet, View, ViewStyle, WebRole } from \"react-native\";\nimport { ListRenderItemInfo } from \"./FlatList\";\nimport { ScrollView, ScrollViewProps, ScrollViewRef } from \"./ScrollView\";\n\nconst styles = StyleSheet.create({\n  scrollTracker: {\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    right: 0,\n    bottom: 0,\n  },\n});\n\nexport type SectionListRef = ScrollViewRef;\n\ntype Section<T> = {\n  title: string;\n  data: T[];\n};\n\ntype Props<T> = {\n  ref?: Ref<SectionListRef>;\n  ItemSeparatorComponent?: ReactNode;\n  ListEmptyComponent?: ReactNode;\n  ListFooterComponent?: ReactNode;\n  ListHeaderComponent?: ReactNode;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  horizontal?: boolean;\n  keyExtractor: (item: T, index: number) => string;\n  onEndReached?: () => void;\n  onEndReachedThresholdPx?: number;\n  onKeyDown?: ScrollViewProps[\"onKeyDown\"];\n  onScroll?: ScrollViewProps[\"onScroll\"];\n  renderItem: (info: ListRenderItemInfo<T>) => ReactNode;\n  renderSectionHeader?: (section: Section<T>) => ReactNode;\n  role?: WebRole;\n  scrollEventThrottle?: number;\n  sections: Section<T>[];\n  showsScrollIndicators?: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const SectionList = <T,>({\n  ref,\n  ItemSeparatorComponent,\n  ListEmptyComponent,\n  ListFooterComponent,\n  ListHeaderComponent,\n  contentContainerStyle,\n  horizontal = false,\n  keyExtractor,\n  onEndReached,\n  onEndReachedThresholdPx = 200,\n  onKeyDown,\n  onScroll,\n  renderItem,\n  renderSectionHeader,\n  role,\n  scrollEventThrottle = 16,\n  sections,\n  showsScrollIndicators = true,\n  style,\n}: Props<T>) => {\n  const groupId = useId();\n  const scrollTrackerRef = useRef<View>(null);\n\n  const scrollTrackerStyle = horizontal\n    ? { top: 0, width: onEndReachedThresholdPx }\n    : { left: 0, height: onEndReachedThresholdPx };\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies(onEndReached):\n  // biome-ignore lint/correctness/useExhaustiveDependencies(sections.length):\n  useEffect(() => {\n    const element = scrollTrackerRef.current as unknown as HTMLElement;\n\n    if (element != null) {\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            onEndReached?.();\n          }\n        });\n      });\n\n      observer.observe(element);\n\n      return () => {\n        observer.unobserve(element);\n      };\n    }\n    // re-create an observer only on list length change\n  }, [sections.length]);\n\n  return (\n    <ScrollView\n      contentContainerStyle={contentContainerStyle}\n      horizontal={horizontal}\n      onKeyDown={onKeyDown}\n      onScroll={onScroll}\n      ref={ref}\n      role={role}\n      scrollEventThrottle={scrollEventThrottle}\n      showsScrollIndicators={showsScrollIndicators}\n      style={style}\n    >\n      {ListHeaderComponent}\n\n      {sections.length <= 0\n        ? ListEmptyComponent\n        : sections.map(section => (\n            <Fragment key={`group-${groupId}-${section.title}`}>\n              {renderSectionHeader?.(section)}\n\n              {section.data.map((item, index) => (\n                <Fragment key={keyExtractor(item, index)}>\n                  {index !== 0 && ItemSeparatorComponent}\n                  {renderItem({ item, index })}\n                </Fragment>\n              ))}\n            </Fragment>\n          ))}\n\n      {ListFooterComponent}\n\n      <View role=\"none\" ref={scrollTrackerRef} style={[styles.scrollTracker, scrollTrackerStyle]} />\n    </ScrollView>\n  );\n};\n","import { Array, Dict, Option } from \"@swan-io/boxed\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport {\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextInput,\n  TextStyle,\n  View,\n  ViewStyle,\n} from \"react-native\";\nimport { ColorVariants, backgroundColor, colors, radii, shadows, texts } from \"../constants/design\";\nimport { useBoolean } from \"../hooks/useBoolean\";\nimport { useDisclosure } from \"../hooks/useDisclosure\";\nimport { groupBy } from \"../utils/array\";\nimport { isNotNullish, isNotNullishOrEmpty } from \"../utils/nullish\";\nimport { safeSplitAround } from \"../utils/string\";\nimport { Box } from \"./Box\";\nimport { FlatList } from \"./FlatList\";\nimport { Icon } from \"./Icon\";\nimport { InputError } from \"./InputError\";\nimport { Popover } from \"./Popover\";\nimport { PressableText } from \"./Pressable\";\nimport { SectionList } from \"./SectionList\";\nimport { Space } from \"./Space\";\nimport { Tag } from \"./Tag\";\n\nconst MAX_INPUT_HEIGHT = 120;\nconst ITEM_ELEMENT_HEIGHT = 32;\nconst NB_SUGGESTION_DISPLAYED = 10.5;\n\nconst styles = StyleSheet.create({\n  base: {\n    ...texts.regular,\n    backgroundColor: backgroundColor.accented,\n    borderColor: colors.gray[100],\n    borderRadius: radii[6],\n    borderWidth: 1,\n    cursor: \"default\",\n    overflow: \"hidden\",\n    transitionDuration: \"150ms\",\n    transitionProperty: \"border-color, box-shadow\",\n  },\n  errored: {\n    borderColor: colors.negative[500],\n  },\n  tag: {\n    marginRight: 4,\n    marginVertical: 2,\n  },\n  hovered: {\n    boxShadow: shadows.tile,\n  },\n  focused: {\n    borderColor: colors.gray[500],\n    boxShadow: shadows.tile,\n    outlineStyle: \"none\",\n  },\n  disabled: {\n    backgroundColor: colors.gray[50],\n    borderColor: colors.gray[100],\n    cursor: \"not-allowed\",\n  },\n  actions: {\n    marginVertical: \"auto\",\n    position: \"absolute\",\n    bottom: 0,\n    top: 0,\n    right: 20,\n  },\n  placeholder: {\n    ...texts.regular,\n    color: colors.gray[300],\n    userSelect: \"none\",\n  },\n  list: {\n    marginVertical: 4,\n    maxHeight: ITEM_ELEMENT_HEIGHT * NB_SUGGESTION_DISPLAYED,\n    minHeight: 224,\n  },\n  filterContainer: {\n    flexGrow: 1,\n    flexShrink: 1,\n    margin: 16,\n  },\n  filterInput: {\n    ...texts.regular,\n    backgroundColor: backgroundColor.accented,\n    borderColor: colors.gray[100],\n    borderRadius: 4,\n    borderWidth: 1,\n    flexGrow: 1,\n    flexShrink: 1,\n    height: 40,\n    outlineStyle: \"none\",\n    paddingHorizontal: 12,\n    paddingLeft: 40,\n    placeholderTextColor: colors.gray[300],\n  },\n  filterFocused: {\n    borderColor: colors.gray[200],\n  },\n  searchIcon: {\n    position: \"absolute\",\n    left: 14,\n  },\n  tagsList: {\n    flexWrap: \"wrap\",\n    maxHeight: MAX_INPUT_HEIGHT,\n    minHeight: 40,\n    overflowY: \"auto\",\n    paddingHorizontal: 16,\n    paddingRight: 60,\n    paddingVertical: 8,\n  },\n  groupTitleBase: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    flexGrow: 1,\n    flexShrink: 1,\n    justifyContent: \"space-between\",\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    transitionDuration: \"200ms\",\n    transitionProperty: \"background-color\",\n  },\n  groupTitle: {\n    ...texts.semibold,\n    userSelect: \"none\",\n  },\n  line: {\n    ...texts.regular,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    transitionDuration: \"200ms\",\n    transitionProperty: \"background-color\",\n    userSelect: \"none\",\n  },\n  lineInGroup: {\n    paddingLeft: 24,\n  },\n  emptyList: {\n    height: 136,\n  },\n  emptyListText: {\n    color: colors.gray.primary,\n  },\n});\n\nexport type MultiSelectItem<Value> = {\n  disabled?: boolean;\n  group: string;\n  label: string;\n  value: Value;\n};\n\nexport type MultiSelectProps<Value> = {\n  color?: ColorVariants;\n  disabled?: boolean;\n  error?: string;\n  emptyResultText?: string;\n  enableGroups?: boolean;\n  filterPlaceholder?: string;\n  items: MultiSelectItem<Value>[];\n  onValueChange: (values: Value[]) => void;\n  placeholder?: string;\n  renderTagGroup?: (items: readonly MultiSelectItem<Value>[]) => string;\n  style?: StyleProp<ViewStyle>;\n  values: Value[];\n  id?: string;\n};\n\nexport const MultiSelect = <Value,>({\n  color = \"gray\",\n  disabled = false,\n  emptyResultText,\n  enableGroups = true,\n  filterPlaceholder,\n  items,\n  onValueChange,\n  placeholder,\n  renderTagGroup,\n  error,\n  style,\n  values,\n  id,\n}: MultiSelectProps<Value>) => {\n  const [filter, setFilter] = useState<string>(\"\");\n  const [filterFocused, setFilterFocused] = useBoolean(false);\n\n  const shouldScrollToBottomRef = useRef(false);\n  const selectedTagListRef = useRef<View & Element>(null);\n  const inputRef = useRef<View>(null);\n  const [visible, { open, close }] = useDisclosure(false);\n\n  const tint50 = colors[color][50];\n  const tint100 = colors[color][100];\n\n  useEffect(() => {\n    if (!visible) {\n      setFilter(\"\");\n    }\n  }, [visible]);\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies(values):\n  useEffect(() => {\n    if (shouldScrollToBottomRef.current) {\n      const top = selectedTagListRef.current?.scrollHeight;\n      selectedTagListRef.current?.scrollTo({ top });\n    }\n\n    shouldScrollToBottomRef.current = false;\n  }, [values]);\n\n  const handleSelectItem = (item: MultiSelectItem<Value>) => {\n    shouldScrollToBottomRef.current = true;\n    onValueChange([...values, item.value]);\n  };\n\n  const handleRemoveItem = (item: MultiSelectItem<Value>) => {\n    onValueChange(values.filter(index => index !== item.value));\n  };\n\n  const handleClearAll = () => {\n    onValueChange([]);\n  };\n\n  const handleSelectGroup = (groupItems: readonly MultiSelectItem<Value>[]) => {\n    shouldScrollToBottomRef.current = true;\n    const items = groupItems.map(item => item.value);\n    const newValue = [...new Set([...values, ...items])];\n    onValueChange(newValue);\n  };\n\n  // Used to get full selected value informations in O(1).\n  const valueItemMapping = useMemo(() => {\n    const map = new Map<Value, MultiSelectItem<Value>>();\n    items.forEach(item => {\n      map.set(item.value, item);\n    });\n    return map;\n  }, [items]);\n\n  const selectedTags = useMemo(\n    () => values.map(value => valueItemMapping.get(value)).filter(isNotNullish),\n    [values, valueItemMapping],\n  );\n\n  const filteredItems = useMemo(() => {\n    const remainingTags = items.filter(item => !values.includes(item.value));\n    const cleanedFilter = filter.trim().toLowerCase();\n\n    return cleanedFilter === \"\"\n      ? remainingTags\n      : remainingTags.filter(({ label }) => label.toLowerCase().includes(cleanedFilter));\n  }, [filter, items, values]);\n\n  const sections = useMemo(() => {\n    return Array.filterMap(\n      Dict.entries(groupBy(filteredItems, ({ group }) => group)),\n      ([groupName, data]) =>\n        data === undefined ? Option.None() : Option.Some({ title: groupName, data }),\n    );\n  }, [filteredItems]);\n\n  const ListHeaderComponent = useMemo(\n    () => (\n      <Box direction=\"row\" alignItems=\"center\" style={styles.filterContainer}>\n        <TextInput\n          autoComplete=\"off\"\n          inputMode=\"search\"\n          multiline={false}\n          rows={1}\n          onChangeText={filterValue => setFilter(filterValue)}\n          placeholder={filterPlaceholder}\n          value={filter}\n          onFocus={setFilterFocused.on}\n          onBlur={setFilterFocused.off}\n          style={[styles.filterInput, filterFocused && styles.filterFocused]}\n        />\n\n        <Icon\n          name=\"search-filled\"\n          color={colors[color].primary}\n          size={20}\n          style={styles.searchIcon}\n        />\n      </Box>\n    ),\n    [filter, filterFocused, setFilterFocused, filterPlaceholder, color],\n  );\n\n  const ListEmptyComponent = useMemo(\n    () => (\n      <Box justifyContent=\"center\" alignItems=\"center\" style={styles.emptyList}>\n        <Icon name=\"clipboard-search-regular\" size={24} color={colors.gray.primary} />\n\n        {isNotNullishOrEmpty(emptyResultText) && (\n          <>\n            <Space height={8} />\n            <Text style={styles.emptyListText}>{emptyResultText}</Text>\n          </>\n        )}\n      </Box>\n    ),\n    [emptyResultText],\n  );\n\n  return (\n    <View style={style}>\n      <Pressable\n        id={id}\n        ref={inputRef}\n        aria-haspopup=\"listbox\"\n        aria-expanded={visible}\n        disabled={disabled}\n        onPress={open}\n        style={({ hovered, focused }) => [\n          styles.base,\n          hovered && styles.hovered,\n          (focused || visible) && styles.focused,\n          disabled && styles.disabled,\n          isNotNullish(error) && styles.errored,\n        ]}\n      >\n        <Box ref={selectedTagListRef} alignItems=\"center\" direction=\"row\" style={styles.tagsList}>\n          {selectedTags.length > 0 ? (\n            selectedTags.map(item => (\n              <Tag\n                key={String(item.value)}\n                color={color}\n                onPressRemove={disabled ? undefined : () => handleRemoveItem(item)}\n                style={styles.tag}\n              >\n                {item.label}\n              </Tag>\n            ))\n          ) : placeholder !== \"\" ? (\n            <Text role=\"label\" numberOfLines={1} style={styles.placeholder}>\n              {placeholder}\n            </Text>\n          ) : null}\n        </Box>\n\n        <Box direction=\"row\" alignItems=\"center\" style={styles.actions}>\n          {selectedTags.length >= 1 && !disabled && (\n            <>\n              <Pressable role=\"button\" onPress={handleClearAll}>\n                <Icon name=\"dismiss-filled\" color={colors.gray.primary} size={15} />\n              </Pressable>\n\n              <Space width={8} />\n            </>\n          )}\n\n          <Icon\n            color={colors.gray.primary}\n            name={visible ? \"chevron-up-filled\" : \"chevron-down-filled\"}\n            size={20}\n          />\n        </Box>\n      </Pressable>\n\n      <Popover\n        role=\"listbox\"\n        matchReferenceWidth={true}\n        onDismiss={close}\n        referenceRef={inputRef}\n        returnFocus={true}\n        visible={visible}\n      >\n        <View style={styles.list}>\n          {enableGroups ? (\n            <SectionList\n              role=\"listbox\"\n              aria-multiselectable={true}\n              keyExtractor={(item, index) => `group-field-${String(item.value)}-${index}`}\n              ListHeaderComponent={ListHeaderComponent}\n              ListEmptyComponent={ListEmptyComponent}\n              ListFooterComponent={<Space height={16} />}\n              sections={sections}\n              renderSectionHeader={({ title, data }) => (\n                <Pressable\n                  role=\"listitem\"\n                  onPress={() => handleSelectGroup(data)}\n                  style={({ hovered, pressed, focused }) => [\n                    styles.groupTitleBase,\n                    (hovered || focused) && { backgroundColor: tint50 },\n                    pressed && { backgroundColor: tint100 },\n                  ]}\n                >\n                  <Text numberOfLines={1} style={styles.groupTitle}>\n                    {title}\n                  </Text>\n\n                  {isNotNullish(renderTagGroup) && <Tag color={color}>{renderTagGroup(data)}</Tag>}\n                </Pressable>\n              )}\n              renderItem={({ item }) => (\n                <LineItem\n                  color={color}\n                  filter={filter}\n                  item={item}\n                  handleSelectItem={handleSelectItem}\n                  style={styles.lineInGroup}\n                />\n              )}\n            />\n          ) : (\n            <FlatList\n              role=\"list\"\n              data={filteredItems}\n              keyExtractor={item => `field-${String(item.value)}`}\n              ListHeaderComponent={ListHeaderComponent}\n              ListEmptyComponent={ListEmptyComponent}\n              ListFooterComponent={<Space height={8} />}\n              renderItem={({ item }) => (\n                <LineItem\n                  color={color}\n                  filter={filter}\n                  item={item}\n                  handleSelectItem={handleSelectItem}\n                />\n              )}\n            />\n          )}\n        </View>\n      </Popover>\n\n      <InputError message={error} />\n    </View>\n  );\n};\n\ntype LineItemProps<Value> = {\n  color: ColorVariants;\n  filter: string;\n  handleSelectItem: (item: MultiSelectItem<Value>) => void;\n  item: MultiSelectItem<Value>;\n  style?: StyleProp<TextStyle>;\n};\n\nconst LineItem = <Value,>({\n  item,\n  color,\n  filter,\n  handleSelectItem,\n  style,\n}: LineItemProps<Value>) => {\n  const { label, disabled = false } = item;\n  const cleanFilter = filter.trim().toLowerCase();\n\n  const tint50 = colors[color][50];\n  const tint100 = colors[color][100];\n\n  const tokens = useMemo(\n    () => (disabled || cleanFilter === \"\" ? label : safeSplitAround(label, cleanFilter)),\n    [label, disabled, cleanFilter],\n  );\n\n  return (\n    <PressableText\n      role=\"listitem\"\n      disabled={disabled}\n      numberOfLines={1}\n      onPress={() => handleSelectItem(item)}\n      style={({ hovered, pressed }) => [\n        styles.line,\n        style,\n        hovered && { backgroundColor: tint50 },\n        pressed && { backgroundColor: tint100 },\n        disabled && { backgroundColor: colors.gray[50], color: colors.gray[100] },\n      ]}\n    >\n      {typeof tokens === \"string\"\n        ? tokens\n        : tokens.map((token, index) => {\n            const colored = token.toLowerCase() === cleanFilter;\n\n            if (!colored) {\n              return token;\n            }\n\n            return (\n              <Text key={index} style={{ color }}>\n                {token}\n              </Text>\n            );\n          })}\n    </PressableText>\n  );\n};\n","import { Meta } from \"@storybook/react\";\nimport { useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { Except } from \"type-fest\";\nimport { MultiSelect, MultiSelectItem, MultiSelectProps } from \"../src/components/MultiSelect\";\nimport { ColorVariants, colors } from \"../src/constants/design\";\nimport { StoryBlock, StoryPart } from \"./_StoriesComponents\";\n\nconst styles = StyleSheet.create({\n  select: {\n    maxWidth: 400,\n  },\n});\n\nexport default {\n  title: \"Forms/MultiSelect\",\n  component: MultiSelect,\n} as Meta<typeof MultiSelect>;\n\nconst items: MultiSelectItem<string>[] = [\n  { label: \"Camille\", value: \"camille\", group: \"C\" },\n  { label: \"Charlotte\", value: \"charlotte\", group: \"C\" },\n  { label: \"Francis\", value: \"francis\", group: \"F\" },\n  { label: \"Émilie\", value: \"emilie\", group: \"E\" },\n  { label: \"François\", value: \"francois\", group: \"F\" },\n  { label: \"Laura\", value: \"laura\", group: \"L\" },\n  { label: \"Marie-Anne\", value: \"marie_anne\", group: \"M\" },\n  { label: \"Natasha\", value: \"natasha\", group: \"N\", disabled: true },\n  { label: \"Nicolas\", value: \"nicolas\", group: \"N\" },\n  { label: \"Pierre\", value: \"pierre\", group: \"P\" },\n];\n\nconst EditableMultiSelect = ({\n  initialValues = [],\n  ...props\n}: Except<MultiSelectProps<string>, \"onValueChange\" | \"items\" | \"values\"> & {\n  items?: MultiSelectItem<string>[];\n  initialValues?: string[];\n}) => {\n  const [values, setValues] = useState(initialValues);\n\n  return (\n    <MultiSelect\n      placeholder=\"Select people...\"\n      filterPlaceholder=\"Search...\"\n      emptyResultText=\"No result\"\n      values={values}\n      items={items}\n      onValueChange={setValues}\n      style={styles.select}\n      {...props}\n    />\n  );\n};\n\nexport const Variations = () => {\n  return (\n    <StoryBlock title=\"MultiSelect variations\">\n      <StoryPart title=\"Default\">\n        <EditableMultiSelect />\n      </StoryPart>\n\n      <StoryPart title=\"Without groups\">\n        <EditableMultiSelect enableGroups={false} />\n      </StoryPart>\n\n      <StoryPart title=\"Disabled\">\n        <EditableMultiSelect disabled={true} />\n      </StoryPart>\n\n      <StoryPart title=\"Disabled with a value\">\n        <EditableMultiSelect disabled={true} initialValues={[\"charlotte\"]} />\n      </StoryPart>\n\n      <StoryPart title=\"Without any option\">\n        <EditableMultiSelect items={[]} />\n      </StoryPart>\n    </StoryBlock>\n  );\n};\n\nexport const Colors = () => {\n  return (\n    <StoryBlock title=\"MultiSelect colors\">\n      {Object.keys(colors).map(color => (\n        <StoryPart key={color} title={color}>\n          <EditableMultiSelect color={color as ColorVariants} />\n        </StoryPart>\n      ))}\n    </StoryBlock>\n  );\n};\n"],"names":["styles","StyleSheet","SectionList","ref","ItemSeparatorComponent","ListEmptyComponent","ListFooterComponent","ListHeaderComponent","contentContainerStyle","horizontal","keyExtractor","onEndReached","onEndReachedThresholdPx","onKeyDown","onScroll","renderItem","renderSectionHeader","role","scrollEventThrottle","sections","showsScrollIndicators","style","groupId","useId","scrollTrackerRef","useRef","scrollTrackerStyle","useEffect","element","observer","entries","entry","jsxs","ScrollView","section","Fragment","item","index","jsx","View","MAX_INPUT_HEIGHT","ITEM_ELEMENT_HEIGHT","NB_SUGGESTION_DISPLAYED","texts","backgroundColor","colors","radii","shadows","MultiSelect","color","disabled","emptyResultText","enableGroups","filterPlaceholder","items","onValueChange","placeholder","renderTagGroup","error","values","id","filter","setFilter","useState","filterFocused","setFilterFocused","useBoolean","shouldScrollToBottomRef","selectedTagListRef","inputRef","visible","open","close","useDisclosure","tint50","tint100","top","handleSelectItem","handleRemoveItem","handleClearAll","handleSelectGroup","groupItems","newValue","valueItemMapping","useMemo","map","selectedTags","value","isNotNullish","filteredItems","remainingTags","cleanedFilter","label","Array","Dict","groupBy","group","groupName","data","Option","Box","TextInput","filterValue","Icon","isNotNullishOrEmpty","Space","Text","Pressable","hovered","focused","Tag","Popover","title","pressed","LineItem","FlatList","InputError","cleanFilter","tokens","safeSplitAround","PressableText","token","create","select","maxWidth","MultiSelect_stories","component","EditableMultiSelect","initialValues","props","setValues","Variations","StoryBlock","StoryPart","Colors","Object","keys"],"mappings":"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"}