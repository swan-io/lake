{"version":3,"file":"Filters.stories-B-md3PGf.js","sources":["../../../packages/lake/src/components/FilterChooser.tsx","../../../packages/shared-business/src/components/Filters.tsx","../../../packages/shared-business/__stories__/Filters.stories.tsx"],"sourcesContent":["import { useRef } from \"react\";\nimport { Pressable, StyleSheet, View } from \"react-native\";\nimport { colors } from \"../constants/design\";\nimport { useDisclosure } from \"../hooks/useDisclosure\";\nimport { isNotNullishOrEmpty } from \"../utils/nullish\";\nimport { FlatList } from \"./FlatList\";\nimport { Icon } from \"./Icon\";\nimport { LakeButton } from \"./LakeButton\";\nimport { LakeText } from \"./LakeText\";\nimport { Popover } from \"./Popover\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  selected: {\n    color: colors.gray[500],\n  },\n  list: {\n    paddingVertical: 20,\n    marginVertical: 4,\n    minWidth: 250,\n    overflow: \"hidden\",\n  },\n  item: {\n    display: \"flex\",\n    paddingHorizontal: 24,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    paddingVertical: 8,\n  },\n  itemHovered: {\n    backgroundColor: colors.gray[50],\n  },\n  availableFiltersTitle: {\n    paddingHorizontal: 24,\n  },\n});\n\n/**\n * @deprecated\n */\nexport const FilterChooser = <FilterName extends string>({\n  filters,\n  openFilters,\n  label,\n  title,\n  availableFilters,\n  large = true,\n  onAddFilter,\n}: {\n  filters: Partial<Record<FilterName, unknown>>;\n  openFilters: FilterName[];\n  label: string;\n  title?: string;\n  availableFilters: { label: string; name: FilterName }[];\n  large?: boolean;\n  onAddFilter: (filterName: FilterName) => void;\n}) => {\n  const inputRef = useRef<View>(null);\n  const [visible, { close, toggle }] = useDisclosure(false);\n\n  return (\n    <>\n      <LakeButton\n        size=\"small\"\n        mode=\"secondary\"\n        color=\"gray\"\n        onPress={toggle}\n        ref={inputRef}\n        icon={large ? \"chevron-down-filled\" : \"filter-filled\"}\n        iconPosition=\"end\"\n        ariaLabel={label}\n      >\n        {large ? label : null}\n      </LakeButton>\n\n      <Popover\n        role=\"listbox\"\n        matchReferenceMinWidth={true}\n        onDismiss={close}\n        referenceRef={inputRef}\n        returnFocus={false}\n        visible={visible}\n      >\n        <View style={styles.list}>\n          {isNotNullishOrEmpty(title) ? (\n            <>\n              <LakeText style={styles.availableFiltersTitle}>{title}</LakeText>\n              <Space height={8} />\n            </>\n          ) : null}\n\n          <FlatList\n            role=\"list\"\n            data={availableFilters}\n            keyExtractor={(_, index) => `filter-item-${index}`}\n            renderItem={({ item }) => {\n              const isSet = Boolean(filters[item.name]) || openFilters.includes(item.name);\n              return (\n                <Pressable\n                  style={({ hovered }) => [styles.item, hovered && styles.itemHovered]}\n                  role=\"button\"\n                  disabled={isSet}\n                  onPress={() => {\n                    onAddFilter(item.name);\n                    close();\n                  }}\n                >\n                  <LakeText variant=\"smallRegular\" style={isSet && styles.selected}>\n                    {item.label}\n                  </LakeText>\n\n                  {isSet && <Icon color={colors.positive[500]} name=\"checkmark-filled\" size={14} />}\n                </Pressable>\n              );\n            }}\n          />\n        </View>\n      </Popover>\n    </>\n  );\n};\n","import { Array, Dict, Option } from \"@swan-io/boxed\";\nimport { Box } from \"@swan-io/lake/src/components/Box\";\nimport { FlatList } from \"@swan-io/lake/src/components/FlatList\";\nimport { Icon } from \"@swan-io/lake/src/components/Icon\";\nimport { LakeCheckbox } from \"@swan-io/lake/src/components/LakeCheckbox\";\nimport { LakeLabel } from \"@swan-io/lake/src/components/LakeLabel\";\nimport { LakeRadio } from \"@swan-io/lake/src/components/LakeRadio\";\nimport { LakeTextInput } from \"@swan-io/lake/src/components/LakeTextInput\";\nimport { Popover } from \"@swan-io/lake/src/components/Popover\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport { Stack } from \"@swan-io/lake/src/components/Stack\";\nimport { Tag } from \"@swan-io/lake/src/components/Tag\";\nimport { colors, shadows } from \"@swan-io/lake/src/constants/design\";\nimport { useDisclosure } from \"@swan-io/lake/src/hooks/useDisclosure\";\nimport { usePreviousValue } from \"@swan-io/lake/src/hooks/usePreviousValue\";\nimport { isNotNullish, isNullish } from \"@swan-io/lake/src/utils/nullish\";\nimport { ValidatorResult } from \"@swan-io/use-form\";\nimport dayjs from \"dayjs\";\nimport { Ref, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport { Pressable, StyleSheet, Text, View } from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport { Simplify } from \"type-fest\";\nimport { DateFormat, locale, t } from \"../utils/i18n\";\nimport { DatePickerDate, DatePickerModal } from \"./DatePicker\";\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingRight: 12,\n    paddingBottom: 8,\n  },\n  shadowed: {\n    position: \"absolute\",\n    opacity: 0,\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 4,\n    boxShadow: shadows.tile,\n    transitionDuration: \"150ms\",\n    transitionProperty: \"opacity\",\n  },\n  hovered: {\n    opacity: 1,\n  },\n  dropdown: {\n    maxHeight: 400,\n    minWidth: 200,\n  },\n  itemHovered: {\n    backgroundColor: colors.gray[50],\n  },\n  content: {\n    paddingVertical: 12,\n  },\n  inputContent: {\n    paddingHorizontal: 24,\n    paddingTop: 24,\n    paddingBottom: 16,\n  },\n  radio: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    height: 32,\n    paddingHorizontal: 24,\n  },\n  itemLabel: {\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\",\n    whiteSpace: \"nowrap\",\n  },\n  input: {\n    width: 250,\n  },\n  value: {\n    maxWidth: 130,\n    whiteSpace: \"nowrap\",\n  },\n});\n\ntype Item<T> = {\n  label: string;\n  value: T;\n};\n\ntype TagProps = {\n  ref?: Ref<View>;\n  isActive: boolean;\n  label: string;\n  value?: string;\n  onPress: () => void;\n  onPressRemove: () => void;\n};\n\nconst FilterTag = ({ ref, onPress, onPressRemove, label, value = \"\", isActive }: TagProps) => (\n  <Pressable ref={ref} onPress={onPress}>\n    {({ hovered }) => (\n      <>\n        <View style={[styles.shadowed, hovered && styles.hovered]} />\n\n        <Tag label={label} color=\"current\" onPressRemove={onPressRemove}>\n          <Box direction=\"row\" alignItems=\"center\">\n            <Text numberOfLines={1} style={styles.value}>\n              {value}\n            </Text>\n\n            <Space width={4} />\n\n            <Icon\n              color={colors.current.primary}\n              name={isActive ? \"chevron-up-filled\" : \"chevron-down-filled\"}\n              size={16}\n            />\n          </Box>\n        </Tag>\n      </>\n    )}\n  </Pressable>\n);\n\ntype FilterRadioProps<T> = {\n  autoOpen?: boolean;\n  items: Item<T>[];\n  width?: number;\n  label: string;\n  value: T | undefined;\n  onPressRemove: () => void;\n  onValueChange: (value: T | undefined) => void;\n};\n\nconst FilterRadio = <T,>({\n  label,\n  items,\n  width,\n  value,\n  onValueChange,\n  onPressRemove,\n  autoOpen = false,\n}: FilterRadioProps<T>) => {\n  const inputRef = useRef<View>(null);\n  const [visible, { close, toggle }] = useDisclosure(autoOpen);\n  const currentValue = useMemo(() => items.find(i => i.value === value), [items, value]);\n\n  return (\n    <View style={styles.container}>\n      <FilterTag\n        label={label}\n        onPress={toggle}\n        ref={inputRef}\n        onPressRemove={onPressRemove}\n        isActive={visible}\n        value={currentValue?.label}\n      />\n\n      <Popover\n        role=\"listbox\"\n        matchReferenceWidth={false}\n        onDismiss={close}\n        referenceRef={inputRef}\n        returnFocus={false}\n        visible={visible}\n      >\n        <FlatList\n          role=\"list\"\n          data={items}\n          style={[styles.dropdown, { width }]}\n          contentContainerStyle={styles.content}\n          keyExtractor={(_, index) => `filter-item-${index}`}\n          renderItem={({ item }) => {\n            const isSelected = value === item.value;\n\n            return (\n              <Pressable\n                role=\"radio\"\n                aria-checked={isSelected}\n                style={({ hovered }) => [styles.radio, hovered && styles.itemHovered]}\n                onPress={() => {\n                  onValueChange(item.value);\n                  close();\n                }}\n              >\n                <LakeRadio value={isSelected} />\n                <Space width={12} />\n                <Text style={styles.itemLabel}>{item.label}</Text>\n              </Pressable>\n            );\n          }}\n        />\n      </Popover>\n    </View>\n  );\n};\n\ntype FilterCheckboxProps<T> = {\n  label: string;\n  items: Item<T>[];\n  width?: number;\n  onValueChange: (value: T[] | undefined) => void;\n  value: T[] | undefined;\n  onPressRemove: () => void;\n  autoOpen?: boolean;\n  checkAllLabel?: string;\n};\n\ntype CheckAllItem = {\n  label: string;\n  checked: boolean | \"mixed\";\n};\n\nconst FilterCheckbox = <T,>({\n  label,\n  items,\n  width,\n  checkAllLabel,\n  value,\n  onValueChange,\n  onPressRemove,\n  autoOpen = false,\n}: FilterCheckboxProps<T>) => {\n  const inputRef = useRef<View>(null);\n  const [visible, { close, toggle }] = useDisclosure(autoOpen);\n\n  const valueSet = useMemo(() => new Set(value), [value]);\n\n  const currentValue = useMemo(\n    () => items.filter(item => valueSet.has(item.value)),\n    [items, valueSet],\n  );\n\n  const allChecked = checkAllLabel != null && valueSet.size === items.length;\n\n  const listItems = useMemo(() => {\n    if (checkAllLabel == null) {\n      return items;\n    }\n\n    const checked: CheckAllItem[\"checked\"] =\n      valueSet.size === 0 ? false : valueSet.size === items.length ? true : \"mixed\";\n\n    const checkAllItem: CheckAllItem = {\n      label: checkAllLabel,\n      checked,\n    };\n\n    return [checkAllItem, ...items];\n  }, [items, checkAllLabel, valueSet]);\n\n  return (\n    <View style={styles.container}>\n      <FilterTag\n        label={label}\n        onPress={toggle}\n        ref={inputRef}\n        onPressRemove={onPressRemove}\n        isActive={visible}\n        value={allChecked ? checkAllLabel : currentValue.map(item => item.label).join(\", \")}\n      />\n\n      <Popover\n        role=\"listbox\"\n        matchReferenceWidth={false}\n        onDismiss={close}\n        referenceRef={inputRef}\n        returnFocus={false}\n        visible={visible}\n      >\n        <FlatList\n          role=\"list\"\n          data={listItems}\n          style={[styles.dropdown, { width }]}\n          contentContainerStyle={styles.content}\n          keyExtractor={(_, index) => `filter-item-${index}`}\n          renderItem={({ item }) => {\n            const isSelected = match<Item<unknown> | CheckAllItem>(item)\n              .with({ checked: P.any }, ({ checked }) => checked)\n              .with({ value: P.any }, ({ value }) => valueSet.has(value as T))\n              .exhaustive();\n\n            const onPress = match<Item<unknown> | CheckAllItem>(item)\n              // Check all item\n              .with({ checked: P.any }, ({ checked }) => () => {\n                if (checked === true) {\n                  onValueChange(undefined);\n                } else {\n                  onValueChange(items.map(item => item.value));\n                }\n              })\n              // Regular item\n              .with({ value: P.any }, ({ value }) => () => {\n                const nextValues = new Set([...valueSet]);\n                if (isSelected === true) {\n                  nextValues.delete(value as T);\n                } else {\n                  nextValues.add(value as T);\n                }\n                if (nextValues.size === 0) {\n                  onValueChange(undefined);\n                } else {\n                  onValueChange([...nextValues]);\n                }\n              })\n              .exhaustive();\n\n            return (\n              <Pressable\n                role=\"radio\"\n                aria-checked={isSelected}\n                style={({ hovered }) => [styles.radio, hovered && styles.itemHovered]}\n                onPress={onPress}\n              >\n                <LakeCheckbox value={isSelected} />\n                <Space width={12} />\n                <Text style={styles.itemLabel}>{item.label}</Text>\n              </Pressable>\n            );\n          }}\n        />\n      </Popover>\n    </View>\n  );\n};\n\ntype FilterDateProps = {\n  label: string;\n  noValueText: string;\n  cancelText: string;\n  submitText: string;\n  dateFormat: DateFormat;\n  isSelectable?: (date: DatePickerDate) => boolean;\n  validate?: (value: string) => ValidatorResult;\n  initialValue?: string;\n  onValueChange: (value: string) => void;\n  onPressRemove: () => void;\n  autoOpen?: boolean;\n};\n\nconst FilterDate = ({\n  label,\n  initialValue,\n  noValueText,\n  cancelText,\n  submitText,\n  dateFormat,\n  isSelectable,\n  validate,\n  onValueChange,\n  onPressRemove,\n  autoOpen = false,\n}: FilterDateProps) => {\n  const inputRef = useRef<View>(null);\n  const [visible, { close, toggle }] = useDisclosure(autoOpen);\n\n  const value = useMemo(\n    () => (isNotNullish(initialValue) ? dayjs(initialValue).format(dateFormat) : \"\"),\n    [initialValue, dateFormat],\n  );\n\n  return (\n    <View style={styles.container}>\n      <FilterTag\n        label={label}\n        onPress={toggle}\n        ref={inputRef}\n        onPressRemove={onPressRemove}\n        isActive={visible}\n        value={isNotNullish(initialValue) ? dayjs(initialValue).format(dateFormat) : noValueText}\n      />\n\n      <DatePickerModal\n        visible={visible}\n        format={dateFormat}\n        firstWeekDay=\"monday\"\n        label={label}\n        cancelLabel={cancelText}\n        confirmLabel={submitText}\n        value={value}\n        isSelectable={isSelectable}\n        validate={validate}\n        onChange={value => {\n          const formattedValue = dayjs(value, dateFormat, true).toJSON();\n          onValueChange(formattedValue);\n        }}\n        onDismiss={close}\n      />\n    </View>\n  );\n};\n\ntype FilterInputProps = {\n  label: string;\n  noValueText: string;\n  validate?: (value: string) => ValidatorResult;\n  placeholder?: string;\n  initialValue?: string;\n  onValueChange: (value: string | undefined) => void;\n  onPressRemove: () => void;\n  autoOpen?: boolean;\n};\n\nconst FilterInput = ({\n  label,\n  initialValue = \"\",\n  noValueText,\n  autoOpen = false,\n  placeholder,\n  validate,\n  onValueChange,\n  onPressRemove,\n}: FilterInputProps) => {\n  const [visible, { close, toggle }] = useDisclosure(autoOpen);\n  const tagRef = useRef<View>(null);\n\n  const getValueState = useCallback(\n    (inputValue: string, isInitialValue: boolean) => {\n      const trimmed = inputValue.trim();\n      const error = validate?.(trimmed) ?? undefined;\n      const validValue = isNullish(error) ? trimmed : undefined;\n\n      if (!isInitialValue) {\n        onValueChange(validValue);\n      }\n\n      return {\n        inputValue,\n        validValue,\n        error: isInitialValue ? undefined : error,\n      };\n    },\n    [validate, onValueChange],\n  );\n\n  const [{ inputValue, validValue, error }, setState] = useState(() =>\n    getValueState(initialValue, true),\n  );\n\n  const onChangeText = useCallback(\n    (value: string) => setState(getValueState(value, false)),\n    [getValueState],\n  );\n\n  return (\n    <View style={styles.container}>\n      <FilterTag\n        label={label}\n        onPress={toggle}\n        ref={tagRef}\n        onPressRemove={onPressRemove}\n        isActive={visible}\n        value={validValue ?? noValueText}\n      />\n\n      <Popover\n        role=\"listbox\"\n        matchReferenceWidth={false}\n        onDismiss={close}\n        referenceRef={tagRef}\n        returnFocus={false}\n        visible={visible}\n      >\n        <View style={[styles.dropdown, styles.inputContent]}>\n          <LakeLabel\n            label={label}\n            render={id => (\n              <LakeTextInput\n                id={id}\n                value={inputValue}\n                error={error}\n                style={styles.input}\n                placeholder={placeholder}\n                onChangeText={onChangeText}\n              />\n            )}\n          />\n        </View>\n      </Popover>\n    </View>\n  );\n};\n\n/**\n * @deprecated\n */\nexport type FilterCheckboxDef<T> = {\n  type: \"checkbox\";\n  label: string;\n  items: Item<T>[];\n  width?: number;\n  checkAllLabel?: string;\n};\n\n/**\n * @deprecated\n */\nexport type FilterRadioDef<T> = {\n  type: \"radio\";\n  label: string;\n  items: Item<T>[];\n  width?: number;\n};\n\n/**\n * @deprecated\n */\nexport type FilterDateDef<Values = unknown> = {\n  type: \"date\";\n  label: string;\n  cancelText: string;\n  submitText: string;\n  noValueText: string;\n  dateFormat: DateFormat;\n  isSelectable?: (date: DatePickerDate, filters: Values) => boolean;\n  validate?: (value: string, filters: Values) => ValidatorResult;\n};\n\n/**\n * @deprecated\n */\nexport type FilterInputDef = {\n  type: \"input\";\n  label: string;\n  noValueText: string;\n  placeholder?: string;\n  validate?: (value: string) => ValidatorResult;\n};\n\ntype Filter<T> = FilterCheckboxDef<T> | FilterRadioDef<T> | FilterDateDef | FilterInputDef;\n\ntype ExtractFilterValue<T extends Filter<unknown>> = T extends { type: \"checkbox\" }\n  ? T[\"items\"][number][\"value\"][] | undefined\n  : T extends { type: \"radio\" }\n    ? T[\"items\"][number][\"value\"] | undefined\n    : string | undefined;\n\nconst getFilterValue = <T extends Filter<unknown>[\"type\"]>(\n  _type: T,\n  filters: FiltersState<FiltersDefinition>,\n  name: string,\n) => filters[name] as ExtractFilterValue<Extract<Filter<unknown>, { type: T }>>;\n\ntype FiltersDefinition = Record<string, Filter<unknown>>;\n\n/**\n * @deprecated\n */\nexport type FiltersState<T extends FiltersDefinition> = Simplify<{\n  [K in keyof T]: Simplify<ExtractFilterValue<T[K]>>;\n}>;\n\ntype FiltersStackProps<\n  Definition extends FiltersDefinition,\n  State extends FiltersState<Definition> = FiltersState<Definition>,\n> = {\n  definition: Definition;\n  filters: State;\n  openedFilters: (keyof Definition)[];\n  onChangeOpened: (value: (keyof Definition)[]) => void;\n  onChangeFilters: (value: State) => void;\n};\n\n/**\n * @deprecated\n */\nexport const FiltersStack = <T extends FiltersDefinition>({\n  filters,\n  openedFilters,\n  definition,\n  onChangeOpened,\n  onChangeFilters,\n}: FiltersStackProps<T>) => {\n  const previousOpened = usePreviousValue(openedFilters);\n\n  const lastOpenedFilter =\n    openedFilters.length > previousOpened.length\n      ? openedFilters[openedFilters.length - 1]\n      : undefined;\n\n  if (openedFilters.length === 0) {\n    return null;\n  }\n\n  return (\n    <Stack direction=\"row\" wrap=\"wrap\">\n      {openedFilters.map(filterName => {\n        const filterDefinition = definition[filterName];\n\n        if (typeof filterName !== \"string\" || filterDefinition == null) {\n          return null;\n        }\n\n        return (\n          <View key={filterName}>\n            {match<Filter<unknown>>(filterDefinition)\n              .with({ type: \"radio\" }, ({ type, label, items, width }) => (\n                <FilterRadio\n                  label={label}\n                  items={items}\n                  width={width}\n                  autoOpen={lastOpenedFilter === filterName}\n                  onPressRemove={() => {\n                    onChangeFilters({ ...filters, [filterName]: undefined });\n                    onChangeOpened(openedFilters.filter(f => f !== filterName));\n                  }}\n                  value={getFilterValue(type, filters, filterName)}\n                  onValueChange={value => onChangeFilters({ ...filters, [filterName]: value })}\n                />\n              ))\n              .with({ type: \"checkbox\" }, ({ type, label, items, width, checkAllLabel }) => (\n                <FilterCheckbox\n                  label={label}\n                  items={items}\n                  width={width}\n                  checkAllLabel={checkAllLabel}\n                  autoOpen={lastOpenedFilter === filterName}\n                  value={getFilterValue(type, filters, filterName)}\n                  onValueChange={value => onChangeFilters({ ...filters, [filterName]: value })}\n                  onPressRemove={() => {\n                    onChangeFilters({ ...filters, [filterName]: undefined });\n                    onChangeOpened(openedFilters.filter(f => f !== filterName));\n                  }}\n                />\n              ))\n              .with(\n                { type: \"date\" },\n                ({\n                  type,\n                  label,\n                  noValueText,\n                  cancelText,\n                  submitText,\n                  dateFormat,\n                  isSelectable,\n                  validate,\n                }) => (\n                  <FilterDate\n                    label={label}\n                    noValueText={noValueText}\n                    cancelText={cancelText}\n                    submitText={submitText}\n                    dateFormat={dateFormat}\n                    autoOpen={lastOpenedFilter === filterName}\n                    isSelectable={isSelectable ? date => isSelectable(date, filters) : undefined}\n                    validate={validate ? value => validate(value, filters) : undefined}\n                    initialValue={getFilterValue(type, filters, filterName)}\n                    onValueChange={value => onChangeFilters({ ...filters, [filterName]: value })}\n                    onPressRemove={() => {\n                      onChangeFilters({ ...filters, [filterName]: undefined });\n                      onChangeOpened(openedFilters.filter(f => f !== filterName));\n                    }}\n                  />\n                ),\n              )\n              .with({ type: \"input\" }, ({ type, label, placeholder, noValueText, validate }) => (\n                <FilterInput\n                  label={label}\n                  placeholder={placeholder}\n                  noValueText={noValueText}\n                  autoOpen={lastOpenedFilter === filterName}\n                  validate={validate}\n                  initialValue={getFilterValue(type, filters, filterName)}\n                  onValueChange={value => onChangeFilters({ ...filters, [filterName]: value })}\n                  onPressRemove={() => {\n                    onChangeFilters({ ...filters, [filterName]: undefined });\n                    onChangeOpened(openedFilters.filter(f => f !== filterName));\n                  }}\n                />\n              ))\n              .exhaustive()}\n          </View>\n        );\n      })}\n    </Stack>\n  );\n};\n\n/**\n * @deprecated\n */\nexport const filter = {\n  checkbox: <T,>(config: { label: string; items: Item<T>[] }): FilterCheckboxDef<T> => ({\n    type: \"checkbox\",\n    label: config.label,\n    items: config.items,\n    checkAllLabel: t(\"common.filters.all\"),\n  }),\n\n  date: (config: {\n    label: string;\n    isSelectable?: (date: DatePickerDate, filters: unknown) => boolean;\n    validate?: (value: string, filters: unknown) => ValidatorResult;\n  }): FilterDateDef => ({\n    type: \"date\",\n    label: config.label,\n    cancelText: t(\"common.filters.cancel\"),\n    submitText: t(\"common.filters.apply\"),\n    noValueText: t(\"common.filters.none\"),\n    dateFormat: locale.dateFormat,\n    isSelectable: config.isSelectable,\n    validate: config.validate,\n  }),\n\n  input: (config: {\n    label: string;\n    placeholder?: string;\n    validate?: (value: string) => ValidatorResult;\n  }): FilterInputDef => ({\n    type: \"input\",\n    label: config.label,\n    noValueText: t(\"common.filters.none\"),\n    placeholder: config.placeholder,\n    validate: config.validate,\n  }),\n\n  radio: <T,>(config: { label: string; items: Item<T>[] }): FilterRadioDef<T> => ({\n    type: \"radio\",\n    label: config.label,\n    items: config.items,\n  }),\n} as const;\n\n/**\n * @deprecated\n */\nexport const useFiltersProps = <\n  Definition extends FiltersDefinition,\n  Filters extends Record<string, unknown>,\n>({\n  available,\n  filters,\n  filtersDefinition,\n}: {\n  available?: ReadonlyArray<keyof Filters>;\n  filters: Filters;\n  filtersDefinition: Definition;\n}) => {\n  const availableFilters: { name: keyof Definition; label: string }[] = useMemo(() => {\n    const availableSet = new Set<PropertyKey>(\n      isNullish(available) ? Dict.keys(filtersDefinition) : available,\n    );\n\n    return Array.filterMap(Dict.entries(filtersDefinition), ([name, { label }]) =>\n      availableSet.has(name) ? Option.Some({ name, label }) : Option.None(),\n    );\n  }, [available, filtersDefinition]);\n\n  const [openFilters, setOpenFilters] = useState(() =>\n    Dict.entries(filters)\n      .filter(([, value]) => isNotNullish(value))\n      .map(([name]) => name),\n  );\n\n  useEffect(() => {\n    setOpenFilters(openFilters => {\n      const currentlyOpenFilters = new Set(openFilters);\n      const openFiltersNotYetInState = Dict.entries(filters)\n        .filter(([name, value]) => isNotNullish(value) && !currentlyOpenFilters.has(name))\n        .map(([name]) => name);\n      return [...openFilters, ...openFiltersNotYetInState];\n    });\n  }, [filters]);\n\n  const onAddFilter = useCallback((filter: keyof Filters) => {\n    setOpenFilters(openFilters => [...openFilters, filter]);\n  }, []);\n\n  return {\n    chooser: {\n      availableFilters,\n      filters,\n      label: t(\"common.filters\"),\n      onAddFilter,\n      openFilters,\n    },\n    stack: {\n      definition: filtersDefinition,\n      filters,\n      openedFilters: openFilters,\n      onChangeOpened: setOpenFilters,\n    },\n  };\n};\n","import { Meta } from \"@storybook/react\";\nimport { Box } from \"@swan-io/lake/src/components/Box\";\nimport { FilterChooser } from \"@swan-io/lake/src/components/FilterChooser\";\nimport { Space } from \"@swan-io/lake/src/components/Space\";\nimport { WithCurrentColor } from \"@swan-io/lake/src/components/WithCurrentColor\";\nimport { useState } from \"react\";\nimport { filter, FiltersStack, FiltersState, useFiltersProps } from \"../src/components/Filters\";\nimport { StoryBlock } from \"./_StoriesComponents\";\n\nconst filtersDefinition = {\n  mode: filter.radio({\n    label: \"Mode\",\n    items: [\n      { label: \"QES\", value: \"QES\" },\n      { label: \"Expert\", value: \"Expert\" },\n    ],\n  }),\n\n  status: filter.checkbox({\n    label: \"Status\",\n    items: [\n      { label: \"Accepted\", value: \"Accepted\" },\n      { label: \"Canceled\", value: \"Canceled\" },\n      { label: \"Failed\", value: \"Failed\" },\n      { label: \"Expired\", value: \"Expired\" },\n      { label: \"CustomerRefused\", value: \"CustomerRefused\" },\n    ],\n  }),\n\n  startDate: filter.date({\n    label: \"Start Date\",\n  }),\n\n  resourceId: filter.input({\n    label: \"Resource ID\",\n    placeholder: \"Placeholder...\",\n    validate: value => {\n      if (value.length < 3) {\n        return \"Not long enough\";\n      }\n    },\n  }),\n};\n\ntype State = FiltersState<typeof filtersDefinition>;\n\nexport default {\n  title: \"Forms/Filters\",\n  component: FilterChooser,\n} as Meta<typeof FilterChooser>;\n\nexport const All = () => {\n  const [filters, setFilters] = useState<State>({\n    mode: undefined,\n    status: undefined,\n    resourceId: undefined,\n    startDate: undefined,\n  });\n\n  const filtersProps = useFiltersProps({ filtersDefinition, filters });\n\n  return (\n    <StoryBlock title=\"Filters\">\n      <WithCurrentColor variant=\"live\">\n        <Box alignItems=\"start\">\n          <FilterChooser {...filtersProps.chooser} />\n          <Space height={8} />\n          <FiltersStack {...filtersProps.stack} onChangeFilters={setFilters} />\n        </Box>\n      </WithCurrentColor>\n    </StoryBlock>\n  );\n};\n"],"names":["styles","StyleSheet","colors","FilterChooser","filters","openFilters","label","title","availableFilters","large","onAddFilter","inputRef","useRef","visible","close","toggle","useDisclosure","jsxs","Fragment","jsx","LakeButton","Popover","View","isNotNullishOrEmpty","LakeText","Space","FlatList","_","index","item","isSet","Pressable","hovered","Icon","shadows","FilterTag","ref","onPress","onPressRemove","value","isActive","Tag","Box","Text","FilterRadio","items","width","onValueChange","autoOpen","currentValue","useMemo","i","isSelected","LakeRadio","FilterCheckbox","checkAllLabel","valueSet","allChecked","listItems","checked","match","P","nextValues","LakeCheckbox","FilterDate","initialValue","noValueText","cancelText","submitText","dateFormat","isSelectable","validate","isNotNullish","dayjs","DatePickerModal","formattedValue","FilterInput","placeholder","tagRef","getValueState","useCallback","inputValue","isInitialValue","trimmed","error","validValue","isNullish","setState","useState","onChangeText","LakeLabel","id","LakeTextInput","getFilterValue","_type","name","FiltersStack","openedFilters","definition","onChangeOpened","onChangeFilters","previousOpened","usePreviousValue","lastOpenedFilter","Stack","filterName","filterDefinition","type","f","date","filter","config","t","locale","useFiltersProps","available","filtersDefinition","availableSet","Dict","Array","Option","setOpenFilters","useEffect","currentlyOpenFilters","openFiltersNotYetInState","mode","radio","status","checkbox","startDate","resourceId","input","length","Filters_stories","component","All","setFilters","undefined","filtersProps","StoryBlock","WithCurrentColor","chooser","stack"],"mappings":"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"}