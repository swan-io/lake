{"version":3,"file":"RadioGroup.stories-201e1be0.js","sources":["../../../packages/lake/src/components/RadioGroup.tsx"],"sourcesContent":["import { Fragment } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { colors, ColorVariants } from \"../constants/design\";\nimport { isNullish } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { LakeRadio } from \"./LakeRadio\";\nimport { LakeText } from \"./LakeText\";\nimport { Pressable } from \"./Pressable\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexWrap: \"wrap\",\n  },\n  item: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  withRightSpace: {\n    // use margin instead of <Space /> to avoid line starting with <Space /> because of flex-wrap\n    marginRight: 24,\n  },\n  // We need this bottom margin in case there are too much items and some of them are wrapped to next line\n  withBottomSpace: {\n    // use margin instead of <Space /> to avoid making height bigger than expected\n    marginBottom: 12,\n  },\n});\n\nexport type RadioGroupItem<V> = {\n  name: string;\n  value: V;\n  disabled?: boolean;\n};\n\nexport type RadioGroupProps<V> = {\n  items: RadioGroupItem<V>[];\n  direction?: \"column\" | \"row\";\n  color?: ColorVariants;\n  disabled?: boolean;\n  value?: V;\n  onValueChange: (value: V) => void;\n};\n\nexport function RadioGroup<V>({\n  items,\n  direction = \"column\",\n  color = \"current\",\n  disabled = false,\n  value,\n  onValueChange,\n}: RadioGroupProps<V>) {\n  return (\n    <Box direction={direction} style={styles.container}>\n      {items.map((item, index) => {\n        const isLast = index === items.length - 1;\n        const isDisabled = disabled || !isNullish(item.disabled);\n\n        return (\n          <Fragment key={index}>\n            <Pressable\n              disabled={isDisabled}\n              onPress={() => {\n                if (item.value !== value) {\n                  onValueChange(item.value);\n                }\n              }}\n              style={[\n                styles.item,\n                direction === \"row\" && styles.withBottomSpace,\n                direction === \"row\" && !isLast && styles.withRightSpace,\n              ]}\n            >\n              <LakeRadio disabled={isDisabled} color={color} value={item.value === value} />\n              <Space width={12} />\n\n              <LakeText color={isDisabled ? colors.gray[300] : colors.gray[900]}>\n                {item.name}\n              </LakeText>\n            </Pressable>\n\n            {!isLast && <Space height={direction === \"column\" ? 12 : undefined} />}\n          </Fragment>\n        );\n      })}\n    </Box>\n  );\n}\n"],"names":["styles","StyleSheet","RadioGroup","items","direction","color","disabled","value","onValueChange","jsx","Box","item","index","isLast","isDisabled","isNullish","jsxs","Fragment","Pressable","LakeRadio","Space","LakeText","colors"],"mappings":"uXAUA,MAAAA,EAAAC,EAAA,OAAA,CAAiC,UAAA,CACpB,SAAA,MACC,EACZ,KAAA,CACM,cAAA,MACW,WAAA,QACH,EACd,eAAA,CACgB,YAAA,EAED,EACf,gBAAA,CAEiB,aAAA,EAED,CAElB,CAAA,EAiBO,SAAAC,EAAA,CAAuB,MAAAC,EAC5B,UAAAC,EAAA,SACY,MAAAC,EAAA,UACJ,SAAAC,EAAA,GACG,MAAAC,EACX,cAAAC,CAEF,EAAA,CACE,OAAAC,EAAAC,EAAA,CAAA,UAAAN,EAAA,MAAAJ,EAAA,UAAA,SAAAG,EAAA,IAAA,CAAAQ,EAAAC,IAAA,CAGM,MAAAC,EAAAD,IAAAT,EAAA,OAAA,EACAW,EAAAR,GAAA,CAAAS,EAAAJ,EAAA,QAAA,EAEA,OAAAK,EAAAC,WAAA,CAAA,SAAA,CAEID,EAAAE,EAAC,CAAA,SAAAJ,EACW,QAAA,IAAA,CAERH,EAAA,QAAAJ,GACEC,EAAAG,EAAA,KAAA,CACF,EACF,MAAA,CACOX,EAAA,KACEI,IAAA,OAAAJ,EAAA,gBACuBI,IAAA,OAAA,CAAAS,GAAAb,EAAA,cACW,EAC3C,SAAA,CAEAS,EAAAU,EAAA,CAAA,SAAAL,EAAA,MAAAT,EAAA,MAAAM,EAAA,QAAAJ,EAAA,EAA4EE,EAAAW,EAAA,CAAA,MAAA,EAAA,CAAA,EAC1DX,EAAAY,EAAA,CAAA,MAAAP,EAAAQ,EAAA,KAAA,GAAA,EAAAA,EAAA,KAAA,GAAA,EAAA,SAAAX,EAAA,KAAA,CAIlB,CAAA,CAAA,EACF,CAAAE,GAAAJ,EAAAW,EAAA,CAAA,OAAAhB,IAAA,SAAA,GAAA,OAAA,CAEoE,CAAA,EAAAQ,CAAA,CACtE,CAAA,CAAA,CAAA,CAKV;;;;;;;;;;;;;;;;;;;;;;"}