import{s as S,j as i,v as j,V as m,B as C,c as u,L as _}from"./Space-BJ8o3sFw.js";import{r as n}from"./index-CBqU2yxZ.js";import{S as E}from"./_StoriesComponents-SDLtyL2-.js";import{P as V}from"./index-B1925W4Z.js";import"./extends-CCbyfPlC.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-BtM5VmRH.js";import"./commonStyles-t4XfA7cz.js";const y=S.create({track:{position:"absolute",top:0,right:0,bottom:0,width:3},marker:{pointerEvents:"none",position:"absolute",top:0,right:0,bottom:0,width:3},trackIndicator:{width:3,height:1,position:"absolute",right:0,transformOrigin:"right top",transition:"150ms ease-in-out",transitionProperty:"transform, background-color"}}),b=n.createContext(t=>{}),f=(t,o)=>{const r=t.offsetHeight,e=o.parentElement;if(e==null||!e.contains(t))return{top:0,height:r};let a=0,s=t;for(;s!=null&&s!=e;)a+=s.offsetTop,s=s.offsetParent;return{top:a,height:r}},h=({style:t,contentContainerStyle:o,children:r})=>{const[e,a]=n.useState(null),s=n.useRef(null),d=n.useRef(null),T=n.useCallback(({color:p,element:l})=>{if(s.current!=null){d.current=l;const{top:P,height:N}=f(l,s.current);a({color:p,top:P,height:N})}},[]),R=n.useCallback(()=>{if(d.current!=null&&(e==null?void 0:e.color)!=null){const{top:p,height:l}=f(d.current,s.current);a({color:e==null?void 0:e.color,top:p,height:l})}},[e]);return i.jsx(b.Provider,{value:T,children:i.jsxs(j,{scrollEventThrottle:30,onLayout:R,style:t,contentContainerStyle:o,role:"banner",children:[r,i.jsx(m,{style:y.track,ref:s,children:e!=null?i.jsx(m,{style:[y.trackIndicator,{transform:`translateY(${e.top}px) scaleY(${e.height})`,backgroundColor:e.color}]}):null})]})})},x=({color:t})=>{const o=n.useContext(b),r=n.useRef(null),e=n.useCallback(()=>{r.current!=null&&o({color:t,element:r.current})},[o,t]);return n.useEffect(()=>{r.current!=null&&o({color:t,element:r.current})},[o,t]),i.jsx(m,{ref:r,onLayout:e,style:y.marker})};h.__docgenInfo={description:"",methods:[],displayName:"SidebarNavigationTracker",props:{style:{required:!1,tsType:{name:'ScrollViewProps["style"]',raw:'ScrollViewProps["style"]'},description:""},contentContainerStyle:{required:!1,tsType:{name:'ScrollViewProps["style"]',raw:'ScrollViewProps["style"]'},description:""},children:{required:!0,tsType:{name:'ScrollViewProps["children"]',raw:'ScrollViewProps["children"]'},description:""}}};x.__docgenInfo={description:"",methods:[],displayName:"SidebarNavigationTrackerActiveMarker",props:{color:{required:!0,tsType:{name:"string"},description:""}}};const g=S.create({container:{maxWidth:200},row:{height:32,width:"100%"}}),O={title:"Interactivity/SidebarNavigationTracker",component:h},A=(t,o)=>new Array(o-t+1).fill(0).map((r,e)=>t+e),B=A(1,10).map(t=>({id:t.toString(),title:`Row ${t}`})),c=()=>{const[t,o]=n.useState(""),r=e=>()=>{o(e)};return i.jsx(E,{title:"SidebarNavigationTracker",description:"You can click on a row to display the navigation tracker",children:i.jsx(h,{contentContainerStyle:g.container,children:B.map(e=>i.jsx(V,{onPress:r(e.id),children:i.jsxs(C,{style:g.row,direction:"row",children:[t===e.id&&i.jsx(x,{color:u.positive.primary}),i.jsx(_,{color:t===e.id?u.positive.primary:u.gray.primary,variant:t===e.id?"semibold":"regular",children:e.title})]})},e.id))})})};c.__docgenInfo={description:"",methods:[],displayName:"Default"};var w,v,k;c.parameters={...c.parameters,docs:{...(w=c.parameters)==null?void 0:w.docs,source:{originalSource:`() => {
  const [activeRow, setActiveRow] = useState("");
  const selectRow = (id: string) => () => {
    setActiveRow(id);
  };
  return <StoryBlock title="SidebarNavigationTracker" description="You can click on a row to display the navigation tracker">
      <SidebarNavigationTracker contentContainerStyle={styles.container}>
        {rows.map(row => <Pressable key={row.id} onPress={selectRow(row.id)}>
            <Box style={styles.row} direction="row">
              {activeRow === row.id && <SidebarNavigationTrackerActiveMarker color={colors.positive.primary} />}

              <LakeText color={activeRow === row.id ? colors.positive.primary : colors.gray.primary} variant={activeRow === row.id ? "semibold" : "regular"}>
                {row.title}
              </LakeText>
            </Box>
          </Pressable>)}
      </SidebarNavigationTracker>
    </StoryBlock>;
}`,...(k=(v=c.parameters)==null?void 0:v.docs)==null?void 0:k.source}}};const W=["Default"];export{c as Default,W as __namedExportsOrder,O as default};
//# sourceMappingURL=SidebarNavigationTracker.stories-CtUihiVj.js.map
