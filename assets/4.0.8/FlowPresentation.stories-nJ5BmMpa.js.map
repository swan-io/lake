{"version":3,"file":"FlowPresentation.stories-nJ5BmMpa.js","sources":["../../../packages/lake/src/components/FlowPresentation.tsx"],"sourcesContent":["import { Fragment } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { match } from \"ts-pattern\";\nimport { colors } from \"../constants/design\";\nimport { BorderedIcon } from \"./BorderedIcon\";\nimport { Box } from \"./Box\";\nimport { IconName } from \"./Icon\";\nimport { LakeText } from \"./LakeText\";\nimport { Space } from \"./Space\";\n\nconst desktopIconSize = 100;\nconst borderHeight = 2;\nconst desktopPadding = 40;\n\nconst mobileNumberSize = 24;\nconst mobileBorderWidth = 4;\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n  },\n  textContainer: {\n    width: desktopIconSize + desktopPadding,\n  },\n  lastTextContainer: {\n    width: desktopIconSize,\n  },\n  desktopBarContainer: {\n    flex: 1,\n    paddingRight: 40,\n    height: desktopIconSize,\n  },\n  desktopBar: {\n    width: \"100%\",\n    height: borderHeight,\n    borderRadius: borderHeight / 2,\n    backgroundColor: colors.gray[100],\n  },\n\n  mobileNumber: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    borderColor: colors.current[100],\n    borderWidth: 1,\n    backgroundColor: colors.current[50],\n  },\n  mobileNumberText: {\n    position: \"relative\",\n    top: 1,\n  },\n  mobileBarContainer: {\n    width: mobileNumberSize,\n    paddingVertical: 4,\n  },\n  mobileBar: {\n    width: mobileBorderWidth,\n    height: 12,\n    borderRadius: mobileBorderWidth / 2,\n    backgroundColor: colors.gray[100],\n  },\n});\n\nexport type FlowStep = {\n  label: string;\n  icon: IconName;\n};\n\ntype Props = {\n  steps: FlowStep[];\n  mode: \"desktop\" | \"mobile\";\n};\n\nexport const FlowPresentation = ({ steps, mode }: Props) => {\n  return match(mode)\n    .with(\"desktop\", () => (\n      <Box direction=\"row\" style={styles.container}>\n        {steps.map(({ label, icon }, index) => {\n          const isLast = index === steps.length - 1;\n\n          return (\n            <Fragment key={index}>\n              <Box>\n                <BorderedIcon name={icon} size={100} padding={16} />\n                <Space height={32} />\n\n                <View style={isLast ? styles.lastTextContainer : styles.textContainer}>\n                  <LakeText color={colors.gray[900]} variant=\"medium\">\n                    {index + 1}. {label}\n                  </LakeText>\n                </View>\n              </Box>\n\n              {!isLast && (\n                <Box direction=\"row\" alignItems=\"center\" style={styles.desktopBarContainer}>\n                  <View style={styles.desktopBar} />\n                </Box>\n              )}\n            </Fragment>\n          );\n        })}\n      </Box>\n    ))\n    .with(\"mobile\", () => (\n      <Box direction=\"column\">\n        {steps.map(({ label }, index) => {\n          const isLast = index === steps.length - 1;\n\n          return (\n            <Fragment key={index}>\n              <Box direction=\"row\" alignItems=\"center\">\n                <Box alignItems=\"center\" justifyContent=\"center\" style={styles.mobileNumber}>\n                  <LakeText\n                    color={colors.current.primary}\n                    variant=\"medium\"\n                    style={styles.mobileNumberText}\n                  >\n                    {index + 1}\n                  </LakeText>\n                </Box>\n\n                <Space width={12} />\n\n                <LakeText color={colors.gray[400]} variant=\"smallRegular\">\n                  {label}\n                </LakeText>\n              </Box>\n\n              {!isLast && (\n                <Box alignItems=\"center\" style={styles.mobileBarContainer}>\n                  <View style={styles.mobileBar} />\n                </Box>\n              )}\n            </Fragment>\n          );\n        })}\n      </Box>\n    ))\n    .exhaustive();\n};\n"],"names":["desktopIconSize","borderHeight","desktopPadding","mobileNumberSize","mobileBorderWidth","styles","StyleSheet","colors","FlowPresentation","steps","mode","match","jsx","Box","label","icon","index","isLast","jsxs","Fragment","BorderedIcon","Space","View","LakeText"],"mappings":"mYAUA,MAAAA,EAAA,IACAC,EAAA,EACAC,EAAA,GAEAC,EAAA,GACAC,EAAA,EAEAC,EAAAC,EAAA,OAAA,CAAiC,UAAA,CACpB,MAAA,MACF,EACT,cAAA,CACe,MAAAN,EAAAE,CACY,EAC3B,kBAAA,CACmB,MAAAF,CACV,EACT,oBAAA,CACqB,KAAA,EACb,aAAA,GACQ,OAAAA,CACN,EACV,WAAA,CACY,MAAA,OACH,OAAAC,EACC,aAAAA,EAAA,EACqB,gBAAAM,EAAA,KAAA,GAAA,CACG,EAClC,aAAA,CAEc,MAAA,GACL,OAAA,GACC,aAAA,GACM,YAAAA,EAAA,QAAA,GAAA,EACiB,YAAA,EAClB,gBAAAA,EAAA,QAAA,EAAA,CACqB,EACpC,iBAAA,CACkB,SAAA,WACN,IAAA,CACL,EACP,mBAAA,CACoB,MAAAJ,EACX,gBAAA,CACU,EACnB,UAAA,CACW,MAAAC,EACF,OAAA,GACC,aAAAA,EAAA,EAC0B,gBAAAG,EAAA,KAAA,GAAA,CACF,CAEpC,CAAA,EAYOC,EAAA,CAAA,CAAA,MAAAC,EAAA,KAAAC,KACLC,EAAAD,CAAA,EAAA,KAAA,UAAA,IAAAE,EAAAC,EAAA,CAAA,UAAA,MAAA,MAAAR,EAAA,UAAA,SAAAI,EAAA,IAAA,CAAA,CAAA,MAAAK,EAAA,KAAAC,CAAA,EAAAC,IAAA,CAIQ,MAAAC,EAAAD,IAAAP,EAAA,OAAA,EAEA,OAAAS,EAAAC,WAAA,CAAA,SAAA,CAEID,EAAAL,EAAA,CAAA,SAAA,CACED,EAAAQ,EAAA,CAAA,KAAAL,EAAA,KAAA,IAAA,QAAA,GAAA,EAAkDH,EAAAS,EAAA,CAAA,OAAA,EAAA,CAAA,EAC/BT,EAAAU,EAAA,CAAA,MAAAL,EAAAZ,EAAA,kBAAAA,EAAA,cAAA,SAAAa,EAAAK,EAAA,CAAA,MAAAhB,EAAA,KAAA,GAAA,EAAA,QAAA,SAAA,SAAA,CAIdS,EAAA,EAAQ,KAAEF,CAAG,CAAA,CAAA,CAAA,CAAA,CAElB,EAAA,EACF,CAAAG,GAAAL,EAAAC,EAAA,CAAA,UAAA,MAAA,WAAA,SAAA,MAAAR,EAAA,oBAAA,SAAAO,EAAAU,EAAA,CAAA,MAAAjB,EAAA,UAAA,CAAA,EAAA,CAKE,CAAA,EAAAW,CAAA,CAEJ,CAAA,CAAA,CAAA,CAAA,EAAA,KAAA,SAAA,IAAAJ,EAAAC,EAAA,CAAA,UAAA,SAAA,SAAAJ,EAAA,IAAA,CAAA,CAAA,MAAAK,CAAA,EAAAE,IAAA,CAQF,MAAAC,EAAAD,IAAAP,EAAA,OAAA,EAEA,OAAAS,EAAAC,WAAA,CAAA,SAAA,CAEID,EAAAL,EAAA,CAAA,UAAA,MAAA,WAAA,SAAA,SAAA,CACED,EAAAC,EAAA,CAAA,WAAA,SAAA,eAAA,SAAA,MAAAR,EAAA,aAAA,SAAAO,EACEW,EAAC,CAAA,MAAAhB,EAAA,QAAA,QACuB,QAAA,SACd,MAAAF,EAAA,iBACM,SAAAW,EAAA,CAEL,CAAA,EAAA,EAEbJ,EAAAS,EAAA,CAAA,MAAA,EAAA,CAAA,EAEkBT,EAAAW,EAAA,CAAA,MAAAhB,EAAA,KAAA,GAAA,EAAA,QAAA,eAAA,SAAAO,CAAA,CAAA,CAIlB,EAAA,EACF,CAAAG,GAAAL,EAAAC,EAAA,CAAA,WAAA,SAAA,MAAAR,EAAA,mBAAA,SAAAO,EAAAU,EAAA,CAAA,MAAAjB,EAAA,SAAA,CAAA,EAAA,CAKE,CAAA,EAAAW,CAAA,CAEJ,CAAA,CAAA,CAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}