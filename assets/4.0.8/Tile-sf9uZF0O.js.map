{"version":3,"file":"Tile-sf9uZF0O.js","sources":["../../../packages/lake/src/components/Tile.tsx"],"sourcesContent":["import {\n  Children,\n  cloneElement,\n  Fragment,\n  ReactElement,\n  ReactNode,\n  useCallback,\n  useState,\n} from \"react\";\nimport { LayoutChangeEvent, StyleProp, StyleSheet, Text, View, ViewStyle } from \"react-native\";\nimport {\n  backgroundColor,\n  colors,\n  negativeSpacings,\n  radii,\n  shadows,\n  Spacings,\n  spacings,\n  texts,\n} from \"../constants/design\";\nimport { isNotNullish } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { LakeText } from \"./LakeText\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: backgroundColor.accented,\n    borderRadius: radii[8],\n    boxShadow: shadows.tile,\n    overflow: \"hidden\",\n  },\n  unselectedContainer: {\n    backgroundColor: backgroundColor.default,\n    boxShadow: `0 0 0 1px ${colors.gray[100]}`,\n  },\n  unselectedHoveredContainer: {\n    backgroundColor: backgroundColor.default,\n    boxShadow: `0 0 0 1px ${colors.gray[500]}`,\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  hoveredContainer: {\n    boxShadow: shadows.tileHover,\n  },\n  headerContainer: {\n    zIndex: 1,\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"flex-start\",\n    justifyContent: \"space-between\",\n  },\n  title: {\n    ...texts.h3,\n    flexGrow: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  fullWidthContent: {\n    marginHorizontal: negativeSpacings[32],\n  },\n  fitToBottom: {\n    marginBottom: negativeSpacings[32],\n  },\n  column: {\n    flexGrow: 1,\n  },\n  descriptionContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n  },\n  description: {\n    width: 1,\n    flexGrow: 1,\n  },\n  headerTitleIcon: {\n    flexGrow: 1,\n  },\n  row: {\n    alignItems: \"stretch\",\n    marginHorizontal: negativeSpacings[12],\n  },\n  rowCol: {\n    flexGrow: 1,\n    padding: spacings[12],\n  },\n  footer: {\n    marginHorizontal: negativeSpacings[32],\n    alignSelf: \"stretch\",\n  },\n});\n\ntype Props = {\n  icon?: ReactNode;\n  title?: ReactNode;\n  description?: ReactNode;\n  headerEnd?: ReactNode;\n  paddingVertical?: Spacings;\n  paddingHorizontal?: Spacings;\n  children?: ReactNode;\n  footer?: ReactNode;\n  numberOfLines?: number;\n  flexBasis?: string;\n  flexGrow?: number;\n  flexShrink?: number;\n  hovered?: boolean;\n  disabled?: boolean;\n  selected?: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const Tile = ({\n  icon,\n  title,\n  description,\n  headerEnd,\n  footer,\n  flexBasis,\n  children,\n  numberOfLines,\n  paddingVertical = 32,\n  paddingHorizontal = 32,\n  hovered = false,\n  flexGrow = 0,\n  flexShrink = 0,\n  disabled = false,\n  selected,\n  style,\n}: Props) => {\n  return (\n    <View\n      role=\"region\"\n      style={[\n        styles.container,\n        selected === false && styles.unselectedContainer,\n        {\n          paddingVertical: spacings[paddingVertical],\n          paddingHorizontal: spacings[paddingHorizontal],\n          flexGrow,\n          flexShrink,\n          flexBasis,\n        },\n        hovered && styles.hoveredContainer,\n        selected === false && hovered && styles.unselectedHoveredContainer,\n        disabled && styles.disabled,\n        style,\n      ]}\n    >\n      {(isNotNullish(title) || isNotNullish(headerEnd) || isNotNullish(description)) && (\n        <View style={styles.headerContainer}>\n          <View style={styles.header}>\n            <View style={styles.headerTitleIcon}>\n              {isNotNullish(icon) && (\n                <>\n                  {icon}\n\n                  <Space height={12} />\n                </>\n              )}\n\n              {isNotNullish(title) && (\n                <Text style={styles.title} role=\"heading\" aria-level={3}>\n                  {title}\n                </Text>\n              )}\n            </View>\n\n            {isNotNullish(headerEnd) ? <View>{headerEnd}</View> : null}\n          </View>\n\n          {isNotNullish(description) && (\n            <>\n              {isNotNullish(title) && <Space height={12} />}\n\n              <View style={styles.descriptionContainer}>\n                <LakeText numberOfLines={numberOfLines} style={styles.description}>\n                  {description}\n                </LakeText>\n              </View>\n            </>\n          )}\n\n          {isNotNullish(children) && <Space height={24} />}\n        </View>\n      )}\n\n      {children}\n\n      {isNotNullish(footer) && (\n        <View\n          style={[styles.footer, { marginTop: paddingVertical, marginBottom: -paddingVertical }]}\n        >\n          {footer}\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport const TileFullWidthContent = ({\n  children,\n  flexGrow,\n  fitToBottom = false,\n}: {\n  children: ReactNode;\n  flexGrow?: number;\n  fitToBottom?: boolean;\n}) => {\n  return (\n    <View style={[styles.fullWidthContent, fitToBottom && styles.fitToBottom, { flexGrow }]}>\n      {children}\n    </View>\n  );\n};\n\ntype TileGridProps = {\n  breakpoint?: number;\n  children: ReactNode;\n};\n\nconst SPACE = <Space height={24} />;\n\nexport const TileGrid = ({ children, breakpoint = 1000 }: TileGridProps) => {\n  const [flexDirection, setFlexDirection] = useState<\"row\" | \"column\">(\"row\");\n\n  const onLayout = useCallback(\n    ({\n      nativeEvent: {\n        layout: { width },\n      },\n    }: LayoutChangeEvent) => {\n      setFlexDirection(() => (width < breakpoint ? \"column\" : \"row\"));\n    },\n    [breakpoint],\n  );\n\n  const childrenArray = Children.toArray(children);\n  const leftColumn: ReactNode[] = [];\n  const rightColumn: ReactNode[] = [];\n\n  const nonNullChildren = childrenArray.filter(isNotNullish);\n\n  nonNullChildren.forEach((item, index) => {\n    if (flexDirection === \"column\" || index % 2 === 0) {\n      leftColumn.push(\n        <Fragment key={index}>\n          {item}\n          {SPACE}\n        </Fragment>,\n      );\n    } else {\n      rightColumn.push(\n        <Fragment key={index}>\n          {item}\n          {SPACE}\n        </Fragment>,\n      );\n    }\n  });\n\n  const isRow = flexDirection === \"row\";\n  return (\n    <Box direction={flexDirection} onLayout={onLayout}>\n      <View style={[isRow && styles.column, isRow && { flexBasis: breakpoint / 2 }]}>\n        {leftColumn}\n      </View>\n\n      <Space width={24} />\n\n      <View style={[isRow && styles.column, isRow && { flexBasis: breakpoint / 2 }]}>\n        {rightColumn}\n      </View>\n    </Box>\n  );\n};\n\nexport const TileRows = ({ children, breakpoint = 1000 }: TileGridProps) => {\n  const [flexDirection, setFlexDirection] = useState<\"row\" | \"column\">(\"row\");\n\n  const onLayout = useCallback(\n    ({\n      nativeEvent: {\n        layout: { width },\n      },\n    }: LayoutChangeEvent) => {\n      setFlexDirection(() => (width < breakpoint ? \"column\" : \"row\"));\n    },\n    [breakpoint],\n  );\n\n  const childrenArray = Children.toArray(children);\n  const nonNullChildren = childrenArray.filter(isNotNullish);\n\n  const isRow = flexDirection === \"row\";\n\n  return (\n    <Box direction={flexDirection} onLayout={onLayout} style={styles.row}>\n      {nonNullChildren.map((item, index) => {\n        return (\n          <View key={index} style={[styles.rowCol, isRow && { flexBasis: breakpoint / 2 }]}>\n            {cloneElement(item as unknown as ReactElement, { flexGrow: 1 })}\n          </View>\n        );\n      })}\n    </Box>\n  );\n};\n"],"names":["styles","StyleSheet","backgroundColor","radii","shadows","colors","texts","negativeSpacings","spacings","Tile","icon","title","description","headerEnd","footer","flexBasis","children","numberOfLines","paddingVertical","paddingHorizontal","hovered","flexGrow","flexShrink","disabled","selected","style","jsxs","View","isNotNullish","Fragment","jsx","Space","Text","LakeText","TileFullWidthContent","fitToBottom","SPACE","TileGrid","breakpoint","flexDirection","setFlexDirection","useState","onLayout","useCallback","width","childrenArray","Children","leftColumn","rightColumn","item","index","Fragment2","isRow","Box","TileRows","nonNullChildren","cloneElement"],"mappings":"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"}