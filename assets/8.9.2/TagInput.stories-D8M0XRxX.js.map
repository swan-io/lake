{"version":3,"file":"TagInput.stories-D8M0XRxX.js","sources":["../../../node_modules/iban/iban.js","../../../packages/shared-business/src/utils/validation.ts","../../../packages/lake/src/components/LakeTagInput.tsx"],"sourcesContent":["(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define(['exports'], factory);\n    } else if (typeof exports === 'object' && typeof exports.nodeName !== 'string') {\n        // CommonJS\n        factory(exports);\n    } else {\n        // Browser globals\n        factory(root.IBAN = {});\n    }\n}(this, function(exports){\n\n    // Array.prototype.map polyfill\n    // code from https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/map\n    if (!Array.prototype.map){\n        Array.prototype.map = function(fun /*, thisArg */){\n            \"use strict\";\n\n            if (this === void 0 || this === null)\n                throw new TypeError();\n\n            var t = Object(this);\n            var len = t.length >>> 0;\n            if (typeof fun !== \"function\")\n                throw new TypeError();\n\n            var res = new Array(len);\n            var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n            for (var i = 0; i < len; i++)\n            {\n                // NOTE: Absolute correctness would demand Object.defineProperty\n                //       be used.  But this method is fairly new, and failure is\n                //       possible only if Object.prototype or Array.prototype\n                //       has a property |i| (very unlikely), so use a less-correct\n                //       but more portable alternative.\n                if (i in t)\n                    res[i] = fun.call(thisArg, t[i], i, t);\n            }\n\n            return res;\n        };\n    }\n\n    var A = 'A'.charCodeAt(0),\n        Z = 'Z'.charCodeAt(0);\n\n    /**\n     * Prepare an IBAN for mod 97 computation by moving the first 4 chars to the end and transforming the letters to\n     * numbers (A = 10, B = 11, ..., Z = 35), as specified in ISO13616.\n     *\n     * @param {string} iban the IBAN\n     * @returns {string} the prepared IBAN\n     */\n    function iso13616Prepare(iban) {\n        iban = iban.toUpperCase();\n        iban = iban.substr(4) + iban.substr(0,4);\n\n        return iban.split('').map(function(n){\n            var code = n.charCodeAt(0);\n            if (code >= A && code <= Z){\n                // A = 10, B = 11, ... Z = 35\n                return code - A + 10;\n            } else {\n                return n;\n            }\n        }).join('');\n    }\n\n    /**\n     * Calculates the MOD 97 10 of the passed IBAN as specified in ISO7064.\n     *\n     * @param iban\n     * @returns {number}\n     */\n    function iso7064Mod97_10(iban) {\n        var remainder = iban,\n            block;\n\n        while (remainder.length > 2){\n            block = remainder.slice(0, 9);\n            remainder = parseInt(block, 10) % 97 + remainder.slice(block.length);\n        }\n\n        return parseInt(remainder, 10) % 97;\n    }\n\n    /**\n     * Parse the BBAN structure used to configure each IBAN Specification and returns a matching regular expression.\n     * A structure is composed of blocks of 3 characters (one letter and 2 digits). Each block represents\n     * a logical group in the typical representation of the BBAN. For each group, the letter indicates which characters\n     * are allowed in this group and the following 2-digits number tells the length of the group.\n     *\n     * @param {string} structure the structure to parse\n     * @returns {RegExp}\n     */\n    function parseStructure(structure){\n        // split in blocks of 3 chars\n        var regex = structure.match(/(.{3})/g).map(function(block){\n\n            // parse each structure block (1-char + 2-digits)\n            var format,\n                pattern = block.slice(0, 1),\n                repeats = parseInt(block.slice(1), 10);\n\n            switch (pattern){\n                case \"A\": format = \"0-9A-Za-z\"; break;\n                case \"B\": format = \"0-9A-Z\"; break;\n                case \"C\": format = \"A-Za-z\"; break;\n                case \"F\": format = \"0-9\"; break;\n                case \"L\": format = \"a-z\"; break;\n                case \"U\": format = \"A-Z\"; break;\n                case \"W\": format = \"0-9a-z\"; break;\n            }\n\n            return '([' + format + ']{' + repeats + '})';\n        });\n\n        return new RegExp('^' + regex.join('') + '$');\n    }\n\n    /**\n     *\n     * @param iban\n     * @returns {string}\n     */\n    function electronicFormat(iban){\n        return iban.replace(NON_ALPHANUM, '').toUpperCase();\n    }\n\n\n    /**\n     * Create a new Specification for a valid IBAN number.\n     *\n     * @param countryCode the code of the country\n     * @param length the length of the IBAN\n     * @param structure the structure of the underlying BBAN (for validation and formatting)\n     * @param example an example valid IBAN\n     * @constructor\n     */\n    function Specification(countryCode, length, structure, example){\n\n        this.countryCode = countryCode;\n        this.length = length;\n        this.structure = structure;\n        this.example = example;\n    }\n\n    /**\n     * Lazy-loaded regex (parse the structure and construct the regular expression the first time we need it for validation)\n     */\n    Specification.prototype._regex = function(){\n        return this._cachedRegex || (this._cachedRegex = parseStructure(this.structure))\n    };\n\n    /**\n     * Check if the passed iban is valid according to this specification.\n     *\n     * @param {String} iban the iban to validate\n     * @returns {boolean} true if valid, false otherwise\n     */\n    Specification.prototype.isValid = function(iban){\n        return this.length == iban.length\n            && this.countryCode === iban.slice(0,2)\n            && this._regex().test(iban.slice(4))\n            && iso7064Mod97_10(iso13616Prepare(iban)) == 1;\n    };\n\n    /**\n     * Convert the passed IBAN to a country-specific BBAN.\n     *\n     * @param iban the IBAN to convert\n     * @param separator the separator to use between BBAN blocks\n     * @returns {string} the BBAN\n     */\n    Specification.prototype.toBBAN = function(iban, separator) {\n        return this._regex().exec(iban.slice(4)).slice(1).join(separator);\n    };\n\n    /**\n     * Convert the passed BBAN to an IBAN for this country specification.\n     * Please note that <i>\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\"</i>.\n     * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\n     *\n     * @param bban the BBAN to convert to IBAN\n     * @returns {string} the IBAN\n     */\n    Specification.prototype.fromBBAN = function(bban) {\n        if (!this.isValidBBAN(bban)){\n            throw new Error('Invalid BBAN');\n        }\n\n        var remainder = iso7064Mod97_10(iso13616Prepare(this.countryCode + '00' + bban)),\n            checkDigit = ('0' + (98 - remainder)).slice(-2);\n\n        return this.countryCode + checkDigit + bban;\n    };\n\n    /**\n     * Check of the passed BBAN is valid.\n     * This function only checks the format of the BBAN (length and matching the letetr/number specs) but does not\n     * verify the check digit.\n     *\n     * @param bban the BBAN to validate\n     * @returns {boolean} true if the passed bban is a valid BBAN according to this specification, false otherwise\n     */\n    Specification.prototype.isValidBBAN = function(bban) {\n        return this.length - 4 == bban.length\n            && this._regex().test(bban);\n    };\n\n    var countries = {};\n\n    function addSpecification(IBAN){\n        countries[IBAN.countryCode] = IBAN;\n    }\n\n    addSpecification(new Specification(\"AD\", 24, \"F04F04A12\",          \"AD1200012030200359100100\"));\n    addSpecification(new Specification(\"AE\", 23, \"F03F16\",             \"AE070331234567890123456\"));\n    addSpecification(new Specification(\"AL\", 28, \"F08A16\",             \"AL47212110090000000235698741\"));\n    addSpecification(new Specification(\"AT\", 20, \"F05F11\",             \"AT611904300234573201\"));\n    addSpecification(new Specification(\"AZ\", 28, \"U04A20\",             \"AZ21NABZ00000000137010001944\"));\n    addSpecification(new Specification(\"BA\", 20, \"F03F03F08F02\",       \"BA391290079401028494\"));\n    addSpecification(new Specification(\"BE\", 16, \"F03F07F02\",          \"BE68539007547034\"));\n    addSpecification(new Specification(\"BG\", 22, \"U04F04F02A08\",       \"BG80BNBG96611020345678\"));\n    addSpecification(new Specification(\"BH\", 22, \"U04A14\",             \"BH67BMAG00001299123456\"));\n    addSpecification(new Specification(\"BR\", 29, \"F08F05F10U01A01\",    \"BR9700360305000010009795493P1\"));\n    addSpecification(new Specification(\"BY\", 28, \"A04F04A16\",          \"BY13NBRB3600900000002Z00AB00\"));\n    addSpecification(new Specification(\"CH\", 21, \"F05A12\",             \"CH9300762011623852957\"));\n    addSpecification(new Specification(\"CR\", 22, \"F04F14\",             \"CR72012300000171549015\"));\n    addSpecification(new Specification(\"CY\", 28, \"F03F05A16\",          \"CY17002001280000001200527600\"));\n    addSpecification(new Specification(\"CZ\", 24, \"F04F06F10\",          \"CZ6508000000192000145399\"));\n    addSpecification(new Specification(\"DE\", 22, \"F08F10\",             \"DE89370400440532013000\"));\n    addSpecification(new Specification(\"DK\", 18, \"F04F09F01\",          \"DK5000400440116243\"));\n    addSpecification(new Specification(\"DO\", 28, \"U04F20\",             \"DO28BAGR00000001212453611324\"));\n    addSpecification(new Specification(\"EE\", 20, \"F02F02F11F01\",       \"EE382200221020145685\"));\n    addSpecification(new Specification(\"EG\", 29, \"F04F04F17\",          \"EG800002000156789012345180002\"));\n    addSpecification(new Specification(\"ES\", 24, \"F04F04F01F01F10\",    \"ES9121000418450200051332\"));\n    addSpecification(new Specification(\"FI\", 18, \"F06F07F01\",          \"FI2112345600000785\"));\n    addSpecification(new Specification(\"FO\", 18, \"F04F09F01\",          \"FO6264600001631634\"));\n    addSpecification(new Specification(\"FR\", 27, \"F05F05A11F02\",       \"FR1420041010050500013M02606\"));\n    addSpecification(new Specification(\"GB\", 22, \"U04F06F08\",          \"GB29NWBK60161331926819\"));\n    addSpecification(new Specification(\"GE\", 22, \"U02F16\",             \"GE29NB0000000101904917\"));\n    addSpecification(new Specification(\"GI\", 23, \"U04A15\",             \"GI75NWBK000000007099453\"));\n    addSpecification(new Specification(\"GL\", 18, \"F04F09F01\",          \"GL8964710001000206\"));\n    addSpecification(new Specification(\"GR\", 27, \"F03F04A16\",          \"GR1601101250000000012300695\"));\n    addSpecification(new Specification(\"GT\", 28, \"A04A20\",             \"GT82TRAJ01020000001210029690\"));\n    addSpecification(new Specification(\"HR\", 21, \"F07F10\",             \"HR1210010051863000160\"));\n    addSpecification(new Specification(\"HU\", 28, \"F03F04F01F15F01\",    \"HU42117730161111101800000000\"));\n    addSpecification(new Specification(\"IE\", 22, \"U04F06F08\",          \"IE29AIBK93115212345678\"));\n    addSpecification(new Specification(\"IL\", 23, \"F03F03F13\",          \"IL620108000000099999999\"));\n    addSpecification(new Specification(\"IS\", 26, \"F04F02F06F10\",       \"IS140159260076545510730339\"));\n    addSpecification(new Specification(\"IT\", 27, \"U01F05F05A12\",       \"IT60X0542811101000000123456\"));\n    addSpecification(new Specification(\"IQ\", 23, \"U04F03A12\",          \"IQ98NBIQ850123456789012\"));\n    addSpecification(new Specification(\"JO\", 30, \"A04F22\",             \"JO15AAAA1234567890123456789012\"));\n    addSpecification(new Specification(\"KW\", 30, \"U04A22\",             \"KW81CBKU0000000000001234560101\"));\n    addSpecification(new Specification(\"KZ\", 20, \"F03A13\",             \"KZ86125KZT5004100100\"));\n    addSpecification(new Specification(\"LB\", 28, \"F04A20\",             \"LB62099900000001001901229114\"));\n    addSpecification(new Specification(\"LC\", 32, \"U04F24\",             \"LC07HEMM000100010012001200013015\"));\n    addSpecification(new Specification(\"LI\", 21, \"F05A12\",             \"LI21088100002324013AA\"));\n    addSpecification(new Specification(\"LT\", 20, \"F05F11\",             \"LT121000011101001000\"));\n    addSpecification(new Specification(\"LU\", 20, \"F03A13\",             \"LU280019400644750000\"));\n    addSpecification(new Specification(\"LV\", 21, \"U04A13\",             \"LV80BANK0000435195001\"));\n    addSpecification(new Specification(\"MC\", 27, \"F05F05A11F02\",       \"MC5811222000010123456789030\"));\n    addSpecification(new Specification(\"MD\", 24, \"U02A18\",             \"MD24AG000225100013104168\"));\n    addSpecification(new Specification(\"ME\", 22, \"F03F13F02\",          \"ME25505000012345678951\"));\n    addSpecification(new Specification(\"MK\", 19, \"F03A10F02\",          \"MK07250120000058984\"));\n    addSpecification(new Specification(\"MR\", 27, \"F05F05F11F02\",       \"MR1300020001010000123456753\"));\n    addSpecification(new Specification(\"MT\", 31, \"U04F05A18\",          \"MT84MALT011000012345MTLCAST001S\"));\n    addSpecification(new Specification(\"MU\", 30, \"U04F02F02F12F03U03\", \"MU17BOMM0101101030300200000MUR\"));\n    addSpecification(new Specification(\"NL\", 18, \"U04F10\",             \"NL91ABNA0417164300\"));\n    addSpecification(new Specification(\"NO\", 15, \"F04F06F01\",          \"NO9386011117947\"));\n    addSpecification(new Specification(\"PK\", 24, \"U04A16\",             \"PK36SCBL0000001123456702\"));\n    addSpecification(new Specification(\"PL\", 28, \"F08F16\",             \"PL61109010140000071219812874\"));\n    addSpecification(new Specification(\"PS\", 29, \"U04A21\",             \"PS92PALS000000000400123456702\"));\n    addSpecification(new Specification(\"PT\", 25, \"F04F04F11F02\",       \"PT50000201231234567890154\"));\n    addSpecification(new Specification(\"QA\", 29, \"U04A21\",             \"QA30AAAA123456789012345678901\"));\n    addSpecification(new Specification(\"RO\", 24, \"U04A16\",             \"RO49AAAA1B31007593840000\"));\n    addSpecification(new Specification(\"RS\", 22, \"F03F13F02\",          \"RS35260005601001611379\"));\n    addSpecification(new Specification(\"SA\", 24, \"F02A18\",             \"SA0380000000608010167519\"));\n    addSpecification(new Specification(\"SC\", 31, \"U04F04F16U03\",       \"SC18SSCB11010000000000001497USD\"));\n    addSpecification(new Specification(\"SE\", 24, \"F03F16F01\",          \"SE4550000000058398257466\"));\n    addSpecification(new Specification(\"SI\", 19, \"F05F08F02\",          \"SI56263300012039086\"));\n    addSpecification(new Specification(\"SK\", 24, \"F04F06F10\",          \"SK3112000000198742637541\"));\n    addSpecification(new Specification(\"SM\", 27, \"U01F05F05A12\",       \"SM86U0322509800000000270100\"));\n    addSpecification(new Specification(\"ST\", 25, \"F08F11F02\",          \"ST68000100010051845310112\"));\n    addSpecification(new Specification(\"SV\", 28, \"U04F20\",             \"SV62CENR00000000000000700025\"));\n    addSpecification(new Specification(\"TL\", 23, \"F03F14F02\",          \"TL380080012345678910157\"));\n    addSpecification(new Specification(\"TN\", 24, \"F02F03F13F02\",       \"TN5910006035183598478831\"));\n    addSpecification(new Specification(\"TR\", 26, \"F05F01A16\",          \"TR330006100519786457841326\"));\n    addSpecification(new Specification(\"UA\", 29, \"F25\",                \"UA511234567890123456789012345\"));\n    addSpecification(new Specification(\"VA\", 22, \"F18\",                \"VA59001123000012345678\"));\n    addSpecification(new Specification(\"VG\", 24, \"U04F16\",             \"VG96VPVG0000012345678901\"));\n    addSpecification(new Specification(\"XK\", 20, \"F04F10F02\",          \"XK051212012345678906\"));\n\n\n    // The following countries are not included in the official IBAN registry but use the IBAN specification\n\n    // Angola\n    addSpecification(new Specification(\"AO\", 25, \"F21\",                \"AO69123456789012345678901\"));\n    // Burkina\n    addSpecification(new Specification(\"BF\", 27, \"F23\",                \"BF2312345678901234567890123\"));\n    // Burundi\n    addSpecification(new Specification(\"BI\", 16, \"F12\",                \"BI41123456789012\"));\n    // Benin\n    addSpecification(new Specification(\"BJ\", 28, \"F24\",                \"BJ39123456789012345678901234\"));\n    // Ivory\n    addSpecification(new Specification(\"CI\", 28, \"U02F22\",             \"CI70CI1234567890123456789012\"));\n    // Cameron\n    addSpecification(new Specification(\"CM\", 27, \"F23\",                \"CM9012345678901234567890123\"));\n    // Cape Verde\n    addSpecification(new Specification(\"CV\", 25, \"F21\",                \"CV30123456789012345678901\"));\n    // Algeria\n    addSpecification(new Specification(\"DZ\", 24, \"F20\",                \"DZ8612345678901234567890\"));\n    // Iran\n    addSpecification(new Specification(\"IR\", 26, \"F22\",                \"IR861234568790123456789012\"));\n    // Madagascar\n    addSpecification(new Specification(\"MG\", 27, \"F23\",                \"MG1812345678901234567890123\"));\n    // Mali\n    addSpecification(new Specification(\"ML\", 28, \"U01F23\",             \"ML15A12345678901234567890123\"));\n    // Mozambique\n    addSpecification(new Specification(\"MZ\", 25, \"F21\",                \"MZ25123456789012345678901\"));\n    // Senegal\n    addSpecification(new Specification(\"SN\", 28, \"U01F23\",             \"SN52A12345678901234567890123\"));\n\n    // The following are regional and administrative French Republic subdivision IBAN specification (same structure as FR, only country code vary)\n    addSpecification(new Specification(\"GF\", 27, \"F05F05A11F02\",       \"GF121234512345123456789AB13\"));\n    addSpecification(new Specification(\"GP\", 27, \"F05F05A11F02\",       \"GP791234512345123456789AB13\"));\n    addSpecification(new Specification(\"MQ\", 27, \"F05F05A11F02\",       \"MQ221234512345123456789AB13\"));\n    addSpecification(new Specification(\"RE\", 27, \"F05F05A11F02\",       \"RE131234512345123456789AB13\"));\n    addSpecification(new Specification(\"PF\", 27, \"F05F05A11F02\",       \"PF281234512345123456789AB13\"));\n    addSpecification(new Specification(\"TF\", 27, \"F05F05A11F02\",       \"TF891234512345123456789AB13\"));\n    addSpecification(new Specification(\"YT\", 27, \"F05F05A11F02\",       \"YT021234512345123456789AB13\"));\n    addSpecification(new Specification(\"NC\", 27, \"F05F05A11F02\",       \"NC551234512345123456789AB13\"));\n    addSpecification(new Specification(\"BL\", 27, \"F05F05A11F02\",       \"BL391234512345123456789AB13\"));\n    addSpecification(new Specification(\"MF\", 27, \"F05F05A11F02\",       \"MF551234512345123456789AB13\"));\n    addSpecification(new Specification(\"PM\", 27, \"F05F05A11F02\",       \"PM071234512345123456789AB13\"));\n    addSpecification(new Specification(\"WF\", 27, \"F05F05A11F02\",       \"WF621234512345123456789AB13\"));\n\n    var NON_ALPHANUM = /[^a-zA-Z0-9]/g,\n        EVERY_FOUR_CHARS =/(.{4})(?!$)/g;\n\n    /**\n     * Utility function to check if a variable is a String.\n     *\n     * @param v\n     * @returns {boolean} true if the passed variable is a String, false otherwise.\n     */\n    function isString(v){\n        return (typeof v == 'string' || v instanceof String);\n    }\n\n    /**\n     * Check if an IBAN is valid.\n     *\n     * @param {String} iban the IBAN to validate.\n     * @returns {boolean} true if the passed IBAN is valid, false otherwise\n     */\n    exports.isValid = function(iban){\n        if (!isString(iban)){\n            return false;\n        }\n        iban = electronicFormat(iban);\n        var countryStructure = countries[iban.slice(0,2)];\n        return !!countryStructure && countryStructure.isValid(iban);\n    };\n\n    /**\n     * Convert an IBAN to a BBAN.\n     *\n     * @param iban\n     * @param {String} [separator] the separator to use between the blocks of the BBAN, defaults to ' '\n     * @returns {string|*}\n     */\n    exports.toBBAN = function(iban, separator){\n        if (typeof separator == 'undefined'){\n            separator = ' ';\n        }\n        iban = electronicFormat(iban);\n        var countryStructure = countries[iban.slice(0,2)];\n        if (!countryStructure) {\n            throw new Error('No country with code ' + iban.slice(0,2));\n        }\n        return countryStructure.toBBAN(iban, separator);\n    };\n\n    /**\n     * Convert the passed BBAN to an IBAN for this country specification.\n     * Please note that <i>\"generation of the IBAN shall be the exclusive responsibility of the bank/branch servicing the account\"</i>.\n     * This method implements the preferred algorithm described in http://en.wikipedia.org/wiki/International_Bank_Account_Number#Generating_IBAN_check_digits\n     *\n     * @param countryCode the country of the BBAN\n     * @param bban the BBAN to convert to IBAN\n     * @returns {string} the IBAN\n     */\n    exports.fromBBAN = function(countryCode, bban){\n        var countryStructure = countries[countryCode];\n        if (!countryStructure) {\n            throw new Error('No country with code ' + countryCode);\n        }\n        return countryStructure.fromBBAN(electronicFormat(bban));\n    };\n\n    /**\n     * Check the validity of the passed BBAN.\n     *\n     * @param countryCode the country of the BBAN\n     * @param bban the BBAN to check the validity of\n     */\n    exports.isValidBBAN = function(countryCode, bban){\n        if (!isString(bban)){\n            return false;\n        }\n        var countryStructure = countries[countryCode];\n        return countryStructure && countryStructure.isValidBBAN(electronicFormat(bban));\n    };\n\n    /**\n     *\n     * @param iban\n     * @param separator\n     * @returns {string}\n     */\n    exports.printFormat = function(iban, separator){\n        if (typeof separator == 'undefined'){\n            separator = ' ';\n        }\n        return electronicFormat(iban).replace(EVERY_FOUR_CHARS, \"$1\" + separator);\n    };\n\n    exports.electronicFormat = electronicFormat;\n    /**\n     * An object containing all the known IBAN specifications.\n     */\n    exports.countries = countries;\n\n}));\n","import { noop } from \"@swan-io/lake/src/utils/function\";\nimport { Validator } from \"@swan-io/use-form\";\nimport { isValid as isValidIban } from \"iban\";\nimport { match } from \"ts-pattern\";\nimport { t } from \"./i18n\";\nimport { AccountCountry } from \"./templateTranslations\";\n\nconst EMAIL_REGEX = /^[A-Z0-9_+.-]*[A-Z0-9_+-]@([A-Z0-9][A-Z0-9-]*\\.)+[A-Z]{2,}$/i;\nconst VAT_NUMBER_REGEX =\n  /^((AT)?U[0-9]{8}|(BE)?0[0-9]{9}|(BG)?[0-9]{9,10}|(CY)?[0-9]{8}L|(CZ)?[0-9]{8,10}|(DE)?[0-9]{9}|(DK)?[0-9]{8}|(EE)?[0-9]{9}|(EL|GR)?[0-9]{9}|(ES)?[0-9A-Z][0-9]{7}[0-9A-Z]|(FI)?[0-9]{8}|(FR)?[0-9A-Z]{2}[0-9]{9}|(GB)?([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3})|(HU)?[0-9]{8}|(IE)?[0-9]S[0-9]{5}L|(IT)?[0-9]{11}|(LT)?([0-9]{9}|[0-9]{12})|(LU)?[0-9]{8}|(LV)?[0-9]{11}|(MT)?[0-9]{8}|(NL)?[0-9]{9}B[0-9]{2}|(PL)?[0-9]{10}|(PT)?[0-9]{9}|(RO)?[0-9]{2,10}|(SE)?[0-9]{12}|(SI)?[0-9]{8}|(SK)?[0-9]{10})$/;\n\n// (AT)?U[0-9]{8} |                              # Austria\n// (BE)?0[0-9]{9} |                              # Belgium\n// (BG)?[0-9]{9,10} |                            # Bulgaria\n// (CY)?[0-9]{8}L |                              # Cyprus\n// (CZ)?[0-9]{8,10} |                            # Czech Republic\n// (DE)?[0-9]{9} |                               # Germany\n// (DK)?[0-9]{8} |                               # Denmark\n// (EE)?[0-9]{9} |                               # Estonia\n// (EL|GR)?[0-9]{9} |                            # Greece\n// (ES)?[0-9A-Z][0-9]{7}[0-9A-Z] |               # Spain\n// (FI)?[0-9]{8} |                               # Finland\n// (FR)?[0-9A-Z]{2}[0-9]{9} |                    # France\n// (GB)?([0-9]{9}([0-9]{3})?|[A-Z]{2}[0-9]{3}) | # United Kingdom\n// (HU)?[0-9]{8} |                               # Hungary\n// (IE)?[0-9]S[0-9]{5}L |                        # Ireland\n// (IT)?[0-9]{11} |                              # Italy\n// (LT)?([0-9]{9}|[0-9]{12}) |                   # Lithuania\n// (LU)?[0-9]{8} |                               # Luxembourg\n// (LV)?[0-9]{11} |                              # Latvia\n// (MT)?[0-9]{8} |                               # Malta\n// (NL)?[0-9]{9}B[0-9]{2} |                      # Netherlands\n// (PL)?[0-9]{10} |                              # Poland\n// (PT)?[0-9]{9} |                               # Portugal\n// (RO)?[0-9]{2,10} |                            # Romania\n// (SE)?[0-9]{12} |                              # Sweden\n// (SI)?[0-9]{8} |                               # Slovenia\n// (SK)?[0-9]{10}                                # Slovakia\n\nexport const isValidVatNumber = (maybeVat: string) => {\n  return VAT_NUMBER_REGEX.test(maybeVat);\n};\n\nexport const isValidEmail = (maybeEmail: string) => {\n  return EMAIL_REGEX.test(maybeEmail);\n};\n\nexport const validateNullableRequired: Validator<string | undefined> = value => {\n  if (value == null || !value) {\n    return t(\"error.requiredField\");\n  }\n};\n\nexport const validateRequired: Validator<string> = value => {\n  if (!value) {\n    return t(\"error.requiredField\");\n  }\n};\n\nexport const validateBooleanRequired: Validator<boolean | undefined> = value => {\n  if (value == null || !value) {\n    return t(\"error.requiredField\");\n  }\n};\n\nexport const validateIndividualTaxNumber =\n  (accountCountry: AccountCountry): Validator<string | undefined> =>\n  value => {\n    if (value == null || !value) {\n      return;\n    }\n\n    return match(accountCountry)\n      .with(\"DEU\", () => {\n        // accept 11 digits\n        if (!/^\\d{11}$/.test(value)) {\n          return t(\"common.form.invalidTaxIdentificationNumber\");\n        }\n      })\n      .with(\"ESP\", () => {\n        // accept 9 characters\n        if (!/^[a-zA-Z0-9]{9}$/.test(value)) {\n          return t(\"common.form.invalidTaxIdentificationNumber\");\n        }\n      })\n      .with(\"ITA\", () => {\n        // accept 16 characters\n        if (!/^[a-zA-Z0-9]{16}$/.test(value)) {\n          return t(\"common.form.invalidTaxIdentificationNumber\");\n        }\n      })\n      .otherwise(noop);\n  };\n\nexport const validateCompanyTaxNumber =\n  (accountCountry: AccountCountry): Validator<string | undefined> =>\n  value => {\n    if (value == null || !value) {\n      return;\n    }\n\n    return match(accountCountry)\n      .with(\"DEU\", () => {\n        // accept 10 or 11 digits\n        if (!/^\\d{10,11}$/.test(value)) {\n          return t(\"common.form.invalidTaxIdentificationNumber\");\n        }\n      })\n      .with(\"ESP\", () => {\n        // accept 9 characters\n        if (!/^[a-zA-Z0-9]{9}$/.test(value)) {\n          return t(\"common.form.invalidTaxIdentificationNumber\");\n        }\n      })\n      .otherwise(noop);\n  };\n\nexport { printFormat as printIbanFormat } from \"iban\";\n\nexport const validateIban = (iban: string) => {\n  if (!isValidIban(iban)) {\n    return t(\"error.iban.invalid\");\n  }\n};\n","import { forwardRef, useCallback, useImperativeHandle, useRef, useState } from \"react\";\nimport {\n  NativeSyntheticEvent,\n  StyleSheet,\n  TextInput,\n  TextInputFocusEventData,\n  TextInputKeyPressEventData,\n  TextInputProps,\n  View,\n} from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport { Merge } from \"type-fest\";\nimport { backgroundColor, colors, radii, shadows, spacings } from \"../constants/design\";\nimport { useHover } from \"../hooks/useHover\";\nimport { useMergeRefs } from \"../hooks/useMergeRefs\";\nimport { isNotNullish, isNotNullishOrEmpty, isNullishOrEmpty } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { LakeText } from \"./LakeText\";\nimport { Pressable } from \"./Pressable\";\nimport { Tag } from \"./Tag\";\n\nconst TRANSPARENT = \"transparent\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexDirection: \"row\",\n    alignItems: \"stretch\",\n  },\n  root: {\n    flexDirection: \"row\",\n    display: \"flex\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    borderRadius: radii[6],\n    backgroundColor: backgroundColor.accented,\n    borderColor: colors.gray[100],\n    borderWidth: 1,\n    paddingHorizontal: spacings[4],\n    paddingTop: spacings[4],\n    outlineStyle: \"none\",\n    cursor: \"text\",\n  },\n  focused: {\n    borderColor: colors.gray[500],\n    boxShadow: shadows.tile,\n  },\n  hovered: {\n    boxShadow: shadows.tile,\n  },\n  disabled: {\n    backgroundColor: colors.gray[50],\n    borderColor: colors.gray[50],\n    color: colors.gray[900],\n    cursor: \"not-allowed\",\n  },\n  readOnly: {\n    backgroundColor: colors.gray[50],\n    borderColor: colors.gray[50],\n    color: colors.gray[900],\n  },\n  readOnlyError: {\n    borderColor: TRANSPARENT,\n    paddingRight: spacings[32],\n  },\n  error: {\n    borderColor: colors.negative[400],\n  },\n  valid: {\n    borderColor: colors.positive[500],\n  },\n  input: {\n    height: 28,\n    marginBottom: spacings[4],\n    marginLeft: spacings[4],\n    outlineStyle: \"none\",\n    flexGrow: 1,\n  },\n  tag: {\n    marginRight: spacings[4],\n    marginBottom: spacings[4],\n    maxWidth: 350,\n  },\n  errorContainer: {\n    paddingTop: spacings[4],\n  },\n});\n\nexport type LakeTagInputProps = Merge<\n  TextInputProps,\n  {\n    readOnly?: boolean;\n    error?: string;\n    disabled?: boolean;\n    valid?: boolean;\n    hideErrors?: boolean;\n    validateOnBlur?: boolean;\n    help?: string;\n    validator?: (value: string) => boolean;\n    values: string[];\n    onValuesChanged: (values: string[]) => void;\n    placeholder?: string;\n  }\n>;\n\nconst SEPARATORS_REGEX = /,| /;\n\nexport type TagInputRef = TextInput & { pushPendingValue: () => void };\n\nexport const LakeTagInput = forwardRef<TagInputRef, LakeTagInputProps>(\n  (\n    {\n      validator = () => true,\n      onFocus: originalOnFocus,\n      onBlur: originalOnBlur,\n      validateOnBlur = true,\n      values,\n      onValuesChanged,\n      readOnly = false,\n      disabled = false,\n      valid = false,\n      hideErrors = false,\n      placeholder,\n      help,\n      error,\n    }: LakeTagInputProps,\n    forwardedRef,\n  ) => {\n    const inputRef = useRef<TextInput | null>(null);\n    const containerRef = useRef<View | null>(null);\n    const [isFocused, setIsFocused] = useState(false);\n    const [isHovered, setIsHovered] = useState(false);\n\n    const mergedRef = useMergeRefs(inputRef, forwardedRef);\n\n    useHover(containerRef, {\n      onHoverStart: () => setIsHovered(true),\n      onHoverEnd: () => setIsHovered(false),\n    });\n\n    const pushNewValues = useCallback(\n      (vals: string[]) => {\n        onValuesChanged([...values, ...vals.filter(v => !values.includes(v))]);\n        inputRef.current?.clear();\n      },\n      [values, onValuesChanged],\n    );\n\n    const onTextInputChange = useCallback(\n      (value: string) => {\n        const input = [...new Set(value.split(SEPARATORS_REGEX).filter(s => s.length))];\n        if (input.length > 1 || input[0] !== value) {\n          pushNewValues(input);\n        }\n      },\n      [pushNewValues],\n    );\n\n    const onTextInputKeyPress = useCallback(\n      ({ nativeEvent }: NativeSyntheticEvent<TextInputKeyPressEventData>) => {\n        if (disabled || readOnly) {\n          return;\n        }\n\n        match({ key: nativeEvent.key, input: inputRef.current })\n          .with({ key: \"Backspace\", input: P.instanceOf(HTMLInputElement) }, ({ input }) => {\n            if (isNullishOrEmpty(input.value)) {\n              onValuesChanged(values.filter(current => current !== values[values.length - 1]));\n            }\n          })\n          .with({ key: \"Enter\", input: P.instanceOf(HTMLInputElement) }, ({ input }) => {\n            if (isNotNullishOrEmpty(input.value)) {\n              pushNewValues([input.value]);\n            }\n          });\n      },\n      [onValuesChanged, pushNewValues, values, disabled, readOnly],\n    );\n\n    const autoFocus = useCallback(() => {\n      inputRef.current?.focus();\n    }, []);\n\n    const onFocus = useCallback(\n      (event: NativeSyntheticEvent<TextInputFocusEventData>) => {\n        setIsFocused(true);\n        originalOnFocus?.(event);\n      },\n      [originalOnFocus],\n    );\n\n    const onBlur = useCallback(\n      (event: NativeSyntheticEvent<TextInputFocusEventData>) => {\n        const input = inputRef.current;\n        if (\n          input instanceof HTMLInputElement &&\n          isNotNullishOrEmpty(input.value) &&\n          validateOnBlur\n        ) {\n          pushNewValues([input.value]);\n        }\n\n        setIsFocused(false);\n        originalOnBlur?.(event);\n      },\n      [pushNewValues, originalOnBlur, validateOnBlur],\n    );\n\n    useImperativeHandle<\n      Pick<TagInputRef, \"pushPendingValue\">,\n      Pick<TagInputRef, \"pushPendingValue\">\n    >(\n      forwardedRef,\n      () => ({\n        pushPendingValue: () => {\n          const input = inputRef.current;\n          if (\n            input instanceof HTMLInputElement &&\n            isNotNullishOrEmpty(input.value) &&\n            validateOnBlur\n          ) {\n            pushNewValues([input.value]);\n          }\n        },\n      }),\n      [pushNewValues, validateOnBlur],\n    );\n\n    const hasError = isNotNullishOrEmpty(error);\n\n    return (\n      <View>\n        <Pressable\n          style={[\n            styles.root,\n            readOnly && hasError && styles.readOnlyError,\n            disabled && styles.disabled,\n            readOnly && styles.readOnly,\n            isFocused && styles.focused,\n            hasError && styles.error,\n            valid && styles.valid,\n            isHovered && styles.hovered,\n          ]}\n          aria-errormessage={error}\n          onPress={autoFocus}\n          ref={containerRef}\n        >\n          {values.map((value, i) => (\n            <Tag\n              key={i}\n              onPressRemove={\n                !readOnly && !disabled\n                  ? () => onValuesChanged(values.filter(current => current !== value))\n                  : undefined\n              }\n              style={styles.tag}\n              color={validator(value) ? \"gray\" : \"negative\"}\n            >\n              {value}\n            </Tag>\n          ))}\n\n          <TextInput\n            ref={mergedRef}\n            style={[styles.input, disabled && styles.disabled]}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            aria-disabled={disabled}\n            onChangeText={onTextInputChange}\n            onKeyPress={onTextInputKeyPress}\n            readOnly={readOnly}\n            placeholder={placeholder}\n          />\n        </Pressable>\n\n        {!hideErrors && (\n          <Box direction=\"row\" style={styles.errorContainer}>\n            {isNotNullish(error) ? (\n              <LakeText variant=\"smallRegular\" color={colors.negative[500]}>\n                {error}\n              </LakeText>\n            ) : (\n              <LakeText variant=\"smallRegular\" color={colors.gray[500]}>\n                {help ?? \" \"}\n              </LakeText>\n            )}\n          </Box>\n        )}\n      </View>\n    );\n  },\n);\n"],"names":["root","factory","exports","this","fun","t","len","res","thisArg","i","A","Z","iso13616Prepare","iban","code","iso7064Mod97_10","remainder","block","parseStructure","structure","regex","format","pattern","repeats","electronicFormat","NON_ALPHANUM","Specification","countryCode","length","example","separator","bban","checkDigit","countries","addSpecification","IBAN","EVERY_FOUR_CHARS","isString","v","countryStructure","EMAIL_REGEX","isValidEmail","maybeEmail","TRANSPARENT","styles","StyleSheet","radii","backgroundColor","colors","spacings","shadows","SEPARATORS_REGEX","LakeTagInput","forwardRef","validator","originalOnFocus","originalOnBlur","validateOnBlur","values","onValuesChanged","readOnly","disabled","valid","hideErrors","placeholder","help","error","forwardedRef","inputRef","useRef","containerRef","isFocused","setIsFocused","useState","isHovered","setIsHovered","mergedRef","useMergeRefs","useHover","pushNewValues","useCallback","vals","_a","onTextInputChange","value","input","s","onTextInputKeyPress","nativeEvent","match","P","isNullishOrEmpty","current","isNotNullishOrEmpty","autoFocus","onFocus","event","onBlur","useImperativeHandle","hasError","View","jsxs","Pressable","jsx","Tag","TextInput","Box","LakeText"],"mappings":"2oCAAC,SAAUA,EAAMC,EAAS,CAIoB,OAAOC,EAAQ,UAAa,SAElED,EAAQC,CAAO,EAGfD,EAAQD,EAAK,KAAO,CAAA,CAAE,CAE9B,GAAEG,GAAM,SAASD,EAAQ,CAIhB,MAAM,UAAU,MACjB,MAAM,UAAU,IAAM,SAASE,EAAmB,CAG9C,GAAI,OAAS,QAAU,OAAS,KAC5B,MAAM,IAAI,UAEd,IAAIC,EAAI,OAAO,IAAI,EACfC,EAAMD,EAAE,SAAW,EACvB,GAAI,OAAOD,GAAQ,WACf,MAAM,IAAI,UAId,QAFIG,EAAM,IAAI,MAAMD,CAAG,EACnBE,EAAU,UAAU,QAAU,EAAI,UAAU,CAAC,EAAI,OAC5CC,EAAI,EAAGA,EAAIH,EAAKG,IAOjBA,KAAKJ,IACLE,EAAIE,CAAC,EAAIL,EAAI,KAAKI,EAASH,EAAEI,CAAC,EAAGA,EAAGJ,CAAC,GAG7C,OAAOE,CACnB,GAGI,IAAIG,EAAI,GACJC,EAAI,GASR,SAASC,EAAgBC,EAAM,CAC3B,OAAAA,EAAOA,EAAK,cACZA,EAAOA,EAAK,OAAO,CAAC,EAAIA,EAAK,OAAO,EAAE,CAAC,EAEhCA,EAAK,MAAM,EAAE,EAAE,IAAI,SAAS,EAAE,CACjC,IAAIC,EAAO,EAAE,WAAW,CAAC,EACzB,OAAIA,GAAQJ,GAAKI,GAAQH,EAEdG,EAAOJ,EAAI,GAEX,CAEvB,CAAS,EAAE,KAAK,EAAE,CACb,CAQD,SAASK,EAAgBF,EAAM,CAI3B,QAHIG,EAAYH,EACZI,EAEGD,EAAU,OAAS,GACtBC,EAAQD,EAAU,MAAM,EAAG,CAAC,EAC5BA,EAAY,SAASC,EAAO,EAAE,EAAI,GAAKD,EAAU,MAAMC,EAAM,MAAM,EAGvE,OAAO,SAASD,EAAW,EAAE,EAAI,EACpC,CAWD,SAASE,EAAeC,EAAU,CAE9B,IAAIC,EAAQD,EAAU,MAAM,SAAS,EAAE,IAAI,SAASF,EAAM,CAGtD,IAAII,EACAC,EAAUL,EAAM,MAAM,EAAG,CAAC,EAC1BM,EAAU,SAASN,EAAM,MAAM,CAAC,EAAG,EAAE,EAEzC,OAAQK,EAAO,CACX,IAAK,IAAKD,EAAS,YAAa,MAChC,IAAK,IAAKA,EAAS,SAAU,MAC7B,IAAK,IAAKA,EAAS,SAAU,MAC7B,IAAK,IAAKA,EAAS,MAAO,MAC1B,IAAK,IAAKA,EAAS,MAAO,MAC1B,IAAK,IAAKA,EAAS,MAAO,MAC1B,IAAK,IAAKA,EAAS,SAAU,KAChC,CAED,MAAO,KAAOA,EAAS,KAAOE,EAAU,IACpD,CAAS,EAED,OAAO,IAAI,OAAO,IAAMH,EAAM,KAAK,EAAE,EAAI,GAAG,CAC/C,CAOD,SAASI,EAAiBX,EAAK,CAC3B,OAAOA,EAAK,QAAQY,EAAc,EAAE,EAAE,YAAW,CACpD,CAYD,SAASC,EAAcC,EAAaC,EAAQT,EAAWU,EAAQ,CAE3D,KAAK,YAAcF,EACnB,KAAK,OAASC,EACd,KAAK,UAAYT,EACjB,KAAK,QAAUU,CAClB,CAKDH,EAAc,UAAU,OAAS,UAAU,CACvC,OAAO,KAAK,eAAiB,KAAK,aAAeR,EAAe,KAAK,SAAS,EACtF,EAQIQ,EAAc,UAAU,QAAU,SAASb,EAAK,CAC5C,OAAO,KAAK,QAAUA,EAAK,QACpB,KAAK,cAAgBA,EAAK,MAAM,EAAE,CAAC,GACnC,KAAK,OAAM,EAAG,KAAKA,EAAK,MAAM,CAAC,CAAC,GAChCE,EAAgBH,EAAgBC,CAAI,CAAC,GAAK,CACzD,EASIa,EAAc,UAAU,OAAS,SAASb,EAAMiB,EAAW,CACvD,OAAO,KAAK,OAAM,EAAG,KAAKjB,EAAK,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,KAAKiB,CAAS,CACxE,EAUIJ,EAAc,UAAU,SAAW,SAASK,EAAM,CAC9C,GAAI,CAAC,KAAK,YAAYA,CAAI,EACtB,MAAM,IAAI,MAAM,cAAc,EAGlC,IAAIf,EAAYD,EAAgBH,EAAgB,KAAK,YAAc,KAAOmB,CAAI,CAAC,EAC3EC,GAAc,KAAO,GAAKhB,IAAY,MAAM,EAAE,EAElD,OAAO,KAAK,YAAcgB,EAAaD,CAC/C,EAUIL,EAAc,UAAU,YAAc,SAASK,EAAM,CACjD,OAAO,KAAK,OAAS,GAAKA,EAAK,QACxB,KAAK,OAAM,EAAG,KAAKA,CAAI,CACtC,EAEI,IAAIE,EAAY,CAAA,EAEhB,SAASC,EAAiBC,EAAK,CAC3BF,EAAUE,EAAK,WAAW,EAAIA,CACjC,CAEDD,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,0BAA0B,CAAC,EAC9FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,yBAAyB,CAAC,EAC7FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,8BAA8B,CAAC,EAClGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,sBAAsB,CAAC,EAC1FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,8BAA8B,CAAC,EAClGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,sBAAsB,CAAC,EAC1FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,kBAAkB,CAAC,EACtFQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,wBAAwB,CAAC,EAC5FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,wBAAwB,CAAC,EAC5FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,kBAAsB,+BAA+B,CAAC,EACnGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,8BAA8B,CAAC,EAClGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,uBAAuB,CAAC,EAC3FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,wBAAwB,CAAC,EAC5FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,8BAA8B,CAAC,EAClGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,0BAA0B,CAAC,EAC9FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,wBAAwB,CAAC,EAC5FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,oBAAoB,CAAC,EACxFQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,8BAA8B,CAAC,EAClGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,sBAAsB,CAAC,EAC1FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,+BAA+B,CAAC,EACnGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,kBAAsB,0BAA0B,CAAC,EAC9FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,oBAAoB,CAAC,EACxFQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,oBAAoB,CAAC,EACxFQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,wBAAwB,CAAC,EAC5FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,wBAAwB,CAAC,EAC5FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,yBAAyB,CAAC,EAC7FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,oBAAoB,CAAC,EACxFQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,8BAA8B,CAAC,EAClGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,uBAAuB,CAAC,EAC3FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,kBAAsB,8BAA8B,CAAC,EAClGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,wBAAwB,CAAC,EAC5FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,yBAAyB,CAAC,EAC7FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,4BAA4B,CAAC,EAChGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,yBAAyB,CAAC,EAC7FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,gCAAgC,CAAC,EACpGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,gCAAgC,CAAC,EACpGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,sBAAsB,CAAC,EAC1FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,8BAA8B,CAAC,EAClGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,kCAAkC,CAAC,EACtGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,uBAAuB,CAAC,EAC3FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,sBAAsB,CAAC,EAC1FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,sBAAsB,CAAC,EAC1FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,uBAAuB,CAAC,EAC3FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,0BAA0B,CAAC,EAC9FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,wBAAwB,CAAC,EAC5FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,qBAAqB,CAAC,EACzFQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,iCAAiC,CAAC,EACrGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,qBAAsB,gCAAgC,CAAC,EACpGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,oBAAoB,CAAC,EACxFQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,iBAAiB,CAAC,EACrFQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,0BAA0B,CAAC,EAC9FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,8BAA8B,CAAC,EAClGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,+BAA+B,CAAC,EACnGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,2BAA2B,CAAC,EAC/FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,+BAA+B,CAAC,EACnGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,0BAA0B,CAAC,EAC9FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,wBAAwB,CAAC,EAC5FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,0BAA0B,CAAC,EAC9FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,iCAAiC,CAAC,EACrGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,0BAA0B,CAAC,EAC9FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,qBAAqB,CAAC,EACzFQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,0BAA0B,CAAC,EAC9FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,2BAA2B,CAAC,EAC/FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,8BAA8B,CAAC,EAClGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,yBAAyB,CAAC,EAC7FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,0BAA0B,CAAC,EAC9FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,4BAA4B,CAAC,EAChGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,MAAsB,+BAA+B,CAAC,EACnGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,MAAsB,wBAAwB,CAAC,EAC5FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,0BAA0B,CAAC,EAC9FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,YAAsB,sBAAsB,CAAC,EAM1FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,MAAsB,2BAA2B,CAAC,EAE/FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,MAAsB,6BAA6B,CAAC,EAEjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,MAAsB,kBAAkB,CAAC,EAEtFQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,MAAsB,8BAA8B,CAAC,EAElGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,8BAA8B,CAAC,EAElGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,MAAsB,6BAA6B,CAAC,EAEjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,MAAsB,2BAA2B,CAAC,EAE/FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,MAAsB,0BAA0B,CAAC,EAE9FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,MAAsB,4BAA4B,CAAC,EAEhGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,MAAsB,6BAA6B,CAAC,EAEjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,8BAA8B,CAAC,EAElGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,MAAsB,2BAA2B,CAAC,EAE/FQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,SAAsB,8BAA8B,CAAC,EAGlGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EACjGQ,EAAiB,IAAIR,EAAc,KAAM,GAAI,eAAsB,6BAA6B,CAAC,EAEjG,IAAID,EAAe,gBACfW,EAAkB,eAQtB,SAASC,EAASC,EAAE,CAChB,OAAQ,OAAOA,GAAK,UAAYA,aAAa,MAChD,CAQDpC,EAAQ,QAAU,SAASW,EAAK,CAC5B,GAAI,CAACwB,EAASxB,CAAI,EACd,MAAO,GAEXA,EAAOW,EAAiBX,CAAI,EAC5B,IAAI0B,EAAmBN,EAAUpB,EAAK,MAAM,EAAE,CAAC,CAAC,EAChD,MAAO,CAAC,CAAC0B,GAAoBA,EAAiB,QAAQ1B,CAAI,CAClE,EASIX,EAAQ,OAAS,SAASW,EAAMiB,EAAU,CAClC,OAAOA,EAAa,MACpBA,EAAY,KAEhBjB,EAAOW,EAAiBX,CAAI,EAC5B,IAAI0B,EAAmBN,EAAUpB,EAAK,MAAM,EAAE,CAAC,CAAC,EAChD,GAAI,CAAC0B,EACD,MAAM,IAAI,MAAM,wBAA0B1B,EAAK,MAAM,EAAE,CAAC,CAAC,EAE7D,OAAO0B,EAAiB,OAAO1B,EAAMiB,CAAS,CACtD,EAWI5B,EAAQ,SAAW,SAASyB,EAAaI,EAAK,CAC1C,IAAIQ,EAAmBN,EAAUN,CAAW,EAC5C,GAAI,CAACY,EACD,MAAM,IAAI,MAAM,wBAA0BZ,CAAW,EAEzD,OAAOY,EAAiB,SAASf,EAAiBO,CAAI,CAAC,CAC/D,EAQI7B,EAAQ,YAAc,SAASyB,EAAaI,EAAK,CAC7C,GAAI,CAACM,EAASN,CAAI,EACd,MAAO,GAEX,IAAIQ,EAAmBN,EAAUN,CAAW,EAC5C,OAAOY,GAAoBA,EAAiB,YAAYf,EAAiBO,CAAI,CAAC,CACtF,EAQI7B,EAAQ,YAAc,SAASW,EAAMiB,EAAU,CAC3C,OAAI,OAAOA,EAAa,MACpBA,EAAY,KAETN,EAAiBX,CAAI,EAAE,QAAQuB,EAAkB,KAAON,CAAS,CAChF,EAEI5B,EAAQ,iBAAmBsB,EAI3BtB,EAAQ,UAAY+B,CAExB,CAAC,QC7aD,MAAMO,GAAc,+DAoCPC,GAAgBC,GACpBF,GAAY,KAAKE,CAAU,ECvBpCC,GAAA,cAEAC,EAAAC,EAAA,OAAA,CACA,UAAA,CACA,SAAA,EACA,WAAA,EACA,cAAA,MACA,WAAA,SACA,EACA,KAAA,CACA,cAAA,MACA,QAAA,OACA,WAAA,SACA,SAAA,OACA,aAAAC,EAAA,CAAA,EACA,gBAAAC,EAAA,SACA,YAAAC,EAAA,KAAA,GAAA,EACA,YAAA,EACA,kBAAAC,EAAA,CAAA,EACA,WAAAA,EAAA,CAAA,EACA,aAAA,OACA,OAAA,MACA,EACA,QAAA,CACA,YAAAD,EAAA,KAAA,GAAA,EACA,UAAAE,EAAA,IACA,EACA,QAAA,CACA,UAAAA,EAAA,IACA,EACA,SAAA,CACA,gBAAAF,EAAA,KAAA,EAAA,EACA,YAAAA,EAAA,KAAA,EAAA,EACA,MAAAA,EAAA,KAAA,GAAA,EACA,OAAA,aACA,EACA,SAAA,CACA,gBAAAA,EAAA,KAAA,EAAA,EACA,YAAAA,EAAA,KAAA,EAAA,EACA,MAAAA,EAAA,KAAA,GAAA,CACA,EACA,cAAA,CACA,YAAAL,GACA,aAAAM,EAAA,EAAA,CACA,EACA,MAAA,CACA,YAAAD,EAAA,SAAA,GAAA,CACA,EACA,MAAA,CACA,YAAAA,EAAA,SAAA,GAAA,CACA,EACA,MAAA,CACA,OAAA,GACA,aAAAC,EAAA,CAAA,EACA,WAAAA,EAAA,CAAA,EACA,aAAA,OACA,SAAA,CACA,EACA,IAAA,CACA,YAAAA,EAAA,CAAA,EACA,aAAAA,EAAA,CAAA,EACA,SAAA,GACA,EACA,eAAA,CACA,WAAAA,EAAA,CAAA,CACA,CACA,CAAA,EAmBAE,GAAA,MAIAC,EAAAC,EAAA,WACA,CACA,CACA,UAAAC,EAAA,IAAA,GACA,QAAAC,EACA,OAAAC,EACA,eAAAC,EAAA,GACA,OAAAC,EACA,gBAAAC,EACA,SAAAC,EAAA,GACA,SAAAC,EAAA,GACA,MAAAC,EAAA,GACA,WAAAC,EAAA,GACA,YAAAC,EACA,KAAAC,EACA,MAAAC,GAEAC,IACA,CACA,MAAAC,EAAAC,SAAA,IAAA,EACAC,EAAAD,SAAA,IAAA,EACA,CAAAE,EAAAC,CAAA,EAAAC,WAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,WAAA,EAAA,EAEAG,EAAAC,GAAAT,EAAAD,CAAA,EAEAW,EAAAR,EAAA,CACA,aAAA,IAAAK,EAAA,EAAA,EACA,WAAA,IAAAA,EAAA,EAAA,CAAA,CACA,EAEA,MAAAI,EAAAC,EAAA,YACAC,GAAA,OACAtB,EAAA,CAAA,GAAAD,EAAA,GAAAuB,EAAA,OAAA3C,GAAA,CAAAoB,EAAA,SAAApB,CAAA,CAAA,CAAA,CAAA,GACA4C,EAAAd,EAAA,UAAA,MAAAc,EAAA,OACA,EACA,CAAAxB,EAAAC,CAAA,CAAA,EAGAwB,EAAAH,EAAA,YACAI,GAAA,CACA,MAAAC,EAAA,CAAA,GAAA,IAAA,IAAAD,EAAA,MAAAjC,EAAA,EAAA,OAAAmC,GAAAA,EAAA,MAAA,CAAA,CAAA,GACAD,EAAA,OAAA,GAAAA,EAAA,CAAA,IAAAD,IACAL,EAAAM,CAAA,CAEA,EACA,CAAAN,CAAA,CAAA,EAGAQ,EAAAP,EAAA,YACA,CAAA,CAAA,YAAAQ,CAAA,IAAA,CACA3B,GAAAD,GAIA6B,EAAA,CAAA,IAAAD,EAAA,IAAA,MAAApB,EAAA,OAAA,CAAA,EACA,KAAA,CAAA,IAAA,YAAA,MAAAsB,EAAA,WAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,MAAAL,KAAA,CACAM,EAAAN,EAAA,KAAA,GACA1B,EAAAD,EAAA,OAAAkC,GAAAA,IAAAlC,EAAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAEA,CAAA,EACA,KAAA,CAAA,IAAA,QAAA,MAAAgC,EAAA,WAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,MAAAL,KAAA,CACAQ,EAAAR,EAAA,KAAA,GACAN,EAAA,CAAAM,EAAA,KAAA,CAAA,CACA,CACA,CACA,EACA,CAAA1B,EAAAoB,EAAArB,EAAAG,EAAAD,CAAA,CAAA,EAGAkC,EAAAd,EAAAA,YAAA,IAAA,QACAE,EAAAd,EAAA,UAAA,MAAAc,EAAA,OACA,EAAA,CAAA,CAAA,EAEAa,EAAAf,EAAA,YACAgB,GAAA,CACAxB,EAAA,EAAA,EACAjB,GAAA,MAAAA,EAAAyC,EACA,EACA,CAAAzC,CAAA,CAAA,EAGA0C,EAAAjB,EAAA,YACAgB,GAAA,CACA,MAAAX,EAAAjB,EAAA,QAEAiB,aAAA,kBACAQ,EAAAR,EAAA,KAAA,GACA5B,GAEAsB,EAAA,CAAAM,EAAA,KAAA,CAAA,EAGAb,EAAA,EAAA,EACAhB,GAAA,MAAAA,EAAAwC,EACA,EACA,CAAAjB,EAAAvB,EAAAC,CAAA,CAAA,EAGAyC,EAAA,oBAIA/B,EACA,KAAA,CACA,iBAAA,IAAA,CACA,MAAAkB,EAAAjB,EAAA,QAEAiB,aAAA,kBACAQ,EAAAR,EAAA,KAAA,GACA5B,GAEAsB,EAAA,CAAAM,EAAA,KAAA,CAAA,CAEA,CAAA,GAEA,CAAAN,EAAAtB,CAAA,CAAA,EAGA,MAAA0C,EAAAN,EAAA3B,CAAA,EAEA,cACAkC,EACA,CAAA,SAAA,CAAAC,EAAA,KAAAC,GAAA,CACA,MAAA,CACA1D,EAAA,KACAgB,GAAAuC,GAAAvD,EAAA,cACAiB,GAAAjB,EAAA,SACAgB,GAAAhB,EAAA,SACA2B,GAAA3B,EAAA,QACAuD,GAAAvD,EAAA,MACAkB,GAAAlB,EAAA,MACA8B,GAAA9B,EAAA,OACA,EACA,oBAAAsB,EACA,QAAA4B,EACA,IAAAxB,EAEA,SAAA,CAAAZ,EAAA,IAAA,CAAA0B,EAAA3E,IACA8F,EAAA,IAAAC,GAAA,CAEA,cACA,CAAA5C,GAAA,CAAAC,EACA,IAAAF,EAAAD,EAAA,OAAAkC,GAAAA,IAAAR,CAAA,CAAA,EACA,OAEA,MAAAxC,EAAA,IACA,MAAAU,EAAA8B,CAAA,EAAA,OAAA,WAEA,SAAAA,CAAA,EATA3E,CAAA,CAWA,EAEA8F,EAAA,IAAAE,GAAA,CACA,IAAA7B,EACA,MAAA,CAAAhC,EAAA,MAAAiB,GAAAjB,EAAA,QAAA,EACA,QAAAmD,EACA,OAAAE,EACA,gBAAApC,EACA,aAAAsB,EACA,WAAAI,EACA,SAAA3B,EACA,YAAAI,CAAA,CACA,CAAA,CAAA,CACA,EAEA,CAAAD,GACAwC,EAAAA,IAAAG,GAAA,CAAA,UAAA,MAAA,MAAA9D,EAAA,eACA,YAAAsB,CAAA,EACAqC,EAAA,IAAAI,EAAA,CAAA,QAAA,eAAA,MAAA3D,EAAA,SAAA,GAAA,EACA,SACAkB,CAAA,CAAA,QAEAyC,EAAA,CAAA,QAAA,eAAA,MAAA3D,EAAA,KAAA,GAAA,EACA,SAAAiB,GAAA,GACA,CAAA,EAEA,CAEA,CAAA,CAAA,CAEA,CACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0]}