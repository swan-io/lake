{"version":3,"file":"RadioGroup-BcbFjBbn.js","sources":["../../../packages/lake/src/components/RadioGroup.tsx"],"sourcesContent":["import { Fragment } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport { colors, ColorVariants, spacings } from \"../constants/design\";\nimport { isNotNullishOrEmpty, isNullish } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { LakeRadio } from \"./LakeRadio\";\nimport { LakeText } from \"./LakeText\";\nimport { Pressable } from \"./Pressable\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flexWrap: \"wrap\",\n  },\n  item: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  withRightSpace: {\n    // use margin instead of <Space /> to avoid line starting with <Space /> because of flex-wrap\n    marginRight: spacings[24],\n  },\n  // We need this bottom margin in case there are too much items and some of them are wrapped to next line\n  withBottomSpace: {\n    // use margin instead of <Space /> to avoid making height bigger than expected\n    marginBottom: spacings[12],\n  },\n  errorContainer: {\n    paddingTop: spacings[4],\n  },\n});\n\nexport type RadioGroupItem<V> = {\n  name: string;\n  value: V;\n  disabled?: boolean;\n};\n\nexport type RadioGroupProps<V> = {\n  items: RadioGroupItem<V>[];\n  direction?: \"column\" | \"row\";\n  color?: ColorVariants;\n  disabled?: boolean;\n  value?: V;\n  error?: string;\n  help?: string;\n  hideErrors?: boolean;\n  onValueChange: (value: V) => void;\n};\n\nexport function RadioGroup<V>({\n  items,\n  direction = \"column\",\n  color = \"current\",\n  disabled = false,\n  hideErrors = false,\n  error,\n  help,\n  value,\n  onValueChange,\n}: RadioGroupProps<V>) {\n  const hasError = isNotNullishOrEmpty(error);\n\n  return (\n    <>\n      <Box direction={direction} style={styles.container}>\n        {items.map((item, index) => {\n          const isLast = index === items.length - 1;\n          const isDisabled = disabled || !isNullish(item.disabled);\n\n          return (\n            <Fragment key={index}>\n              <Pressable\n                disabled={isDisabled}\n                onPress={() => {\n                  if (item.value !== value) {\n                    onValueChange(item.value);\n                  }\n                }}\n                style={[\n                  styles.item,\n                  direction === \"row\" && styles.withBottomSpace,\n                  direction === \"row\" && !isLast && styles.withRightSpace,\n                ]}\n              >\n                <LakeRadio\n                  isError={hasError}\n                  disabled={isDisabled}\n                  color={color}\n                  value={item.value === value}\n                />\n\n                <Space width={12} />\n\n                <LakeText color={isDisabled ? colors.gray[300] : colors.gray[900]}>\n                  {item.name}\n                </LakeText>\n              </Pressable>\n\n              {!isLast && <Space height={direction === \"column\" ? 12 : undefined} />}\n            </Fragment>\n          );\n        })}\n      </Box>\n\n      {!hideErrors && (\n        <Box direction=\"row\" style={styles.errorContainer}>\n          {isNotNullishOrEmpty(error) ? (\n            <LakeText variant=\"smallRegular\" color={colors.negative[500]}>\n              {error}\n            </LakeText>\n          ) : (\n            <LakeText variant=\"smallRegular\" color={colors.gray[500]}>\n              {help ?? \" \"}\n            </LakeText>\n          )}\n        </Box>\n      )}\n    </>\n  );\n}\n"],"names":["styles","StyleSheet","spacings","RadioGroup","items","direction","color","disabled","hideErrors","error","help","value","onValueChange","hasError","isNotNullishOrEmpty","jsxs","Fragment","jsx","Box","item","index","isLast","isDisabled","isNullish","Fragment2","Pressable","LakeRadio","Space","LakeText","colors"],"mappings":"sRAUA,MAAAA,EAAAC,EAAA,OAAA,CAAiC,UAAA,CACpB,SAAA,MACC,EACZ,KAAA,CACM,cAAA,MACW,WAAA,QACH,EACd,eAAA,CACgB,YAAAC,EAAA,EAAA,CAEU,EAC1B,gBAAA,CAEiB,aAAAA,EAAA,EAAA,CAEU,EAC3B,eAAA,CACgB,WAAAA,EAAA,CAAA,CACQ,CAE1B,CAAA,EAoBO,SAAAC,EAAA,CAAuB,MAAAC,EAC5B,UAAAC,EAAA,SACY,MAAAC,EAAA,UACJ,SAAAC,EAAA,GACG,WAAAC,EAAA,GACE,MAAAC,EACb,KAAAC,EACA,MAAAC,EACA,cAAAC,CAEF,EAAA,CACE,MAAAC,EAAAC,EAAAL,CAAA,EAEA,OAAAM,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAA,CAAA,UAAAb,EAAA,MAAAL,EAAA,UAAA,SAAAI,EAAA,IAAA,CAAAe,EAAAC,IAAA,CAEI,MAAAC,EAAAD,IAAAhB,EAAA,OAAA,EACAkB,EAAAf,GAAA,CAAAgB,EAAAJ,EAAA,QAAA,EAEA,OAAAJ,EAAAS,WAAA,CAAA,SAAA,CAEIT,EAAAU,EAAC,CAAA,SAAAH,EACW,QAAA,IAAA,CAERH,EAAA,QAAAR,GACEC,EAAAO,EAAA,KAAA,CACF,EACF,MAAA,CACOnB,EAAA,KACEK,IAAA,OAAAL,EAAA,gBACuBK,IAAA,OAAA,CAAAgB,GAAArB,EAAA,cACW,EAC3C,SAAA,CAEAiB,EAAAS,EAAC,CAAA,QAAAb,EACU,SAAAS,EACC,MAAAhB,EACV,MAAAa,EAAA,QAAAR,CACsB,CAAA,EACxBM,EAAAU,EAAA,CAAA,MAAA,EAAA,CAAA,EAEkBV,EAAAW,EAAA,CAAA,MAAAN,EAAAO,EAAA,KAAA,GAAA,EAAAA,EAAA,KAAA,GAAA,EAAA,SAAAV,EAAA,KAAA,CAIlB,CAAA,CAAA,EACF,CAAAE,GAAAJ,EAAAU,EAAA,CAAA,OAAAtB,IAAA,SAAA,GAAA,OAAA,CAEoE,CAAA,EAAAe,CAAA,CACtE,CAAA,EAAA,EAGN,CAAAZ,GAAAS,EAAAC,EAAA,CAAA,UAAA,MAAA,MAAAlB,EAAA,eAAA,SAAAc,EAAAL,CAAA,EAAAQ,EAAAW,EAAA,CAAA,QAAA,eAAA,MAAAC,EAAA,SAAA,GAAA,EAAA,SAAApB,CAAA,CAAA,EAAAQ,EAAAW,EAAA,CAAA,QAAA,eAAA,MAAAC,EAAA,KAAA,GAAA,EAAA,SAAAnB,GAAA,GAAA,CAAA,EAAA,CAaE,CAAA,CAAA,CAIR"}