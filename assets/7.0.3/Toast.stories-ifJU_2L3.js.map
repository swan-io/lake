{"version":3,"file":"Toast.stories-ifJU_2L3.js","sources":["../../../node_modules/react-atomic-state/dist/index.module.js","../../../packages/lake/src/utils/timer.ts","../../../packages/lake/src/state/toasts.ts","../../../packages/lake/src/components/ToastStack.tsx"],"sourcesContent":["import{useSyncExternalStoreWithSelector as e}from\"use-sync-external-store/shim/with-selector\";function t(e){const t=new Set;let r=e;return{get:()=>r,set(e){r=\"function\"==typeof e?e(r):e,t.forEach(e=>e(r))},subscribe:e=>(t.add(e),()=>{t.delete(e)}),reset(){r=e,t.forEach(e=>e(r))}}}function r(e){return e}function n(t,n){return void 0===n&&(n=Object.is),e(t.subscribe,t.get,t.get,r,n)}function o(t,r,n){return void 0===n&&(n=Object.is),e(t.subscribe,t.get,t.get,r,n)}export{t as atom,n as useAtom,o as useAtomWithSelector};\n//# sourceMappingURL=index.module.js.map\n","// based on https://gist.github.com/ncou/3a0a1f89c8e22416d0d607f621a948a9\n\nexport type ControllableTimeout = {\n  readonly duration: number;\n  readonly clear: () => void;\n  readonly reset: () => void;\n};\n\nexport const createControllableTimeout = (config: {\n  duration: number;\n  onStart: (duration: number) => void;\n  onEnd: () => void;\n  onReset: (duration: number) => void;\n}): ControllableTimeout => {\n  const { duration, onStart, onReset, onEnd } = config;\n  let timerId = 0;\n  let remaining = duration;\n\n  const clear = () => {\n    document.removeEventListener(\"visibilitychange\", onVisibilityChange);\n    window.clearTimeout(timerId);\n  };\n\n  const start = () => {\n    if (remaining <= 0) {\n      return;\n    }\n\n    timerId = window.setTimeout(() => {\n      remaining = 0;\n      clear();\n      onEnd();\n    }, remaining);\n\n    onStart(duration);\n  };\n\n  const reset = () => {\n    window.clearTimeout(timerId);\n\n    remaining = duration;\n\n    timerId = window.setTimeout(() => {\n      remaining = 0;\n      clear();\n      onEnd();\n    }, duration);\n\n    onReset(duration);\n  };\n\n  const onVisibilityChange = () => {\n    document.removeEventListener(\"visibilitychange\", onVisibilityChange);\n    start();\n  };\n\n  if (document.hidden) {\n    document.addEventListener(\"visibilitychange\", onVisibilityChange);\n  } else {\n    start();\n  }\n\n  return {\n    duration,\n    clear,\n    reset,\n  };\n};\n","import { atom, useAtom } from \"react-atomic-state\";\nimport { Animated, Easing } from \"react-native\";\nimport { ControllableTimeout, createControllableTimeout } from \"../utils/timer\";\n\nexport type ToastVariant = \"success\" | \"info\" | \"warning\" | \"error\";\n\ntype ToastContent = {\n  variant: ToastVariant;\n  title: string;\n  description?: string;\n  autoClose?: boolean;\n};\n\ntype Toast = {\n  uid: string;\n  variant: ToastVariant;\n  title: string;\n  description?: string;\n  progress?: Animated.Value;\n  timeout?: ControllableTimeout;\n};\n\nconst toasts = atom<Toast[]>([]);\n\nexport const useToasts = () => useAtom(toasts);\n\nexport const hideToast = (uid: string) => {\n  const toast = toasts.get().find(toast => toast.uid === uid);\n\n  if (!toast) {\n    return;\n  }\n\n  toast.timeout?.clear();\n  toast.progress?.stopAnimation();\n\n  toasts.set(toasts => toasts.filter(toast => toast.uid !== uid));\n};\n\nexport const showToast = ({ variant, title, description, autoClose }: ToastContent) => {\n  const uid = `${variant} - ${title} - ${description ?? \"\"}`;\n\n  const toast = toasts.get().find(toast => toast.uid === uid);\n\n  if (toast != null) {\n    if (toast.timeout && toast.progress) {\n      toast.timeout.clear();\n\n      Animated.timing(toast.progress, {\n        duration: 100,\n        easing: Easing.linear,\n        toValue: 1,\n        useNativeDriver: false,\n      }).start(() => {\n        toast.timeout?.reset();\n      });\n    }\n\n    return uid;\n  }\n\n  // by default, only info and success toasts are auto-closing\n  const isAutoClosingToast = autoClose ?? (variant === \"info\" || variant === \"success\");\n\n  const progress = isAutoClosingToast ? new Animated.Value(1) : undefined;\n\n  const timeout = progress\n    ? createControllableTimeout({\n        duration: 10000,\n        onStart: duration => {\n          Animated.timing(progress, {\n            duration,\n            easing: Easing.linear,\n            toValue: 0,\n            useNativeDriver: false,\n          }).start();\n        },\n        onReset: duration => {\n          Animated.timing(progress, {\n            duration,\n            easing: Easing.linear,\n            toValue: 0,\n            useNativeDriver: false,\n          }).start();\n        },\n        onEnd: () => {\n          hideToast(uid);\n        },\n      })\n    : undefined;\n\n  toasts.set(toasts => [{ uid, variant, title, description, progress, timeout }, ...toasts]);\n  return uid;\n};\n","import { memo, useEffect, useRef, useState } from \"react\";\nimport { Animated, StyleSheet, View } from \"react-native\";\nimport { match } from \"ts-pattern\";\nimport { ColorVariants, animations, colors, shadows } from \"../constants/design\";\nimport { ToastVariant, hideToast, useToasts } from \"../state/toasts\";\nimport { isNullish } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { Icon } from \"./Icon\";\nimport { LakeText } from \"./LakeText\";\nimport { Portal } from \"./Portal\";\nimport { Pressable } from \"./Pressable\";\nimport { Space } from \"./Space\";\nimport { TransitionGroupView } from \"./TransitionGroupView\";\n\nconst styles = StyleSheet.create({\n  list: {\n    position: \"absolute\",\n    right: 0,\n    bottom: 0,\n    maxHeight: \"100%\",\n    maxWidth: 400,\n    paddingVertical: 8,\n    width: \"100%\",\n    zIndex: 10,\n  },\n  toastWrapper: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  toast: {\n    padding: 24,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderLeftWidth: 4,\n    overflow: \"hidden\",\n    boxShadow: shadows.modal,\n  },\n  contentContainer: {\n    paddingRight: 36, // 24 for close button + 12 for spacing\n  },\n  closeButton: {\n    zIndex: 1,\n    position: \"absolute\",\n    width: 24,\n    height: 24,\n    right: 24,\n    top: 0,\n    bottom: 0,\n    margin: \"auto\",\n  },\n  progressBar: {\n    height: 2,\n    transformOrigin: \"left\",\n  },\n});\n\ntype ToastProps = {\n  variant: ToastVariant;\n  uid: string;\n  title: string;\n  description?: string;\n  progress?: Animated.Value;\n  onClose: (uid: string) => void;\n};\n\nconst Toast = memo<ToastProps>(({ variant, uid, title, description, progress, onClose }) => {\n  const progressBarRef = useRef<View>(null);\n\n  const colorVariation = match(variant)\n    .returnType<ColorVariants>()\n    .with(\"success\", () => \"positive\")\n    .with(\"error\", () => \"negative\")\n    .with(\"info\", () => \"shakespear\")\n    .with(\"warning\", () => \"warning\")\n    .exhaustive();\n\n  useEffect(() => {\n    if (isNullish(progress)) {\n      return;\n    }\n\n    const id = progress.addListener(({ value }) => {\n      if (progressBarRef.current instanceof HTMLElement) {\n        progressBarRef.current.style.transform = `scaleX(${value})`;\n      }\n    });\n\n    return () => progress.removeListener(id);\n  }, [progress]);\n\n  return (\n    <View style={styles.toastWrapper}>\n      <View\n        style={[\n          styles.toast,\n          {\n            borderColor: colors[colorVariation][200],\n            borderLeftColor: colors[colorVariation][500],\n            backgroundColor: colors[colorVariation][0],\n          },\n        ]}\n      >\n        <Box style={styles.contentContainer}>\n          <Box direction=\"row\" alignItems=\"center\">\n            {match(variant)\n              .with(\"success\", () => (\n                <Icon\n                  name=\"checkmark-circle-regular\"\n                  size={20}\n                  color={colors[colorVariation][700]}\n                />\n              ))\n              .with(\"error\", () => (\n                <Icon name=\"dismiss-circle-regular\" size={20} color={colors[colorVariation][700]} />\n              ))\n              .with(\"info\", () => (\n                <Icon name=\"info-regular\" size={20} color={colors[colorVariation][700]} />\n              ))\n              .with(\"warning\", () => (\n                <Icon name=\"warning-regular\" size={20} color={colors[colorVariation][700]} />\n              ))\n              .exhaustive()}\n\n            <Space width={12} />\n\n            <LakeText variant=\"regular\" color={colors[colorVariation][700]}>\n              {title}\n            </LakeText>\n          </Box>\n\n          {description != null && (\n            <>\n              <Space height={8} />\n\n              <LakeText variant=\"smallRegular\" color={colors.gray[700]}>\n                {description}\n              </LakeText>\n            </>\n          )}\n        </Box>\n\n        <Pressable onPress={() => onClose(uid)} style={styles.closeButton}>\n          <Icon name=\"lake-close\" size={24} color={colors.gray[500]} />\n        </Pressable>\n\n        {progress != null && (\n          <>\n            <Space height={24} />\n\n            <View\n              ref={progressBarRef}\n              role=\"progressbar\"\n              style={[styles.progressBar, { backgroundColor: colors[colorVariation][500] }]}\n            />\n          </>\n        )}\n      </View>\n    </View>\n  );\n});\n\nexport const ToastStack = () => {\n  const toasts = useToasts();\n\n  const [rootElement, setRootElement] = useState<Element | undefined>(() => undefined);\n\n  useEffect(() => {\n    const rootElement = document.createElement(\"div\");\n    document.body.append(rootElement);\n    setRootElement(rootElement);\n    return () => {\n      rootElement.remove();\n      setRootElement(undefined);\n    };\n  }, []);\n\n  if (rootElement == null) {\n    return null;\n  }\n\n  return (\n    <Portal container={rootElement}>\n      <TransitionGroupView\n        style={styles.list}\n        enter={animations.fadeAndSlideInFromRight.enter}\n        leave={animations.fadeAndSlideInFromRight.leave}\n      >\n        {toasts.map(toast => (\n          <Toast\n            key={toast.uid}\n            uid={toast.uid}\n            variant={toast.variant}\n            progress={toast.progress}\n            title={toast.title}\n            description={toast.description}\n            onClose={hideToast}\n          />\n        ))}\n      </TransitionGroupView>\n    </Portal>\n  );\n};\n"],"names":["t","e","r","n","createControllableTimeout","config","duration","onStart","onReset","onEnd","timerId","remaining","clear","onVisibilityChange","start","reset","toasts","atom","useToasts","useAtom","hideToast","uid","toast","_a","_b","showToast","variant","title","description","autoClose","Animated","Easing","progress","timeout","styles","StyleSheet","shadows","Toast","memo","onClose","progressBarRef","useRef","colorVariation","match","useEffect","isNullish","id","value","jsx","View","jsxs","colors","Box","Icon","Space","LakeText","Fragment","Pressable","ToastStack","rootElement","setRootElement","useState","Portal","TransitionGroupView","animations"],"mappings":"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","x_google_ignoreList":[0]}