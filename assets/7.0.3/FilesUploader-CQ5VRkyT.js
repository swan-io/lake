import{s as P,d as I,g as S,b as F,K as L,c as U,j as e,B as b,L as j,S as w,V as R,N as E,q as V,h as O,i as C}from"./Space-Bfex_hJx.js";import{r as o}from"./index-CBqU2yxZ.js";import{g as M,F as H}from"./FileInput-D7cjzzCb.js";import{L as q}from"./LakeAlert-C2IVsz--.js";import{L as x}from"./LakeButton-DgMSOTHv.js";import{T as N}from"./Tag-BaCsPH4E.js";import{c as X}from"./commonStyles-t4XfA7cz.js";import{t as v}from"./i18n-CbHmU6GW.js";const G=t=>{const[m,a]=o.useState(t.initialFiles),l=o.useCallback((u,d)=>t.generateUpload(u).tapError(i=>{t.onError!=null&&t.onError(i)}).flatMapOk(({upload:i,id:p})=>{a(n=>[...n.filter(r=>r.id!==p),{id:p,statusInfo:{status:"Uploading",progress:0},name:d.name}]);const c=n=>{a(r=>r.map(g=>g.id!==p?g:{...g,statusInfo:{status:"Uploading",progress:n.loaded/n.total}}))};return t.uploadFile({id:p,upload:i,file:d,onLoadStart:c,onProgress:c}).tapOk(()=>{a(n=>n.map(r=>r.id!==p?r:{...r,statusInfo:{status:"Uploaded"}}))}).tapError(n=>{t.onError!=null&&t.onError(n),a(r=>r.filter(g=>g.id!==p))})}),[t]),y=o.useCallback(u=>{a(d=>d.filter(i=>i.id!==u))},[]);return{files:m,upload:l,remove:y}},k=P.create({base:{backgroundColor:I.accented,borderRadius:8,boxShadow:S.tile,overflow:"hidden"},content:{height:56,paddingLeft:F[20],paddingRight:F[8]},progressBar:{flex:1,height:4,borderRadius:2,backgroundColor:L},progress:{height:4,transitionProperty:"width",transitionDuration:"300ms",transitionTimingFunction:"ease-in-out",borderRadius:2,backgroundColor:U.current[500]}}),T=({file:{statusInfo:t,name:m,url:a},onRemove:l})=>{const[y,u]=o.useState(!1),d=o.useCallback(()=>{l!=null&&(u(!0),l().tap(()=>u(!1)))},[l]);return e.jsxs(b,{style:k.base,children:[e.jsx(b,{alignItems:"center",direction:"row",style:k.content,children:t.status==="Uploading"?e.jsxs(e.Fragment,{children:[e.jsx(j,{numberOfLines:1,color:U.gray[700],children:v("fileTile.uploading")}),e.jsx(w,{width:20}),e.jsx(R,{role:"progressbar",style:k.progressBar,children:e.jsx(R,{style:[k.progress,{width:`${t.progress*100}%`}]})})]}):e.jsxs(e.Fragment,{children:[e.jsx(N,{icon:M(m),iconSize:20,color:E(t).with({status:V.union("Uploaded","Pending")},()=>"shakespear").with({status:"Validated"},()=>"positive").with({status:"Refused"},()=>"negative").exhaustive()}),e.jsx(w,{width:16}),e.jsx(j,{numberOfLines:1,color:U.gray[700],style:X.fill,children:m}),e.jsx(w,{width:12}),O(a)&&e.jsx(x,{mode:"tertiary",size:"small",icon:"open-filled",onPress:()=>{window.open(a,"_blank")},ariaLabel:v("common.open")}),C(l)&&e.jsx(x,{mode:"tertiary",size:"small",icon:"delete-regular",color:"negative",onPress:d,loading:y,ariaLabel:v("common.remove")})]})}),E(t).with({status:"Pending"},()=>e.jsx(q,{anchored:!0,title:v("fileTile.status.Pending"),variant:"info"})).with({status:"Validated"},()=>e.jsx(q,{anchored:!0,title:v("fileTile.status.Validated"),variant:"success"})).with({status:"Refused"},({reason:i})=>e.jsx(q,{anchored:!0,title:v("fileTile.status.Refused"),variant:"error",children:i})).otherwise(()=>null)]})};T.__docgenInfo={description:"",methods:[],displayName:"FileTile",props:{file:{required:!0,tsType:{name:"signature",type:"object",raw:`{
  id: string;
  statusInfo: SwanFileStatusInfo;
  name: string;
  url?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"statusInfo",value:{name:"union",raw:`| { status: "Uploading"; progress: number }
| { status: "Uploaded" }
| { status: "Pending" }
| { status: "Validated" }
| { status: "Refused"; reason: string }`,elements:[{name:"signature",type:"object",raw:'{ status: "Uploading"; progress: number }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploading"',required:!0}},{key:"progress",value:{name:"number",required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Uploaded" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploaded"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Pending" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Pending"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Validated" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Validated"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Refused"; reason: string }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Refused"',required:!0}},{key:"reason",value:{name:"string",required:!0}}]}}],required:!0}},{key:"name",value:{name:"string",required:!0}},{key:"url",value:{name:"string",required:!1}}]}},description:""},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => Future<unknown>",signature:{arguments:[],return:{name:"Future",elements:[{name:"unknown"}],raw:"Future<unknown>"}}},description:""}}};const z=({maxSize:t,accept:m,icon:a,getUploadConfig:l,onRemoveFile:y,onChange:u,formatAndSizeDescription:d,canUpload:i=!0,...p})=>{const{files:c,upload:n,remove:r}=G(p),g=o.useRef(u);g.current=u;const h=o.useRef(!0);return o.useEffect(()=>{if(h.current){h.current=!1;return}const s=g.current;s!=null&&s(c)},[c]),e.jsxs(b,{children:[i?e.jsxs(e.Fragment,{children:[e.jsx(H,{layout:"horizontal",onFiles:s=>{s.forEach(f=>{n(l(f),f)})},accept:m,icon:a,description:d,maxSize:t}),e.jsx(w,{height:12})]}):null,c.map((s,f)=>e.jsxs(o.Fragment,{children:[f>0?e.jsx(w,{height:12}):null,e.jsx(T,{file:s,onRemove:y!=null&&s.statusInfo.status==="Uploaded"?()=>y(s).tapOk(()=>{r(s.id)}):void 0})]},s.id))]})};z.__docgenInfo={description:"",methods:[],displayName:"FilesUploader",props:{initialFiles:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  statusInfo: SwanFileStatusInfo;
  name: string;
  url?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"statusInfo",value:{name:"union",raw:`| { status: "Uploading"; progress: number }
| { status: "Uploaded" }
| { status: "Pending" }
| { status: "Validated" }
| { status: "Refused"; reason: string }`,elements:[{name:"signature",type:"object",raw:'{ status: "Uploading"; progress: number }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploading"',required:!0}},{key:"progress",value:{name:"number",required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Uploaded" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploaded"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Pending" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Pending"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Validated" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Validated"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Refused"; reason: string }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Refused"',required:!0}},{key:"reason",value:{name:"string",required:!0}}]}}],required:!0}},{key:"name",value:{name:"string",required:!0}},{key:"url",value:{name:"string",required:!1}}]}}],raw:"SwanFile[]"},description:""},generateUpload:{required:!0,tsType:{name:"signature",type:"function",raw:`(
  config: UploadInput,
) => Future<Result<UploadOutputWithId<UploadOutput>, GenerateUploadError>>`,signature:{arguments:[{type:{name:"UploadInput"},name:"config"}],return:{name:"Future",elements:[{name:"Result",elements:[{name:"signature",type:"object",raw:"{ id: string; upload: UploadOutput }",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"upload",value:{name:"UploadOutput",required:!0}}]}},{name:"GenerateUploadError"}],raw:"Result<UploadOutputWithId<UploadOutput>, GenerateUploadError>"}],raw:"Future<Result<UploadOutputWithId<UploadOutput>, GenerateUploadError>>"}}},description:""},uploadFile:{required:!0,tsType:{name:"signature",type:"function",raw:"(config: UploadFileInput<UploadOutput>) => Future<Result<unknown, UploadFileError>>",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  upload: UploadOutput;
  file: File;
  onLoadStart: (event: ProgressEvent<XMLHttpRequestEventTarget>) => void;
  onProgress: (event: ProgressEvent<XMLHttpRequestEventTarget>) => void;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"upload",value:{name:"UploadOutput",required:!0}},{key:"file",value:{name:"File",required:!0}},{key:"onLoadStart",value:{name:"signature",type:"function",raw:"(event: ProgressEvent<XMLHttpRequestEventTarget>) => void",signature:{arguments:[{type:{name:"ProgressEvent",elements:[{name:"XMLHttpRequestEventTarget"}],raw:"ProgressEvent<XMLHttpRequestEventTarget>"},name:"event"}],return:{name:"void"}},required:!0}},{key:"onProgress",value:{name:"signature",type:"function",raw:"(event: ProgressEvent<XMLHttpRequestEventTarget>) => void",signature:{arguments:[{type:{name:"ProgressEvent",elements:[{name:"XMLHttpRequestEventTarget"}],raw:"ProgressEvent<XMLHttpRequestEventTarget>"},name:"event"}],return:{name:"void"}},required:!0}}]}},name:"config"}],return:{name:"Future",elements:[{name:"Result",elements:[{name:"unknown"},{name:"UploadFileError"}],raw:"Result<unknown, UploadFileError>"}],raw:"Future<Result<unknown, UploadFileError>>"}}},description:""},onError:{required:!1,tsType:{name:"signature",type:"function",raw:"(error: GenerateUploadError | UploadFileError) => void",signature:{arguments:[{type:{name:"union",raw:"GenerateUploadError | UploadFileError",elements:[{name:"GenerateUploadError"},{name:"UploadFileError"}]},name:"error"}],return:{name:"void"}}},description:""},getUploadConfig:{required:!0,tsType:{name:"signature",type:"function",raw:"(file: File) => UploadInput",signature:{arguments:[{type:{name:"File"},name:"file"}],return:{name:"UploadInput"}}},description:""},accept:{required:!0,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:""},maxSize:{required:!0,tsType:{name:"number"},description:""},icon:{required:!0,tsType:{name:"unknown"},description:""},formatAndSizeDescription:{required:!1,tsType:{name:"string"},description:""},onRemoveFile:{required:!1,tsType:{name:"signature",type:"function",raw:"(file: SwanFile) => Future<Result<unknown, unknown>>",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  id: string;
  statusInfo: SwanFileStatusInfo;
  name: string;
  url?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"statusInfo",value:{name:"union",raw:`| { status: "Uploading"; progress: number }
| { status: "Uploaded" }
| { status: "Pending" }
| { status: "Validated" }
| { status: "Refused"; reason: string }`,elements:[{name:"signature",type:"object",raw:'{ status: "Uploading"; progress: number }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploading"',required:!0}},{key:"progress",value:{name:"number",required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Uploaded" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploaded"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Pending" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Pending"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Validated" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Validated"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Refused"; reason: string }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Refused"',required:!0}},{key:"reason",value:{name:"string",required:!0}}]}}],required:!0}},{key:"name",value:{name:"string",required:!0}},{key:"url",value:{name:"string",required:!1}}]}},name:"file"}],return:{name:"Future",elements:[{name:"Result",elements:[{name:"unknown"},{name:"unknown"}],raw:"Result<unknown, unknown>"}],raw:"Future<Result<unknown, unknown>>"}}},description:""},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(files: SwanFile[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
  id: string;
  statusInfo: SwanFileStatusInfo;
  name: string;
  url?: string;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"statusInfo",value:{name:"union",raw:`| { status: "Uploading"; progress: number }
| { status: "Uploaded" }
| { status: "Pending" }
| { status: "Validated" }
| { status: "Refused"; reason: string }`,elements:[{name:"signature",type:"object",raw:'{ status: "Uploading"; progress: number }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploading"',required:!0}},{key:"progress",value:{name:"number",required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Uploaded" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Uploaded"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Pending" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Pending"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Validated" }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Validated"',required:!0}}]}},{name:"signature",type:"object",raw:'{ status: "Refused"; reason: string }',signature:{properties:[{key:"status",value:{name:"literal",value:'"Refused"',required:!0}},{key:"reason",value:{name:"string",required:!0}}]}}],required:!0}},{key:"name",value:{name:"string",required:!0}},{key:"url",value:{name:"string",required:!1}}]}}],raw:"SwanFile[]"},name:"files"}],return:{name:"void"}}},description:""},canUpload:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}}}};export{z as F};
//# sourceMappingURL=FilesUploader-CQ5VRkyT.js.map
