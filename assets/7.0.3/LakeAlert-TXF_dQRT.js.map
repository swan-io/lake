{"version":3,"file":"LakeAlert-TXF_dQRT.js","sources":["../../../packages/lake/src/components/LakeAlert.tsx"],"sourcesContent":["import { ReactNode } from \"react\";\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\nimport { commonStyles } from \"../constants/commonStyles\";\nimport { colors, shadows } from \"../constants/design\";\nimport { isNotNullish, isNotNullishOrEmpty } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { Icon, IconName } from \"./Icon\";\nimport { LakeText } from \"./LakeText\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  base: {\n    paddingVertical: 20,\n    paddingHorizontal: 24,\n    borderRadius: 4,\n    borderWidth: 0.5,\n    borderLeftWidth: 4,\n    boxShadow: shadows.tile,\n  },\n  anchored: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderLeftWidth: 0.5,\n    marginHorizontal: -1,\n    marginBottom: -1,\n  },\n  content: {\n    marginLeft: 40,\n  },\n  callToAction: {\n    marginTop: -12,\n    marginBottom: -12,\n    marginRight: -12,\n    flexShrink: 0,\n  },\n});\n\ntype AlertVariant = \"info\" | \"warning\" | \"error\" | \"success\" | \"neutral\";\n\nconst alertIcon: Record<AlertVariant, IconName | undefined> = {\n  info: \"info-regular\",\n  warning: \"warning-regular\",\n  error: \"dismiss-circle-regular\",\n  success: \"checkmark-circle-regular\",\n  neutral: undefined,\n};\n\nconst alertColor: Record<AlertVariant, string> = {\n  info: colors.shakespear[700],\n  warning: colors.warning[700],\n  error: colors.negative[700],\n  success: colors.positive[700],\n  neutral: colors.gray[700],\n};\n\nconst alertBackground: Record<AlertVariant, string> = {\n  info: colors.shakespear[0],\n  warning: colors.warning[0],\n  error: colors.negative[0],\n  success: colors.positive[0],\n  neutral: colors.gray[0],\n};\n\nconst alertBorder: Record<AlertVariant, string> = {\n  info: colors.shakespear[200],\n  warning: colors.warning[200],\n  error: colors.negative[200],\n  success: colors.positive[200],\n  neutral: colors.gray[200],\n};\n\nconst alertLeftBorder: Record<AlertVariant, string> = {\n  info: colors.shakespear[500],\n  warning: colors.warning[500],\n  error: colors.negative[500],\n  success: colors.positive[500],\n  neutral: colors.gray[500],\n};\n\ntype Props = {\n  anchored?: boolean;\n  variant: AlertVariant;\n  children?: ReactNode;\n  callToAction?: ReactNode;\n  title: ReactNode;\n  subtitle?: string;\n  style?: StyleProp<ViewStyle>;\n};\n\nconst isText = (node: ReactNode): node is string | number =>\n  typeof node === \"string\" || typeof node === \"number\";\n\nexport const LakeAlert = ({\n  anchored = false,\n  variant,\n  title,\n  subtitle,\n  children,\n  style,\n  callToAction,\n}: Props) => {\n  const color = alertColor[variant];\n  const icon = alertIcon[variant];\n\n  return (\n    <View\n      style={[\n        styles.base,\n        { backgroundColor: alertBackground[variant], borderColor: alertBorder[variant] },\n        anchored ? styles.anchored : { borderLeftColor: alertLeftBorder[variant] },\n        style,\n      ]}\n    >\n      <Box direction=\"row\" alignItems=\"center\">\n        {icon != null ? (\n          <>\n            <Icon name={icon} color={color} size={20} />\n            <Space width={20} />\n          </>\n        ) : null}\n\n        <View style={commonStyles.fill}>\n          <LakeText color={color} variant={icon != null ? \"regular\" : \"medium\"}>\n            {title}\n          </LakeText>\n\n          {isNotNullishOrEmpty(subtitle) && <LakeText color={color}>{subtitle}</LakeText>}\n        </View>\n\n        {isNotNullish(callToAction) && <View style={styles.callToAction}>{callToAction}</View>}\n      </Box>\n\n      {isNotNullish(children) && (\n        <View style={icon != null ? styles.content : null}>\n          <Space height={12} />\n\n          {isText(children) ? <LakeText>{children}</LakeText> : children}\n        </View>\n      )}\n    </View>\n  );\n};\n"],"names":["styles","StyleSheet","shadows","alertIcon","alertColor","colors","alertBackground","alertBorder","alertLeftBorder","isText","node","LakeAlert","anchored","variant","title","subtitle","children","style","callToAction","color","icon","jsxs","View","Box","Fragment","jsx","Icon","Space","commonStyles","LakeText","isNotNullishOrEmpty","isNotNullish"],"mappings":"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"}