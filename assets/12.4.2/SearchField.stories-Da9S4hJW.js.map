{"version":3,"file":"SearchField.stories-Da9S4hJW.js","sources":["../../../packages/lake/src/hooks/useDebounce.ts","../../../packages/lake/src/components/LakeSearchField.tsx","../../../packages/lake/__stories__/SearchField.stories.tsx"],"sourcesContent":["import { useCallback, useRef } from \"react\";\nimport { isNotNullish } from \"../utils/nullish\";\n\nexport const useDebounce = <T>(func: (arg: T) => void, duration: number) => {\n  const timeoutRef = useRef<number>(undefined);\n\n  return useCallback(\n    (arg: T) => {\n      if (isNotNullish(timeoutRef.current)) {\n        clearTimeout(timeoutRef.current);\n      }\n      timeoutRef.current = window.setTimeout(func, duration, arg);\n      return () => clearTimeout(timeoutRef.current);\n    },\n    [func, duration],\n  );\n};\n","import { ReactNode, Ref, useCallback, useRef, useState } from \"react\";\nimport { Pressable, StyleSheet, TextInput, View } from \"react-native\";\nimport { animations, backgroundColor, colors, radii, spacings } from \"../constants/design\";\nimport { useBoolean } from \"../hooks/useBoolean\";\nimport { useDebounce } from \"../hooks/useDebounce\";\nimport { isNotNullishOrEmpty } from \"../utils/nullish\";\nimport { Icon } from \"./Icon\";\nimport { LakeButton } from \"./LakeButton\";\nimport { LakeTextInput } from \"./LakeTextInput\";\nimport { ResponsiveContainer } from \"./ResponsiveContainer\";\nimport { TransitionView } from \"./TransitionView\";\n\nconst BREAKPOINT = 350;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  input: {\n    transition: \"300ms ease-in-out border-color\",\n    justifyContent: \"flex-end\",\n  },\n  focus: {\n    outlineStyle: \"none\",\n    borderColor: colors.current.primary,\n  },\n  clearButton: {\n    padding: spacings[8],\n    borderRadius: radii[4],\n  },\n  openSearchFieldContainer: {\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    bottom: 0,\n  },\n  openSearchField: {\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    bottom: 0,\n    boxShadow: `0 0 20px 20px ${backgroundColor.default}`,\n    borderRadius: radii[6],\n  },\n});\n\ntype Props = {\n  initialValue: string;\n  placeholder: string;\n  onChangeText: (text: string) => void;\n  debounceDuration?: number;\n  maxWidth?: number;\n  children?: ReactNode;\n  renderEnd?: () => ReactNode;\n};\n\ntype InternalProps = {\n  inputRef: Ref<TextInput>;\n  placeholder: string;\n  initialValue: string;\n  onChange: (value: string) => void;\n  setFocused: { on: () => void; off: () => void };\n  hasFocus: boolean;\n  clear: () => void;\n  currentValue: string;\n  renderEnd?: () => ReactNode;\n};\n\nconst CollapsibleSearchField = ({\n  inputRef,\n  placeholder,\n  initialValue,\n  onChange,\n  setFocused,\n  hasFocus,\n  clear,\n  currentValue,\n  renderEnd,\n}: InternalProps) => {\n  return (\n    <View>\n      <LakeButton\n        mode=\"secondary\"\n        size=\"small\"\n        ariaLabel={placeholder}\n        icon=\"search-filled\"\n        onPress={setFocused.on}\n        pill={currentValue !== \"\"}\n      />\n\n      <TransitionView\n        style={styles.openSearchFieldContainer}\n        {...animations.fadeAndSlideInFromRight}\n      >\n        {hasFocus ? (\n          <View style={styles.openSearchField}>\n            <ExpandedSearchField\n              inputRef={inputRef}\n              placeholder={placeholder}\n              initialValue={initialValue}\n              onChange={onChange}\n              setFocused={setFocused}\n              hasFocus={hasFocus}\n              clear={clear}\n              currentValue={currentValue}\n              renderEnd={renderEnd}\n            />\n          </View>\n        ) : null}\n      </TransitionView>\n    </View>\n  );\n};\n\nconst ExpandedSearchField = ({\n  inputRef,\n  placeholder,\n  initialValue,\n  onChange,\n  setFocused,\n  hasFocus,\n  clear,\n  renderEnd,\n  currentValue,\n}: InternalProps) => {\n  const timeoutRef = useRef<number>(null);\n\n  return (\n    <LakeTextInput\n      ref={inputRef}\n      autoFocus={hasFocus}\n      icon=\"search-filled\"\n      placeholder={placeholder}\n      defaultValue={initialValue}\n      inputMode=\"search\"\n      onChangeText={onChange}\n      hideErrors={true}\n      renderEnd={() => (\n        <>\n          {isNotNullishOrEmpty(currentValue) && (\n            <Pressable\n              role=\"button\"\n              style={styles.clearButton}\n              onPress={() => {\n                if (timeoutRef.current != null) {\n                  clearTimeout(timeoutRef.current);\n                }\n                clear();\n              }}\n            >\n              <Icon name=\"dismiss-filled\" size={12} color={colors.gray[500]} />\n            </Pressable>\n          )}\n\n          {renderEnd?.()}\n        </>\n      )}\n      onFocus={() => {\n        if (timeoutRef.current != null) {\n          clearTimeout(timeoutRef.current);\n        }\n        setFocused.on();\n      }}\n      onBlur={() => {\n        timeoutRef.current = window.setTimeout(() => {\n          setFocused.off();\n        }, 300);\n      }}\n      style={[styles.input, hasFocus && styles.focus]}\n    />\n  );\n};\n\nexport const LakeSearchField = ({\n  initialValue,\n  placeholder,\n  onChangeText,\n  debounceDuration = 500,\n  maxWidth: maxWidthProp = 350,\n  renderEnd,\n  children,\n}: Props) => {\n  const [hasFocus, setFocused] = useBoolean(false);\n  const inputRef = useRef<TextInput>(null);\n\n  const [currentValue, setCurrentValue] = useState(initialValue);\n\n  const onChange = useDebounce((value: string) => {\n    onChangeText(value);\n    setCurrentValue(value.trim());\n  }, debounceDuration);\n\n  const clear = useCallback(() => {\n    if (inputRef.current != null) {\n      inputRef.current.clear();\n      inputRef.current.focus();\n      onChangeText(\"\");\n      setCurrentValue(\"\");\n    }\n  }, [onChangeText]);\n\n  const props = {\n    inputRef,\n    placeholder,\n    initialValue,\n    onChange,\n    setFocused,\n    hasFocus,\n    clear,\n    currentValue,\n    renderEnd,\n  };\n\n  const maxWidth = Math.max(maxWidthProp, BREAKPOINT);\n\n  return (\n    <ResponsiveContainer breakpoint={BREAKPOINT} style={[styles.container, { maxWidth }]}>\n      {({ large }) => {\n        const Component = large ? ExpandedSearchField : CollapsibleSearchField;\n\n        return (\n          <>\n            {children}\n            <Component {...props} />\n          </>\n        );\n      }}\n    </ResponsiveContainer>\n  );\n};\n","import { Meta } from \"@storybook/react\";\nimport { useState } from \"react\";\nimport { Box } from \"../src/components/Box\";\nimport { Fill } from \"../src/components/Fill\";\nimport { Icon } from \"../src/components/Icon\";\nimport { LakeSearchField } from \"../src/components/LakeSearchField\";\nimport { LakeText } from \"../src/components/LakeText\";\nimport { Space } from \"../src/components/Space\";\nimport { Tag } from \"../src/components/Tag\";\nimport { Toggle } from \"../src/components/Toggle\";\nimport { noop } from \"../src/utils/function\";\nimport { StoryBlock, StoryPart } from \"./_StoriesComponents\";\n\nexport default {\n  title: \"Forms/SearchField\",\n  component: LakeSearchField,\n} as Meta<typeof LakeSearchField>;\n\nexport const Variations = () => {\n  const [text1, setText1] = useState<string>();\n  const [text2, setText2] = useState<string>();\n\n  return (\n    <StoryBlock title=\"SearchField\">\n      <StoryPart title=\"Default\">\n        <LakeSearchField initialValue=\"\" placeholder=\"Placeholder\" onChangeText={setText1} />\n        <Space height={12} />\n        <LakeText>Debounced value: {text1}</LakeText>\n      </StoryPart>\n\n      <StoryPart title=\"With initialValue\">\n        <Box direction=\"row\">\n          <Icon name=\"add-circle-filled\" size={32} />\n          <Fill minWidth={96} />\n\n          <LakeSearchField\n            initialValue=\"Initial value\"\n            placeholder=\"Placeholder\"\n            onChangeText={setText2}\n          />\n        </Box>\n\n        <Space height={12} />\n        <LakeText>Debounced value: {text2}</LakeText>\n      </StoryPart>\n\n      <StoryPart title=\"With counter\">\n        <LakeSearchField\n          initialValue=\"Initial value\"\n          placeholder=\"Placeholder\"\n          onChangeText={setText2}\n          renderEnd={() => <Tag>44</Tag>}\n        />\n      </StoryPart>\n\n      <StoryPart title=\"With toggle\">\n        <Box direction=\"row\" alignItems=\"center\">\n          <Fill minWidth={8} />\n\n          <LakeSearchField\n            initialValue=\"Initial value\"\n            placeholder=\"Placeholder\"\n            maxWidth={500}\n            onChangeText={setText2}\n          >\n            <Toggle value={true} onLabel=\"Enabled\" offLabel=\"Disabled\" onToggle={noop} />\n            <Space width={8} />\n          </LakeSearchField>\n        </Box>\n      </StoryPart>\n    </StoryBlock>\n  );\n};\n"],"names":["useDebounce","func","duration","timeoutRef","useRef","useCallback","arg","isNotNullish","BREAKPOINT","styles","StyleSheet","colors","spacings","radii","backgroundColor","CollapsibleSearchField","inputRef","placeholder","initialValue","onChange","setFocused","hasFocus","clear","currentValue","renderEnd","View","jsx","LakeButton","TransitionView","animations","ExpandedSearchField","LakeTextInput","jsxs","Fragment","isNotNullishOrEmpty","Pressable","Icon","LakeSearchField","onChangeText","debounceDuration","maxWidthProp","children","useBoolean","setCurrentValue","useState","value","props","maxWidth","ResponsiveContainer","large","Component","SearchField_stories","title","component","Variations","text1","setText1","text2","setText2","StoryBlock","StoryPart","Space","LakeText","Box","Fill","Tag","Toggle","noop"],"mappings":"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"}