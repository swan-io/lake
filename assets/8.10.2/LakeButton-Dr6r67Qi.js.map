{"version":3,"file":"LakeButton-Dr6r67Qi.js","sources":["../../../packages/lake/src/components/LakeButton.tsx"],"sourcesContent":["import { Children, forwardRef, Fragment, memo, ReactNode } from \"react\";\nimport {\n  ActivityIndicator,\n  GestureResponderEvent,\n  HrefAttrs,\n  PressableStateCallbackType,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from \"react-native\";\nimport { match } from \"ts-pattern\";\nimport { commonStyles } from \"../constants/commonStyles\";\nimport {\n  backgroundColor,\n  colors,\n  ColorVariants,\n  invariantColors,\n  radii,\n  Spacings,\n  spacings,\n  texts,\n} from \"../constants/design\";\nimport { isNotNullish, isNullish } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { Icon, IconName } from \"./Icon\";\nimport { LakeText } from \"./LakeText\";\nimport { Pressable } from \"./Pressable\";\nimport { Space } from \"./Space\";\n\nconst styles = StyleSheet.create({\n  base: {\n    alignItems: \"center\",\n    backgroundColor: colors.gray[900],\n    borderRadius: radii[6],\n    flexDirection: \"row\",\n    flexShrink: 0,\n    height: 48,\n    minWidth: 90,\n    justifyContent: \"center\",\n    paddingHorizontal: 20,\n    transitionDuration: \"150ms\",\n    transitionProperty: \"background-color, color\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  iconOnly: {\n    minWidth: 48,\n    width: 48,\n    paddingRight: 0,\n    paddingLeft: 0,\n  },\n  iconSmallOnly: {\n    minWidth: 40,\n    width: 40,\n    paddingRight: 0,\n    paddingLeft: 0,\n  },\n  hiddenView: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\",\n    transitionDuration: \"150ms\",\n    transitionProperty: \"opacity\",\n    opacity: 0,\n  },\n  pressed: {\n    opacity: 0.15,\n    backgroundColor: colors.gray[900],\n  },\n  small: {\n    height: 40,\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n  withIconStart: {\n    paddingRight: 24,\n    paddingLeft: 26,\n  },\n  withIconStartSmall: {\n    paddingRight: 19.5,\n    paddingLeft: 21.5,\n  },\n  withIconEnd: {\n    paddingRight: 20,\n    paddingLeft: 24,\n  },\n  withIconEndSmall: {\n    paddingRight: 20.5,\n    paddingLeft: 21.5,\n  },\n  text: texts.semibold,\n  textSmall: texts.smallSemibold,\n  resetOpacity: {\n    opacity: 1,\n  },\n  loaderContainer: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    transform: \"translateZ(0px)\",\n  },\n  group: {\n    flexDirection: \"row\",\n    alignItems: \"stretch\",\n    paddingVertical: spacings[16],\n  },\n  pill: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    borderWidth: 2,\n    borderColor: backgroundColor.default,\n    backgroundColor: colors.negative[500],\n    position: \"absolute\",\n    top: -3,\n    right: -3,\n  },\n  vertical: {\n    flexDirection: \"column\",\n    height: \"auto\",\n    paddingVertical: spacings[12],\n  },\n  verticalSmall: {\n    paddingVertical: spacings[8],\n  },\n  hidden: {\n    visibility: \"hidden\",\n  },\n});\n\nexport type ButtonProps = {\n  ariaControls?: string;\n  ariaExpanded?: boolean;\n  color?: ColorVariants;\n  disabled?: boolean;\n  direction?: \"column\" | \"row\";\n  loading?: boolean;\n  grow?: boolean;\n  icon?: IconName;\n  iconPosition?: \"start\" | \"end\";\n  mode?: \"primary\" | \"secondary\" | \"tertiary\";\n  onPress?: (event: GestureResponderEvent) => void;\n  size?: \"large\" | \"small\";\n  iconSize?: number;\n  style?: StyleProp<ViewStyle> | ((props: PressableStateCallbackType) => StyleProp<ViewStyle>);\n  forceBackground?: boolean;\n  href?: string;\n  hrefAttrs?: HrefAttrs;\n  pill?: boolean;\n} & (\n  | {\n      ariaLabel: string;\n      children?: never;\n    }\n  | {\n      ariaLabel?: string;\n      children: ReactNode;\n    }\n);\n\nexport const LakeButton = memo(\n  forwardRef<View, ButtonProps>(\n    (\n      {\n        ariaControls,\n        ariaExpanded,\n        ariaLabel,\n        children,\n        color = \"gray\",\n        direction = \"row\",\n        disabled = false,\n        icon,\n        grow = false,\n        iconPosition = \"start\",\n        loading = false,\n        mode = \"primary\",\n        onPress,\n        size = \"large\",\n        iconSize = size === \"small\" ? 18 : 20,\n        style,\n        forceBackground = false,\n        href,\n        hrefAttrs,\n        pill = false,\n      },\n      forwardedRef,\n    ) => {\n      const isPrimary = mode === \"primary\";\n      const isSmall = size === \"small\";\n\n      const vertical = direction === \"column\";\n      const spaceHeight = vertical ? 4 : undefined;\n      const spaceWidth = vertical ? undefined : isSmall ? 8 : 12;\n\n      const hasIcon = isNotNullish(icon);\n      const hasIconStart = hasIcon && iconPosition === \"start\";\n      const hasIconEnd = hasIcon && iconPosition === \"end\";\n      const hasOnlyIcon = hasIcon && isNullish(children);\n\n      return (\n        <Pressable\n          href={href}\n          hrefAttrs={hrefAttrs}\n          role={href != null ? \"link\" : \"button\"}\n          aria-busy={loading}\n          aria-disabled={disabled}\n          aria-controls={ariaControls}\n          aria-expanded={ariaExpanded}\n          aria-label={ariaLabel}\n          disabled={loading || disabled}\n          ref={forwardedRef}\n          onPress={onPress}\n          style={({ hovered, pressed, focused }) => [\n            styles.base,\n            isSmall && styles.small,\n\n            vertical && [styles.vertical, isSmall && styles.verticalSmall],\n\n            hasIconStart && isSmall ? styles.withIconStartSmall : styles.withIconStart,\n            hasIconEnd && (isSmall ? styles.withIconEndSmall : styles.withIconEnd),\n            hasOnlyIcon && (isSmall ? styles.iconSmallOnly : styles.iconOnly),\n\n            disabled && commonStyles.disabled,\n            disabled && forceBackground && styles.resetOpacity,\n            grow && styles.grow,\n\n            match(mode)\n              .with(\"primary\", () => ({\n                backgroundColor:\n                  color === \"warning\"\n                    ? hovered\n                      ? colors[color][600]\n                      : colors[color][500]\n                    : hovered\n                      ? colors[color].secondary\n                      : colors[color].primary,\n              }))\n              .with(\"secondary\", () => ({\n                backgroundColor: pressed\n                  ? colors[color][100]\n                  : hovered\n                    ? colors[color][50]\n                    : forceBackground\n                      ? backgroundColor.accented\n                      : invariantColors.transparent,\n                borderWidth: 1,\n                borderColor:\n                  disabled && forceBackground\n                    ? colors[color][100]\n                    : hovered\n                      ? colors[color][600]\n                      : colors[color][300],\n              }))\n              .with(\"tertiary\", () => ({\n                backgroundColor: pressed\n                  ? colors[color][200]\n                  : hovered\n                    ? colors[color][100]\n                    : invariantColors.transparent,\n              }))\n              .exhaustive(),\n\n            typeof style == \"function\" ? style({ hovered, pressed, focused }) : style,\n          ]}\n        >\n          {({ pressed, hovered }) => {\n            const textColor = isPrimary\n              ? colors[color].contrast\n              : disabled && forceBackground\n                ? colors[color][300]\n                : hovered || pressed\n                  ? colors[color][700]\n                  : colors[color][600];\n\n            return (\n              <>\n                {hasIconStart && (\n                  <>\n                    <Icon\n                      color={textColor}\n                      name={icon}\n                      size={iconSize}\n                      style={loading && styles.hidden}\n                    />\n\n                    {isNotNullish(children) && <Space height={spaceHeight} width={spaceWidth} />}\n                  </>\n                )}\n\n                {typeof children === \"string\" || typeof children === \"number\" ? (\n                  <LakeText\n                    numberOfLines={1}\n                    userSelect=\"none\"\n                    style={[\n                      isSmall ? styles.textSmall : styles.text,\n                      loading && styles.hidden,\n                      { color: textColor },\n                    ]}\n                  >\n                    {children}\n                  </LakeText>\n                ) : (\n                  <Box\n                    alignItems=\"center\"\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    style={[vertical && styles.vertical, loading && styles.hidden]}\n                  >\n                    {children}\n                  </Box>\n                )}\n\n                {hasIconEnd && (\n                  <>\n                    {isNotNullish(children) && <Space height={spaceHeight} width={spaceWidth} />}\n\n                    <Icon\n                      color={textColor}\n                      name={icon}\n                      size={iconSize}\n                      style={loading && styles.hidden}\n                    />\n                  </>\n                )}\n\n                {loading && (\n                  <View style={styles.loaderContainer}>\n                    <ActivityIndicator\n                      color={isPrimary ? colors[color].contrast : colors[color].primary}\n                      size={iconSize}\n                    />\n                  </View>\n                )}\n\n                {isPrimary && <View style={[styles.hiddenView, pressed && styles.pressed]} />}\n                {pill && <View style={styles.pill} />}\n              </>\n            );\n          }}\n        </Pressable>\n      );\n    },\n  ),\n);\n\nLakeButton.displayName = \"Button\";\n\ntype GroupProps = {\n  children: ReactNode;\n  justifyContent?: ViewStyle[\"justifyContent\"];\n  paddingBottom?: 0 | Spacings;\n};\n\nconst ZERO = 0;\n\nexport const LakeButtonGroup = ({\n  children,\n  justifyContent = \"flex-start\",\n  paddingBottom = 16,\n}: GroupProps) => (\n  <View\n    style={[\n      styles.group,\n      { justifyContent, paddingBottom: paddingBottom === 0 ? ZERO : spacings[paddingBottom] },\n    ]}\n  >\n    {Children.toArray(children).map((item, index) => (\n      <Fragment key={index}>\n        {index > 0 ? <Space width={16} /> : null}\n        {item}\n      </Fragment>\n    ))}\n  </View>\n);\n"],"names":["styles","StyleSheet","colors","radii","texts","spacings","backgroundColor","LakeButton","memo","forwardRef","ariaControls","ariaExpanded","ariaLabel","children","color","direction","disabled","icon","grow","iconPosition","loading","mode","onPress","size","iconSize","style","forceBackground","href","hrefAttrs","pill","forwardedRef","isPrimary","isSmall","vertical","spaceHeight","spaceWidth","hasIcon","isNotNullish","hasIconStart","hasIconEnd","hasOnlyIcon","isNullish","jsx","Pressable","hovered","pressed","focused","commonStyles","match","invariantColors","textColor","jsxs","Fragment","Icon","Space","LakeText","Box","View","ActivityIndicator","ZERO","LakeButtonGroup","justifyContent","paddingBottom","Children","item","index"],"mappings":"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"}