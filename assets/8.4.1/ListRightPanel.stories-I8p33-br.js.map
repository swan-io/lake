{"version":3,"file":"ListRightPanel.stories-I8p33-br.js","sources":["../../../packages/lake/src/components/ListRightPanel.tsx"],"sourcesContent":["import { Array, Option } from \"@swan-io/boxed\";\nimport { MutableRefObject, forwardRef } from \"react\";\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\nimport { match } from \"ts-pattern\";\nimport { animations, colors, spacings } from \"../constants/design\";\nimport { usePreviousValue } from \"../hooks/usePreviousValue\";\nimport { noop } from \"../utils/function\";\nimport { Box } from \"./Box\";\nimport { FocusTrapRef } from \"./FocusTrap\";\nimport { LakeButton } from \"./LakeButton\";\nimport { LoadingView } from \"./LoadingView\";\nimport { RightPanel } from \"./RightPanel\";\nimport { Space } from \"./Space\";\nimport { Suspendable } from \"./Suspendable\";\nimport { TransitionView } from \"./TransitionView\";\n\nconst styles = StyleSheet.create({\n  details: {\n    paddingBottom: spacings[24],\n    paddingTop: spacings[12],\n    flexGrow: 1,\n  },\n  detailsContents: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  detailsContainer: {\n    flexGrow: 1,\n  },\n  content: {\n    paddingHorizontal: spacings[24],\n  },\n  contentLarge: {\n    paddingHorizontal: spacings[40],\n  },\n});\n\nexport const ListRightPanelContent = ({\n  children,\n  large,\n  style,\n}: {\n  children: React.ReactNode;\n  large: boolean;\n  style?: StyleProp<ViewStyle>;\n}) => {\n  return <View style={[large ? styles.contentLarge : styles.content, style]}>{children}</View>;\n};\n\ntype Props<T> = {\n  items: T[];\n  keyExtractor: (item: T) => string;\n  activeId: string | null;\n  onActiveIdChange: (id: string) => void;\n  onClose: () => void;\n  render: (item: T, large: boolean) => React.ReactNode;\n  closeLabel: string;\n  previousLabel: string;\n  nextLabel: string;\n};\n\nconst ListRightPanel_ = forwardRef<FocusTrapRef, Props<unknown>>(\n  (\n    {\n      items,\n      keyExtractor,\n      activeId,\n      onActiveIdChange,\n      onClose,\n      render,\n      closeLabel,\n      previousLabel,\n      nextLabel,\n    },\n    ref,\n  ) => {\n    const activeItem = items.find(item => keyExtractor(item) === activeId);\n    // use `Array.getIndexBy` instead of `Array.findIndex` to avoid -1 value\n    const activeItemIndex = Array.findIndex(\n      items,\n      item => keyExtractor(item) === activeId,\n    ).toUndefined();\n\n    const previousId = usePreviousValue(activeId);\n    const previousItem = usePreviousValue(activeItem);\n    const previousIndex = usePreviousValue(activeItemIndex);\n\n    const newDetailDirection =\n      typeof activeItemIndex === \"number\" && typeof previousIndex === \"number\"\n        ? match({ activeItemIndex, previousIndex })\n            .when(\n              ({ activeItemIndex, previousIndex }) => activeItemIndex < previousIndex,\n              () => animations.fadeAndSlideInFromTop,\n            )\n            .when(\n              ({ activeItemIndex, previousIndex }) => activeItemIndex > previousIndex,\n              () => animations.fadeAndSlideInFromBottom,\n            )\n            .otherwise(() => null)\n        : null;\n\n    const previousDetailDirection =\n      typeof activeItemIndex === \"number\" && typeof previousIndex === \"number\"\n        ? match({ activeItemIndex, previousIndex })\n            .when(\n              ({ activeItemIndex, previousIndex }) => activeItemIndex < previousIndex,\n              () => animations.fadeAndSlideInFromBottom,\n            )\n            .when(\n              ({ activeItemIndex, previousIndex }) => activeItemIndex > previousIndex,\n              () => animations.fadeAndSlideInFromTop,\n            )\n            .otherwise(() => null)\n        : null;\n\n    return (\n      <RightPanel ref={ref} visible={activeItem != null} onPressClose={onClose}>\n        {({ large }) => (\n          <View style={styles.details}>\n            <Box\n              direction=\"row\"\n              justifyContent=\"spaceBetween\"\n              style={large ? styles.contentLarge : styles.content}\n            >\n              <LakeButton\n                mode=\"tertiary\"\n                icon=\"lake-close\"\n                ariaLabel={closeLabel}\n                onPress={onClose}\n              />\n\n              <Box direction=\"row\" justifyContent=\"spaceBetween\">\n                <LakeButton\n                  mode=\"tertiary\"\n                  ariaLabel={previousLabel}\n                  icon=\"arrow-left-regular\"\n                  disabled={activeItemIndex === 0}\n                  onPress={() => {\n                    if (typeof activeItemIndex === \"number\") {\n                      Option.fromNullable(items[activeItemIndex - 1]).match({\n                        Some: item => onActiveIdChange(keyExtractor(item)),\n                        None: noop,\n                      });\n                    }\n                  }}\n                />\n\n                <LakeButton\n                  mode=\"tertiary\"\n                  ariaLabel={nextLabel}\n                  icon=\"arrow-right-regular\"\n                  disabled={activeItemIndex === items.length - 1}\n                  onPress={() => {\n                    if (typeof activeItemIndex === \"number\") {\n                      Option.fromNullable(items[activeItemIndex + 1]).match({\n                        Some: item => onActiveIdChange(keyExtractor(item)),\n                        None: noop,\n                      });\n                    }\n                  }}\n                />\n              </Box>\n            </Box>\n\n            <Space height={12} />\n\n            <View style={styles.detailsContainer}>\n              {activeItem != null\n                ? [\n                    <TransitionView\n                      {...newDetailDirection}\n                      key={activeId}\n                      style={styles.detailsContents}\n                    >\n                      {previousItem != null ? (\n                        <Suspendable\n                          fallback={<LoadingView color={colors.current[500]} delay={0} />}\n                        >\n                          {render(activeItem, large)}\n                        </Suspendable>\n                      ) : (\n                        render(activeItem, large)\n                      )}\n                    </TransitionView>,\n\n                    ...(previousItem != null && previousId !== activeId\n                      ? [\n                          <TransitionView\n                            {...previousDetailDirection}\n                            key={previousId}\n                            style={styles.detailsContents}\n                          >\n                            {null}\n                          </TransitionView>,\n                        ]\n                      : []),\n                  ]\n                : null}\n            </View>\n          </View>\n        )}\n      </RightPanel>\n    );\n  },\n);\n\n// @ts-expect-error this is the only way I found to use generic props with forwardRef\nexport const ListRightPanel: <T>(\n  props: Props<T> & { ref?: MutableRefObject<FocusTrapRef | null> },\n) => React.ReactElement = ListRightPanel_;\n"],"names":["styles","StyleSheet","spacings","ListRightPanel_","forwardRef","items","keyExtractor","activeId","onActiveIdChange","onClose","render","closeLabel","previousLabel","nextLabel","ref","activeItem","item","activeItemIndex","Array","previousId","usePreviousValue","previousItem","previousIndex","newDetailDirection","match","animations","previousDetailDirection","RightPanel","large","jsxs","View","Box","jsx","LakeButton","Option","noop","Space","createElement","TransitionView","Suspendable","LoadingView","colors","ListRightPanel"],"mappings":"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"}