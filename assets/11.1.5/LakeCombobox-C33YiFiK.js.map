{"version":3,"file":"LakeCombobox-C33YiFiK.js","sources":["../../../packages/lake/src/components/LakeCombobox.tsx"],"sourcesContent":["import { AsyncData, Result } from \"@swan-io/boxed\";\nimport {\n  ForwardedRef,\n  ReactNode,\n  Ref,\n  RefObject,\n  forwardRef,\n  useCallback,\n  useId,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  NativeSyntheticEvent,\n  Pressable,\n  StyleSheet,\n  Text,\n  TextInput,\n  TextInputKeyPressEventData,\n  View,\n} from \"react-native\";\nimport { backgroundColor, colors, spacings } from \"../constants/design\";\nimport { useMergeRefs } from \"../hooks/useMergeRefs\";\nimport { getFocusableElements } from \"../utils/a11y\";\nimport { isNotEmpty } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { FlatList } from \"./FlatList\";\nimport { Icon, IconName } from \"./Icon\";\nimport { LakeText } from \"./LakeText\";\nimport { LakeTextInput, LakeTextInputProps } from \"./LakeTextInput\";\nimport { LoadingView } from \"./LoadingView\";\nimport { Popover } from \"./Popover\";\nimport { Separator } from \"./Separator\";\nimport { Space } from \"./Space\";\n\nconst DEFAULT_ELEMENT_HEIGHT = 64;\nconst DEFAULT_NB_SUGGESTION_DISPLAYED = 3.5;\n\nconst styles = StyleSheet.create({\n  list: {\n    marginVertical: spacings[8],\n  },\n  flatList: {\n    scrollBehavior: \"smooth\",\n  },\n  item: {\n    flexShrink: 1,\n    flexGrow: 1,\n    justifyContent: \"center\",\n    paddingHorizontal: spacings[24],\n    paddingVertical: 0,\n    transitionProperty: \"background-color\",\n    transitionDuration: \"200ms\",\n    outlineStyle: \"none\",\n    justifyContents: \"center\",\n  },\n  hoveredItem: {\n    backgroundColor: colors.gray[0],\n  },\n  focusedItem: {\n    backgroundColor: colors.gray[0],\n  },\n  pressedItem: {\n    backgroundColor: colors.gray[100],\n  },\n  itemText: {\n    userSelect: \"none\",\n  },\n  loader: {\n    padding: spacings[24],\n  },\n  listContainer: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  loaderAdditional: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  loaderAdditionalUnderlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: backgroundColor.accented,\n    opacity: 0.8,\n  },\n  emptyList: {\n    height: 136,\n  },\n  emptyListText: {\n    color: colors.gray.primary,\n  },\n  input: {\n    width: 1,\n    flexGrow: 1,\n  },\n});\n\nexport type LakeComboboxProps<I> = {\n  inputRef?: RefObject<unknown>;\n  value: string;\n  items: AsyncData<Result<I[], unknown>>;\n  itemHeight?: number;\n  nbItemsDisplayed?: number;\n  ListFooterComponent?: ReactNode;\n  onChange?: LakeTextInputProps[\"onChange\"];\n  onValueChange: (value: string) => void;\n  onSelectItem: (value: I) => void | Promise<unknown>;\n  renderItem: (item: I) => ReactNode | null;\n  keyExtractor: (item: I) => string;\n  icon?: IconName;\n  placeholder?: string;\n  disabled?: boolean;\n  emptyResultText: string;\n  error?: string;\n  hideErrors?: boolean;\n  id?: string;\n  readOnly?: boolean;\n};\n\nexport type LakeComboboxRef = { close: () => void; open: () => void };\n\nconst LakeComboboxWithRef = <I,>(\n  {\n    inputRef,\n    value,\n    items,\n    itemHeight = DEFAULT_ELEMENT_HEIGHT,\n    nbItemsDisplayed = DEFAULT_NB_SUGGESTION_DISPLAYED,\n    ListFooterComponent,\n    onChange,\n    onValueChange,\n    onSelectItem,\n    renderItem,\n    keyExtractor,\n    icon,\n    placeholder,\n    disabled = false,\n    emptyResultText,\n    readOnly,\n    id,\n    error,\n    hideErrors,\n  }: LakeComboboxProps<I>,\n  forwardedRef: ForwardedRef<LakeComboboxRef>,\n) => {\n  const ref = useRef<TextInput>(null);\n\n  const inputTextRef = useMergeRefs(ref, inputRef as RefObject<unknown>);\n\n  const listContainerRef = useRef<View>(null);\n  const blurTimeoutId = useRef<number | undefined>(undefined);\n  const [isFetchingAdditionalInfo, setIsFetchingAdditionalInfo] = useState(false);\n\n  // The Combobox has two distinct closed states: \"closed\" and \"dismissed\"\n  // When it's \"closed\", it will open on input focus or text change\n  // When it's \"dismissed\", it will NOT open on input focus, but will on text change\n  const [state, setState] = useState<\"opened\" | \"closed\" | \"dismissed\">(\"closed\");\n  const open = useCallback(() => setState(\"opened\"), []);\n  const close = useCallback(() => setState(\"closed\"), []);\n  const dismiss = useCallback(() => setState(\"dismissed\"), []);\n\n  useImperativeHandle(forwardedRef, () => {\n    return {\n      open,\n      close,\n    };\n  });\n\n  const suggestionsId = useId();\n\n  const handleKeyPress = useCallback((event: NativeSyntheticEvent<TextInputKeyPressEventData>) => {\n    if (event.nativeEvent.key === \"ArrowDown\") {\n      const listElement = listContainerRef.current;\n\n      if (listElement != null) {\n        const element = listElement as unknown as Element;\n        const focusableElements = getFocusableElements(element, false);\n        focusableElements[0]?.focus();\n        event.preventDefault();\n      }\n    }\n  }, []);\n\n  const handleListItemKeyPress = useCallback(\n    (event: NativeSyntheticEvent<TextInputKeyPressEventData>) => {\n      if (event.nativeEvent.key === \"ArrowDown\" || event.nativeEvent.key === \"ArrowUp\") {\n        const listElement = listContainerRef.current;\n\n        if (listElement != null) {\n          const element = listElement as unknown as Element;\n          const target = event.currentTarget as unknown as HTMLElement;\n          const focusableElements = getFocusableElements(element, false);\n          const index = focusableElements.indexOf(target);\n          const direction = event.nativeEvent.key === \"ArrowDown\" ? 1 : -1;\n\n          if (index === -1) {\n            return;\n          }\n\n          const nextIndex = index + direction;\n          event.preventDefault();\n\n          if (nextIndex === -1) {\n            ref.current?.focus();\n          } else {\n            focusableElements[nextIndex === focusableElements.length ? 0 : nextIndex]?.focus();\n          }\n        }\n      }\n    },\n    [],\n  );\n\n  const handleChangeText = useCallback(\n    (value: string) => {\n      onValueChange(value);\n      setState(isNotEmpty(value) ? \"opened\" : \"closed\");\n    },\n    [onValueChange],\n  );\n\n  const handleFocus = useCallback(() => {\n    if (isNotEmpty(value)) {\n      window.clearTimeout(blurTimeoutId.current);\n\n      blurTimeoutId.current = window.setTimeout(() => {\n        setState(prevState => (prevState === \"closed\" ? \"opened\" : prevState));\n      }, 100);\n    }\n  }, [value]);\n\n  const handleBlur = useCallback(() => {\n    window.clearTimeout(blurTimeoutId.current);\n\n    blurTimeoutId.current = window.setTimeout(() => {\n      setState(\"dismissed\");\n    }, 100);\n  }, []);\n\n  return (\n    <View>\n      <LakeTextInput\n        containerRef={inputTextRef as Ref<View>}\n        style={styles.input}\n        ariaExpanded={state === \"opened\"}\n        ariaControls={state === \"opened\" ? suggestionsId : \"\"}\n        enterKeyHint=\"search\"\n        icon={icon}\n        role=\"combobox\"\n        placeholder={placeholder}\n        value={value}\n        disabled={disabled}\n        error={error}\n        hideErrors={hideErrors}\n        onChangeText={handleChangeText}\n        onChange={onChange}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyPress={handleKeyPress}\n        id={id}\n        readOnly={readOnly}\n      />\n\n      <Popover\n        id={suggestionsId}\n        role=\"listbox\"\n        matchReferenceWidth={true}\n        onEscapeKey={dismiss}\n        referenceRef={ref}\n        autoFocus={false}\n        returnFocus={true}\n        visible={state === \"opened\" && !items.isNotAsked()}\n        underlay={false}\n        forcedMode=\"Dropdown\"\n      >\n        <View style={[styles.list, { maxHeight: itemHeight * nbItemsDisplayed }]}>\n          {items.match({\n            NotAsked: () => null,\n            Loading: () => <LoadingView style={styles.loader} />,\n            Done: items =>\n              items.match({\n                Error: _ => (\n                  <Icon name=\"error-circle-regular\" size={22} color={colors.negative[500]} />\n                ),\n                Ok: items => (\n                  <View ref={listContainerRef} style={styles.listContainer}>\n                    {items.length === 0 ? (\n                      <Box justifyContent=\"center\" alignItems=\"center\" style={styles.emptyList}>\n                        <Icon\n                          name=\"clipboard-search-regular\"\n                          size={24}\n                          color={colors.gray.primary}\n                        />\n\n                        <Space height={8} />\n                        <Text style={styles.emptyListText}>{emptyResultText}</Text>\n                      </Box>\n                    ) : (\n                      <FlatList\n                        keyExtractor={keyExtractor}\n                        role=\"list\"\n                        data={items}\n                        style={styles.flatList}\n                        ItemSeparatorComponent={<Separator />}\n                        renderItem={({ item }) => {\n                          const rendered = renderItem(item);\n\n                          return (\n                            <Pressable\n                              onFocus={handleFocus}\n                              onBlur={handleBlur}\n                              role=\"listitem\"\n                              onKeyDown={handleListItemKeyPress}\n                              style={({ hovered, pressed, focused }) => [\n                                styles.item,\n                                hovered && styles.hoveredItem,\n                                focused && styles.focusedItem,\n                                pressed && styles.pressedItem,\n                                { height: itemHeight },\n                              ]}\n                              onPress={() => {\n                                window.clearTimeout(blurTimeoutId.current);\n                                setIsFetchingAdditionalInfo(true);\n\n                                void Promise.resolve(onSelectItem(item)).finally(() => {\n                                  setIsFetchingAdditionalInfo(false);\n                                  dismiss();\n                                });\n                              }}\n                            >\n                              {typeof rendered === \"string\" || typeof rendered === \"number\" ? (\n                                <LakeText numberOfLines={1} style={styles.itemText}>\n                                  {rendered}\n                                </LakeText>\n                              ) : (\n                                rendered\n                              )}\n                            </Pressable>\n                          );\n                        }}\n                      />\n                    )}\n\n                    {ListFooterComponent}\n\n                    {isFetchingAdditionalInfo ? (\n                      <View style={styles.loaderAdditional}>\n                        <View style={styles.loaderAdditionalUnderlay} />\n                        <LoadingView />\n                      </View>\n                    ) : null}\n                  </View>\n                ),\n              }),\n          })}\n        </View>\n      </Popover>\n    </View>\n  );\n};\n\nexport const LakeCombobox = forwardRef(LakeComboboxWithRef) as <I>(\n  props: LakeComboboxProps<I> & { ref?: RefObject<LakeComboboxRef> },\n) => ReturnType<typeof LakeComboboxWithRef>;\n"],"names":["DEFAULT_ELEMENT_HEIGHT","DEFAULT_NB_SUGGESTION_DISPLAYED","styles","StyleSheet","spacings","colors","backgroundColor","LakeComboboxWithRef","inputRef","value","items","itemHeight","nbItemsDisplayed","ListFooterComponent","onChange","onValueChange","onSelectItem","renderItem","keyExtractor","icon","placeholder","disabled","emptyResultText","readOnly","id","error","hideErrors","forwardedRef","ref","useRef","inputTextRef","useMergeRefs","listContainerRef","blurTimeoutId","isFetchingAdditionalInfo","setIsFetchingAdditionalInfo","useState","state","setState","open","useCallback","close","dismiss","useImperativeHandle","suggestionsId","useId","handleKeyPress","event","listElement","_a","getFocusableElements","handleListItemKeyPress","element","target","focusableElements","index","direction","nextIndex","_b","handleChangeText","isNotEmpty","handleFocus","prevState","handleBlur","View","jsx","LakeTextInput","Popover","LoadingView","_","Icon","jsxs","Box","Space","Text","FlatList","Separator","item","rendered","Pressable","hovered","pressed","focused","LakeText","LakeCombobox","forwardRef"],"mappings":"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"}