{"version":3,"file":"index-eadc0664.js","sources":["../../../node_modules/react-native-web/dist/vendor/react-native/deepDiffer/index.js","../../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelperLoose.js","../../../node_modules/react-native-web/dist/exports/RefreshControl/index.js","../../../node_modules/react-native-web/dist/exports/InteractionManager/TaskQueue.js","../../../node_modules/react-native-web/dist/vendor/react-native/vendor/emitter/EventEmitter.js","../../../node_modules/react-native-web/dist/modules/requestIdleCallback/index.js","../../../node_modules/react-native-web/dist/exports/InteractionManager/index.js","../../../node_modules/react-native-web/dist/vendor/react-native/Batchinator/index.js","../../../node_modules/react-native-web/dist/vendor/react-native/Utilities/clamp.js","../../../node_modules/react-native-web/dist/vendor/react-native/infoLog/index.js","../../../node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/CellRenderMask.js","../../../node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/ChildListCollection.js","../../../node_modules/react-native-web/dist/vendor/react-native/FillRateHelper/index.js","../../../node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/StateSafePureComponent.js","../../../node_modules/react-native-web/dist/vendor/react-native/ViewabilityHelper/index.js","../../../node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/VirtualizedListContext.js","../../../node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/VirtualizedListCellRenderer.js","../../../node_modules/react-native-web/dist/vendor/react-native/VirtualizeUtils/index.js","../../../node_modules/nullthrows/nullthrows.js","../../../node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/index.js","../../../node_modules/memoize-one/dist/memoize-one.esm.js","../../../node_modules/react-native-web/dist/vendor/react-native/FlatList/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n\n'use strict';\n\n/*\n * @returns {bool} true if different, false if equal\n */\nvar deepDiffer = function deepDiffer(one, two, maxDepth) {\n  if (maxDepth === void 0) {\n    maxDepth = -1;\n  }\n  if (maxDepth === 0) {\n    return true;\n  }\n  if (one === two) {\n    // Short circuit on identical object references instead of traversing them.\n    return false;\n  }\n  if (typeof one === 'function' && typeof two === 'function') {\n    // We consider all functions equal\n    return false;\n  }\n  if (typeof one !== 'object' || one === null) {\n    // Primitives can be directly compared\n    return one !== two;\n  }\n  if (typeof two !== 'object' || two === null) {\n    // We know they are different because the previous case would have triggered\n    // otherwise.\n    return true;\n  }\n  if (one.constructor !== two.constructor) {\n    return true;\n  }\n  if (Array.isArray(one)) {\n    // We know two is also an array because the constructors are equal\n    var len = one.length;\n    if (two.length !== len) {\n      return true;\n    }\n    for (var ii = 0; ii < len; ii++) {\n      if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n        return true;\n      }\n    }\n  } else {\n    for (var key in one) {\n      if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n        return true;\n      }\n    }\n    for (var twoKey in two) {\n      // The only case we haven't checked yet is keys that are in two but aren't\n      // in one, which means they are different.\n      if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nexport default deepDiffer;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n  if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"colors\", \"enabled\", \"onRefresh\", \"progressBackgroundColor\", \"progressViewOffset\", \"refreshing\", \"size\", \"tintColor\", \"title\", \"titleColor\"];\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport View from '../View';\nimport React from 'react';\nfunction RefreshControl(props) {\n  var colors = props.colors,\n    enabled = props.enabled,\n    onRefresh = props.onRefresh,\n    progressBackgroundColor = props.progressBackgroundColor,\n    progressViewOffset = props.progressViewOffset,\n    refreshing = props.refreshing,\n    size = props.size,\n    tintColor = props.tintColor,\n    title = props.title,\n    titleColor = props.titleColor,\n    rest = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/React.createElement(View, rest);\n}\nexport default RefreshControl;","import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport invariant from 'fbjs/lib/invariant';\nclass TaskQueue {\n  constructor(_ref) {\n    var onMoreTasks = _ref.onMoreTasks;\n    this._onMoreTasks = onMoreTasks;\n    this._queueStack = [{\n      tasks: [],\n      popable: true\n    }];\n  }\n  enqueue(task) {\n    this._getCurrentQueue().push(task);\n  }\n  enqueueTasks(tasks) {\n    tasks.forEach(task => this.enqueue(task));\n  }\n  cancelTasks(tasksToCancel) {\n    this._queueStack = this._queueStack.map(queue => _objectSpread(_objectSpread({}, queue), {}, {\n      tasks: queue.tasks.filter(task => tasksToCancel.indexOf(task) === -1)\n    })).filter((queue, idx) => queue.tasks.length > 0 || idx === 0);\n  }\n  hasTasksToProcess() {\n    return this._getCurrentQueue().length > 0;\n  }\n\n  /**\n   * Executes the next task in the queue.\n   */\n  processNext() {\n    var queue = this._getCurrentQueue();\n    if (queue.length) {\n      var task = queue.shift();\n      try {\n        if (typeof task === 'object' && task.gen) {\n          this._genPromise(task);\n        } else if (typeof task === 'object' && task.run) {\n          task.run();\n        } else {\n          invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\\n' + JSON.stringify(task, null, 2));\n          task();\n        }\n      } catch (e) {\n        e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\n        throw e;\n      }\n    }\n  }\n  _getCurrentQueue() {\n    var stackIdx = this._queueStack.length - 1;\n    var queue = this._queueStack[stackIdx];\n    if (queue.popable && queue.tasks.length === 0 && stackIdx > 0) {\n      this._queueStack.pop();\n      return this._getCurrentQueue();\n    } else {\n      return queue.tasks;\n    }\n  }\n  _genPromise(task) {\n    var length = this._queueStack.push({\n      tasks: [],\n      popable: false\n    });\n    var stackIdx = length - 1;\n    var stackItem = this._queueStack[stackIdx];\n    task.gen().then(() => {\n      stackItem.popable = true;\n      this.hasTasksToProcess() && this._onMoreTasks();\n    }).catch(ex => {\n      setTimeout(() => {\n        ex.message = \"TaskQueue: Error resolving Promise in task \" + task.name + \": \" + ex.message;\n        throw ex;\n      }, 0);\n    });\n  }\n}\nexport default TaskQueue;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n/**\n * EventEmitter manages listeners and publishes events to them.\n *\n * EventEmitter accepts a single type parameter that defines the valid events\n * and associated listener argument(s).\n *\n * @example\n *\n *   const emitter = new EventEmitter<{\n *     success: [number, string],\n *     error: [Error],\n *   }>();\n *\n *   emitter.on('success', (statusCode, responseText) => {...});\n *   emitter.emit('success', 200, '...');\n *\n *   emitter.on('error', error => {...});\n *   emitter.emit('error', new Error('Resource not found'));\n *\n */\nexport default class EventEmitter {\n  constructor() {\n    this._registry = {};\n  }\n  /**\n   * Registers a listener that is called when the supplied event is emitted.\n   * Returns a subscription that has a `remove` method to undo registration.\n   */\n  addListener(eventType, listener, context) {\n    var registrations = allocate(this._registry, eventType);\n    var registration = {\n      context,\n      listener,\n      remove() {\n        registrations.delete(registration);\n      }\n    };\n    registrations.add(registration);\n    return registration;\n  }\n\n  /**\n   * Emits the supplied event. Additional arguments supplied to `emit` will be\n   * passed through to each of the registered listeners.\n   *\n   * If a listener modifies the listeners registered for the same event, those\n   * changes will not be reflected in the current invocation of `emit`.\n   */\n  emit(eventType) {\n    var registrations = this._registry[eventType];\n    if (registrations != null) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      for (var _i = 0, _arr = [...registrations]; _i < _arr.length; _i++) {\n        var registration = _arr[_i];\n        registration.listener.apply(registration.context, args);\n      }\n    }\n  }\n\n  /**\n   * Removes all registered listeners.\n   */\n  removeAllListeners(eventType) {\n    if (eventType == null) {\n      this._registry = {};\n    } else {\n      delete this._registry[eventType];\n    }\n  }\n\n  /**\n   * Returns the number of registered listeners for the supplied event.\n   */\n  listenerCount(eventType) {\n    var registrations = this._registry[eventType];\n    return registrations == null ? 0 : registrations.size;\n  }\n}\nfunction allocate(registry, eventType) {\n  var registrations = registry[eventType];\n  if (registrations == null) {\n    registrations = new Set();\n    registry[eventType] = registrations;\n  }\n  return registrations;\n}","/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport canUseDOM from '../canUseDom';\nvar _requestIdleCallback = function _requestIdleCallback(cb, options) {\n  return setTimeout(() => {\n    var start = Date.now();\n    cb({\n      didTimeout: false,\n      timeRemaining() {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n};\nvar _cancelIdleCallback = function _cancelIdleCallback(id) {\n  clearTimeout(id);\n};\nvar isSupported = canUseDOM && typeof window.requestIdleCallback !== 'undefined';\nvar requestIdleCallback = isSupported ? window.requestIdleCallback : _requestIdleCallback;\nvar cancelIdleCallback = isSupported ? window.cancelIdleCallback : _cancelIdleCallback;\nexport default requestIdleCallback;\nexport { cancelIdleCallback };","/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport invariant from 'fbjs/lib/invariant';\nimport TaskQueue from './TaskQueue';\nimport EventEmitter from '../../vendor/react-native/vendor/emitter/EventEmitter';\nimport requestIdleCallback from '../../modules/requestIdleCallback';\nvar _emitter = new EventEmitter();\nvar InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete'\n  },\n  /**\n   * Schedule a function to run after all interactions have completed.\n   */\n  runAfterInteractions(task) {\n    var tasks = [];\n    var promise = new Promise(resolve => {\n      _scheduleUpdate();\n      if (task) {\n        tasks.push(task);\n      }\n      tasks.push({\n        run: resolve,\n        name: 'resolve ' + (task && task.name || '?')\n      });\n      _taskQueue.enqueueTasks(tasks);\n    });\n    return {\n      then: promise.then.bind(promise),\n      done: promise.then.bind(promise),\n      cancel: () => {\n        _taskQueue.cancelTasks(tasks);\n      }\n    };\n  },\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle() {\n    _scheduleUpdate();\n    var handle = ++_inc;\n    _addInteractionSet.add(handle);\n    return handle;\n  },\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle(handle) {\n    invariant(!!handle, 'Must provide a handle to clear.');\n    _scheduleUpdate();\n    _addInteractionSet.delete(handle);\n    _deleteInteractionSet.add(handle);\n  },\n  addListener: _emitter.addListener.bind(_emitter),\n  /**\n   *\n   * @param deadline\n   */\n  setDeadline(deadline) {\n    _deadline = deadline;\n  }\n};\nvar _interactionSet = new Set();\nvar _addInteractionSet = new Set();\nvar _deleteInteractionSet = new Set();\nvar _taskQueue = new TaskQueue({\n  onMoreTasks: _scheduleUpdate\n});\nvar _nextUpdateHandle = 0;\nvar _inc = 0;\nvar _deadline = -1;\n\n/**\n * Schedule an asynchronous update to the interaction state.\n */\nfunction _scheduleUpdate() {\n  if (!_nextUpdateHandle) {\n    if (_deadline > 0) {\n      _nextUpdateHandle = setTimeout(_processUpdate);\n    } else {\n      _nextUpdateHandle = requestIdleCallback(_processUpdate);\n    }\n  }\n}\n\n/**\n * Notify listeners, process queue, etc\n */\nfunction _processUpdate() {\n  _nextUpdateHandle = 0;\n  var interactionCount = _interactionSet.size;\n  _addInteractionSet.forEach(handle => _interactionSet.add(handle));\n  _deleteInteractionSet.forEach(handle => _interactionSet.delete(handle));\n  var nextInteractionCount = _interactionSet.size;\n  if (interactionCount !== 0 && nextInteractionCount === 0) {\n    _emitter.emit(InteractionManager.Events.interactionComplete);\n  } else if (interactionCount === 0 && nextInteractionCount !== 0) {\n    _emitter.emit(InteractionManager.Events.interactionStart);\n  }\n  if (nextInteractionCount === 0) {\n    // It seems that we can't know the running time of the current event loop,\n    // we can only calculate the running time of the current task queue.\n    var begin = Date.now();\n    while (_taskQueue.hasTasksToProcess()) {\n      _taskQueue.processNext();\n      if (_deadline > 0 && Date.now() - begin >= _deadline) {\n        _scheduleUpdate();\n        break;\n      }\n    }\n  }\n  _addInteractionSet.clear();\n  _deleteInteractionSet.clear();\n}\nexport default InteractionManager;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n\n'use strict';\n\nimport InteractionManager from '../../../exports/InteractionManager';\n\n/**\n * A simple class for batching up invocations of a low-pri callback. A timeout is set to run the\n * callback once after a delay, no matter how many times it's scheduled. Once the delay is reached,\n * InteractionManager.runAfterInteractions is used to invoke the callback after any hi-pri\n * interactions are done running.\n *\n * Make sure to cleanup with dispose().  Example:\n *\n *   class Widget extends React.Component {\n *     _batchedSave: new Batchinator(() => this._saveState, 1000);\n *     _saveSate() {\n *       // save this.state to disk\n *     }\n *     componentDidUpdate() {\n *       this._batchedSave.schedule();\n *     }\n *     componentWillUnmount() {\n *       this._batchedSave.dispose();\n *     }\n *     ...\n *   }\n */\nclass Batchinator {\n  constructor(callback, delayMS) {\n    this._delay = delayMS;\n    this._callback = callback;\n  }\n  /*\n   * Cleanup any pending tasks.\n   *\n   * By default, if there is a pending task the callback is run immediately. Set the option abort to\n   * true to not call the callback if it was pending.\n   */\n  dispose(options) {\n    if (options === void 0) {\n      options = {\n        abort: false\n      };\n    }\n    if (this._taskHandle) {\n      this._taskHandle.cancel();\n      if (!options.abort) {\n        this._callback();\n      }\n      this._taskHandle = null;\n    }\n  }\n  schedule() {\n    if (this._taskHandle) {\n      return;\n    }\n    var timeoutHandle = setTimeout(() => {\n      this._taskHandle = InteractionManager.runAfterInteractions(() => {\n        // Note that we clear the handle before invoking the callback so that if the callback calls\n        // schedule again, it will actually schedule another task.\n        this._taskHandle = null;\n        this._callback();\n      });\n    }, this._delay);\n    this._taskHandle = {\n      cancel: () => clearTimeout(timeoutHandle)\n    };\n  }\n}\nexport default Batchinator;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n\n'use strict';\n\nfunction clamp(min, value, max) {\n  if (value < min) {\n    return min;\n  }\n  if (value > max) {\n    return max;\n  }\n  return value;\n}\nmodule.exports = clamp;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n */\n\n'use strict';\n\n/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\nfunction infoLog() {\n  return console.log(...arguments);\n}\nexport default infoLog;","import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport invariant from 'fbjs/lib/invariant';\nexport class CellRenderMask {\n  constructor(numCells) {\n    invariant(numCells >= 0, 'CellRenderMask must contain a non-negative number os cells');\n    this._numCells = numCells;\n    if (numCells === 0) {\n      this._regions = [];\n    } else {\n      this._regions = [{\n        first: 0,\n        last: numCells - 1,\n        isSpacer: true\n      }];\n    }\n  }\n  enumerateRegions() {\n    return this._regions;\n  }\n  addCells(cells) {\n    invariant(cells.first >= 0 && cells.first < this._numCells && cells.last >= -1 && cells.last < this._numCells && cells.last >= cells.first - 1, 'CellRenderMask.addCells called with invalid cell range');\n\n    // VirtualizedList uses inclusive ranges, where zero-count states are\n    // possible. E.g. [0, -1] for no cells, starting at 0.\n    if (cells.last < cells.first) {\n      return;\n    }\n    var _this$_findRegion = this._findRegion(cells.first),\n      firstIntersect = _this$_findRegion[0],\n      firstIntersectIdx = _this$_findRegion[1];\n    var _this$_findRegion2 = this._findRegion(cells.last),\n      lastIntersect = _this$_findRegion2[0],\n      lastIntersectIdx = _this$_findRegion2[1];\n\n    // Fast-path if the cells to add are already all present in the mask. We\n    // will otherwise need to do some mutation.\n    if (firstIntersectIdx === lastIntersectIdx && !firstIntersect.isSpacer) {\n      return;\n    }\n\n    // We need to replace the existing covered regions with 1-3 new regions\n    // depending whether we need to split spacers out of overlapping regions.\n    var newLeadRegion = [];\n    var newTailRegion = [];\n    var newMainRegion = _objectSpread(_objectSpread({}, cells), {}, {\n      isSpacer: false\n    });\n    if (firstIntersect.first < newMainRegion.first) {\n      if (firstIntersect.isSpacer) {\n        newLeadRegion.push({\n          first: firstIntersect.first,\n          last: newMainRegion.first - 1,\n          isSpacer: true\n        });\n      } else {\n        newMainRegion.first = firstIntersect.first;\n      }\n    }\n    if (lastIntersect.last > newMainRegion.last) {\n      if (lastIntersect.isSpacer) {\n        newTailRegion.push({\n          first: newMainRegion.last + 1,\n          last: lastIntersect.last,\n          isSpacer: true\n        });\n      } else {\n        newMainRegion.last = lastIntersect.last;\n      }\n    }\n    var replacementRegions = [...newLeadRegion, newMainRegion, ...newTailRegion];\n    var numRegionsToDelete = lastIntersectIdx - firstIntersectIdx + 1;\n    this._regions.splice(firstIntersectIdx, numRegionsToDelete, ...replacementRegions);\n  }\n  numCells() {\n    return this._numCells;\n  }\n  equals(other) {\n    return this._numCells === other._numCells && this._regions.length === other._regions.length && this._regions.every((region, i) => region.first === other._regions[i].first && region.last === other._regions[i].last && region.isSpacer === other._regions[i].isSpacer);\n  }\n  _findRegion(cellIdx) {\n    var firstIdx = 0;\n    var lastIdx = this._regions.length - 1;\n    while (firstIdx <= lastIdx) {\n      var middleIdx = Math.floor((firstIdx + lastIdx) / 2);\n      var middleRegion = this._regions[middleIdx];\n      if (cellIdx >= middleRegion.first && cellIdx <= middleRegion.last) {\n        return [middleRegion, middleIdx];\n      } else if (cellIdx < middleRegion.first) {\n        lastIdx = middleIdx - 1;\n      } else if (cellIdx > middleRegion.last) {\n        firstIdx = middleIdx + 1;\n      }\n    }\n    invariant(false, \"A region was not found containing cellIdx \" + cellIdx);\n  }\n}","import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport invariant from 'fbjs/lib/invariant';\nexport default class ChildListCollection {\n  constructor() {\n    this._cellKeyToChildren = new Map();\n    this._childrenToCellKey = new Map();\n  }\n  add(list, cellKey) {\n    var _this$_cellKeyToChild;\n    invariant(!this._childrenToCellKey.has(list), 'Trying to add already present child list');\n    var cellLists = (_this$_cellKeyToChild = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild !== void 0 ? _this$_cellKeyToChild : new Set();\n    cellLists.add(list);\n    this._cellKeyToChildren.set(cellKey, cellLists);\n    this._childrenToCellKey.set(list, cellKey);\n  }\n  remove(list) {\n    var cellKey = this._childrenToCellKey.get(list);\n    invariant(cellKey != null, 'Trying to remove non-present child list');\n    this._childrenToCellKey.delete(list);\n    var cellLists = this._cellKeyToChildren.get(cellKey);\n    invariant(cellLists, '_cellKeyToChildren should contain cellKey');\n    cellLists.delete(list);\n    if (cellLists.size === 0) {\n      this._cellKeyToChildren.delete(cellKey);\n    }\n  }\n  forEach(fn) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this._cellKeyToChildren.values()), _step; !(_step = _iterator()).done;) {\n      var listSet = _step.value;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(listSet), _step2; !(_step2 = _iterator2()).done;) {\n        var list = _step2.value;\n        fn(list);\n      }\n    }\n  }\n  forEachInCell(cellKey, fn) {\n    var _this$_cellKeyToChild2;\n    var listSet = (_this$_cellKeyToChild2 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild2 !== void 0 ? _this$_cellKeyToChild2 : [];\n    for (var _iterator3 = _createForOfIteratorHelperLoose(listSet), _step3; !(_step3 = _iterator3()).done;) {\n      var list = _step3.value;\n      fn(list);\n    }\n  }\n  anyInCell(cellKey, fn) {\n    var _this$_cellKeyToChild3;\n    var listSet = (_this$_cellKeyToChild3 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild3 !== void 0 ? _this$_cellKeyToChild3 : [];\n    for (var _iterator4 = _createForOfIteratorHelperLoose(listSet), _step4; !(_step4 = _iterator4()).done;) {\n      var list = _step4.value;\n      if (fn(list)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  size() {\n    return this._childrenToCellKey.size;\n  }\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nclass Info {\n  constructor() {\n    this.any_blank_count = 0;\n    this.any_blank_ms = 0;\n    this.any_blank_speed_sum = 0;\n    this.mostly_blank_count = 0;\n    this.mostly_blank_ms = 0;\n    this.pixels_blank = 0;\n    this.pixels_sampled = 0;\n    this.pixels_scrolled = 0;\n    this.total_time_spent = 0;\n    this.sample_count = 0;\n  }\n}\nvar DEBUG = false;\nvar _listeners = [];\nvar _minSampleCount = 10;\nvar _sampleRate = DEBUG ? 1 : null;\n\n/**\n * A helper class for detecting when the maximem fill rate of `VirtualizedList` is exceeded.\n * By default the sampling rate is set to zero and this will do nothing. If you want to collect\n * samples (e.g. to log them), make sure to call `FillRateHelper.setSampleRate(0.0-1.0)`.\n *\n * Listeners and sample rate are global for all `VirtualizedList`s - typical usage will combine with\n * `SceneTracker.getActiveScene` to determine the context of the events.\n */\nclass FillRateHelper {\n  static addListener(callback) {\n    if (_sampleRate === null) {\n      console.warn('Call `FillRateHelper.setSampleRate` before `addListener`.');\n    }\n    _listeners.push(callback);\n    return {\n      remove: () => {\n        _listeners = _listeners.filter(listener => callback !== listener);\n      }\n    };\n  }\n  static setSampleRate(sampleRate) {\n    _sampleRate = sampleRate;\n  }\n  static setMinSampleCount(minSampleCount) {\n    _minSampleCount = minSampleCount;\n  }\n  constructor(getFrameMetrics) {\n    this._anyBlankStartTime = null;\n    this._enabled = false;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n    this._getFrameMetrics = getFrameMetrics;\n    this._enabled = (_sampleRate || 0) > Math.random();\n    this._resetData();\n  }\n  activate() {\n    if (this._enabled && this._samplesStartTime == null) {\n      DEBUG && console.debug('FillRateHelper: activate');\n      this._samplesStartTime = global.performance.now();\n    }\n  }\n  deactivateAndFlush() {\n    if (!this._enabled) {\n      return;\n    }\n    var start = this._samplesStartTime; // const for flow\n    if (start == null) {\n      DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n      return;\n    }\n    if (this._info.sample_count < _minSampleCount) {\n      // Don't bother with under-sampled events.\n      this._resetData();\n      return;\n    }\n    var total_time_spent = global.performance.now() - start;\n    var info = _objectSpread(_objectSpread({}, this._info), {}, {\n      total_time_spent\n    });\n    if (DEBUG) {\n      var derived = {\n        avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n        avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n        avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n        any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n        any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n        mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n        mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n      };\n      for (var key in derived) {\n        // $FlowFixMe[prop-missing]\n        derived[key] = Math.round(1000 * derived[key]) / 1000;\n      }\n      console.debug('FillRateHelper deactivateAndFlush: ', {\n        derived,\n        info\n      });\n    }\n    _listeners.forEach(listener => listener(info));\n    this._resetData();\n  }\n  computeBlankness(props, cellsAroundViewport, scrollMetrics) {\n    if (!this._enabled || props.getItemCount(props.data) === 0 || cellsAroundViewport.last < cellsAroundViewport.first || this._samplesStartTime == null) {\n      return 0;\n    }\n    var dOffset = scrollMetrics.dOffset,\n      offset = scrollMetrics.offset,\n      velocity = scrollMetrics.velocity,\n      visibleLength = scrollMetrics.visibleLength;\n\n    // Denominator metrics that we track for all events - most of the time there is no blankness and\n    // we want to capture that.\n    this._info.sample_count++;\n    this._info.pixels_sampled += Math.round(visibleLength);\n    this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n    var scrollSpeed = Math.round(Math.abs(velocity) * 1000); // px / sec\n\n    // Whether blank now or not, record the elapsed time blank if we were blank last time.\n    var now = global.performance.now();\n    if (this._anyBlankStartTime != null) {\n      this._info.any_blank_ms += now - this._anyBlankStartTime;\n    }\n    this._anyBlankStartTime = null;\n    if (this._mostlyBlankStartTime != null) {\n      this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n    }\n    this._mostlyBlankStartTime = null;\n    var blankTop = 0;\n    var first = cellsAroundViewport.first;\n    var firstFrame = this._getFrameMetrics(first, props);\n    while (first <= cellsAroundViewport.last && (!firstFrame || !firstFrame.inLayout)) {\n      firstFrame = this._getFrameMetrics(first, props);\n      first++;\n    }\n    // Only count blankTop if we aren't rendering the first item, otherwise we will count the header\n    // as blank.\n    if (firstFrame && first > 0) {\n      blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n    }\n    var blankBottom = 0;\n    var last = cellsAroundViewport.last;\n    var lastFrame = this._getFrameMetrics(last, props);\n    while (last >= cellsAroundViewport.first && (!lastFrame || !lastFrame.inLayout)) {\n      lastFrame = this._getFrameMetrics(last, props);\n      last--;\n    }\n    // Only count blankBottom if we aren't rendering the last item, otherwise we will count the\n    // footer as blank.\n    if (lastFrame && last < props.getItemCount(props.data) - 1) {\n      var bottomEdge = lastFrame.offset + lastFrame.length;\n      blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n    }\n    var pixels_blank = Math.round(blankTop + blankBottom);\n    var blankness = pixels_blank / visibleLength;\n    if (blankness > 0) {\n      this._anyBlankStartTime = now;\n      this._info.any_blank_speed_sum += scrollSpeed;\n      this._info.any_blank_count++;\n      this._info.pixels_blank += pixels_blank;\n      if (blankness > 0.5) {\n        this._mostlyBlankStartTime = now;\n        this._info.mostly_blank_count++;\n      }\n    } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n      this.deactivateAndFlush();\n    }\n    return blankness;\n  }\n  enabled() {\n    return this._enabled;\n  }\n  _resetData() {\n    this._anyBlankStartTime = null;\n    this._info = new Info();\n    this._mostlyBlankStartTime = null;\n    this._samplesStartTime = null;\n  }\n}\nexport default FillRateHelper;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport invariant from 'fbjs/lib/invariant';\nimport * as React from 'react';\n\n/**\n * `setState` is called asynchronously, and should not rely on the value of\n * `this.props` or `this.state`:\n * https://reactjs.org/docs/state-and-lifecycle.html#state-updates-may-be-asynchronous\n *\n * SafePureComponent adds runtime enforcement, to catch cases where these\n * variables are read in a state updater function, instead of the ones passed\n * in.\n */\nexport default class StateSafePureComponent extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this._inAsyncStateUpdate = false;\n    this._installSetStateHooks();\n  }\n  setState(partialState, callback) {\n    if (typeof partialState === 'function') {\n      super.setState((state, props) => {\n        this._inAsyncStateUpdate = true;\n        var ret;\n        try {\n          ret = partialState(state, props);\n        } catch (err) {\n          throw err;\n        } finally {\n          this._inAsyncStateUpdate = false;\n        }\n        return ret;\n      }, callback);\n    } else {\n      super.setState(partialState, callback);\n    }\n  }\n  _installSetStateHooks() {\n    var that = this;\n    var props = this.props,\n      state = this.state;\n    Object.defineProperty(this, 'props', {\n      get() {\n        invariant(!that._inAsyncStateUpdate, '\"this.props\" should not be accessed during state updates');\n        return props;\n      },\n      set(newProps) {\n        props = newProps;\n      }\n    });\n    Object.defineProperty(this, 'state', {\n      get() {\n        invariant(!that._inAsyncStateUpdate, '\"this.state\" should not be acceessed during state updates');\n        return state;\n      },\n      set(newState) {\n        state = newState;\n      }\n    });\n  }\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport invariant from 'fbjs/lib/invariant';\n/**\n * A Utility class for calculating viewable items based on current metrics like scroll position and\n * layout.\n *\n * An item is said to be in a \"viewable\" state when any of the following\n * is true for longer than `minimumViewTime` milliseconds (after an interaction if `waitForInteraction`\n * is true):\n *\n * - Occupying >= `viewAreaCoveragePercentThreshold` of the view area XOR fraction of the item\n *   visible in the view area >= `itemVisiblePercentThreshold`.\n * - Entirely visible on screen\n */\nclass ViewabilityHelper {\n  constructor(config) {\n    if (config === void 0) {\n      config = {\n        viewAreaCoveragePercentThreshold: 0\n      };\n    }\n    this._hasInteracted = false;\n    this._timers = new Set();\n    this._viewableIndices = [];\n    this._viewableItems = new Map();\n    this._config = config;\n  }\n\n  /**\n   * Cleanup, e.g. on unmount. Clears any pending timers.\n   */\n  dispose() {\n    /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n     * comment suppresses an error found when Flow v0.63 was deployed. To see\n     * the error delete this comment and run Flow. */\n    this._timers.forEach(clearTimeout);\n  }\n\n  /**\n   * Determines which items are viewable based on the current metrics and config.\n   */\n  computeViewableItems(props, scrollOffset, viewportHeight, getFrameMetrics,\n  // Optional optimization to reduce the scan size\n  renderRange) {\n    var itemCount = props.getItemCount(props.data);\n    var _this$_config = this._config,\n      itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n      viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n    var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n    var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n    invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n    var viewableIndices = [];\n    if (itemCount === 0) {\n      return viewableIndices;\n    }\n    var firstVisible = -1;\n    var _ref = renderRange || {\n        first: 0,\n        last: itemCount - 1\n      },\n      first = _ref.first,\n      last = _ref.last;\n    if (last >= itemCount) {\n      console.warn('Invalid render range computing viewability ' + JSON.stringify({\n        renderRange,\n        itemCount\n      }));\n      return [];\n    }\n    for (var idx = first; idx <= last; idx++) {\n      var metrics = getFrameMetrics(idx, props);\n      if (!metrics) {\n        continue;\n      }\n      var top = metrics.offset - scrollOffset;\n      var bottom = top + metrics.length;\n      if (top < viewportHeight && bottom > 0) {\n        firstVisible = idx;\n        if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n          viewableIndices.push(idx);\n        }\n      } else if (firstVisible >= 0) {\n        break;\n      }\n    }\n    return viewableIndices;\n  }\n\n  /**\n   * Figures out which items are viewable and how that has changed from before and calls\n   * `onViewableItemsChanged` as appropriate.\n   */\n  onUpdate(props, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged,\n  // Optional optimization to reduce the scan size\n  renderRange) {\n    var itemCount = props.getItemCount(props.data);\n    if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0, props)) {\n      return;\n    }\n    var viewableIndices = [];\n    if (itemCount) {\n      viewableIndices = this.computeViewableItems(props, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n    }\n    if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every((v, ii) => v === viewableIndices[ii])) {\n      // We might get a lot of scroll events where visibility doesn't change and we don't want to do\n      // extra work in those cases.\n      return;\n    }\n    this._viewableIndices = viewableIndices;\n    if (this._config.minimumViewTime) {\n      var handle = setTimeout(() => {\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        this._timers.delete(handle);\n        this._onUpdateSync(props, viewableIndices, onViewableItemsChanged, createViewToken);\n      }, this._config.minimumViewTime);\n      /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.63 was deployed. To see\n       * the error delete this comment and run Flow. */\n      this._timers.add(handle);\n    } else {\n      this._onUpdateSync(props, viewableIndices, onViewableItemsChanged, createViewToken);\n    }\n  }\n\n  /**\n   * clean-up cached _viewableIndices to evaluate changed items on next update\n   */\n  resetViewableIndices() {\n    this._viewableIndices = [];\n  }\n\n  /**\n   * Records that an interaction has happened even if there has been no scroll.\n   */\n  recordInteraction() {\n    this._hasInteracted = true;\n  }\n  _onUpdateSync(props, viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n    // Filter out indices that have gone out of view since this call was scheduled.\n    viewableIndicesToCheck = viewableIndicesToCheck.filter(ii => this._viewableIndices.includes(ii));\n    var prevItems = this._viewableItems;\n    var nextItems = new Map(viewableIndicesToCheck.map(ii => {\n      var viewable = createViewToken(ii, true, props);\n      return [viewable.key, viewable];\n    }));\n    var changed = [];\n    for (var _iterator = _createForOfIteratorHelperLoose(nextItems), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n        key = _step$value[0],\n        viewable = _step$value[1];\n      if (!prevItems.has(key)) {\n        changed.push(viewable);\n      }\n    }\n    for (var _iterator2 = _createForOfIteratorHelperLoose(prevItems), _step2; !(_step2 = _iterator2()).done;) {\n      var _step2$value = _step2.value,\n        _key = _step2$value[0],\n        _viewable = _step2$value[1];\n      if (!nextItems.has(_key)) {\n        changed.push(_objectSpread(_objectSpread({}, _viewable), {}, {\n          isViewable: false\n        }));\n      }\n    }\n    if (changed.length > 0) {\n      this._viewableItems = nextItems;\n      onViewableItemsChanged({\n        viewableItems: Array.from(nextItems.values()),\n        changed,\n        viewabilityConfig: this._config\n      });\n    }\n  }\n}\nfunction _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n  if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n    return true;\n  } else {\n    var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n    var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n    return percent >= viewablePercentThreshold;\n  }\n}\nfunction _getPixelsVisible(top, bottom, viewportHeight) {\n  var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n  return Math.max(0, visibleHeight);\n}\nfunction _isEntirelyVisible(top, bottom, viewportHeight) {\n  return top >= 0 && bottom <= viewportHeight && bottom > top;\n}\nexport default ViewabilityHelper;","import _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nexport var VirtualizedListContext = /*#__PURE__*/React.createContext(null);\nif (__DEV__) {\n  VirtualizedListContext.displayName = 'VirtualizedListContext';\n}\n\n/**\n * Resets the context. Intended for use by portal-like components (e.g. Modal).\n */\nexport function VirtualizedListContextResetter(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/React.createElement(VirtualizedListContext.Provider, {\n    value: null\n  }, children);\n}\n\n/**\n * Sets the context with memoization. Intended to be used by `VirtualizedList`.\n */\nexport function VirtualizedListContextProvider(_ref2) {\n  var children = _ref2.children,\n    value = _ref2.value;\n  // Avoid setting a newly created context object if the values are identical.\n  var context = useMemo(() => ({\n    cellKey: null,\n    getScrollMetrics: value.getScrollMetrics,\n    horizontal: value.horizontal,\n    getOutermostParentListRef: value.getOutermostParentListRef,\n    registerAsNestedChild: value.registerAsNestedChild,\n    unregisterAsNestedChild: value.unregisterAsNestedChild\n  }), [value.getScrollMetrics, value.horizontal, value.getOutermostParentListRef, value.registerAsNestedChild, value.unregisterAsNestedChild]);\n  return /*#__PURE__*/React.createElement(VirtualizedListContext.Provider, {\n    value: context\n  }, children);\n}\n\n/**\n * Sets the `cellKey`. Intended to be used by `VirtualizedList` for each cell.\n */\nexport function VirtualizedListCellContextProvider(_ref3) {\n  var cellKey = _ref3.cellKey,\n    children = _ref3.children;\n  // Avoid setting a newly created context object if the values are identical.\n  var currContext = useContext(VirtualizedListContext);\n  var context = useMemo(() => currContext == null ? null : _objectSpread(_objectSpread({}, currContext), {}, {\n    cellKey\n  }), [currContext, cellKey]);\n  return /*#__PURE__*/React.createElement(VirtualizedListContext.Provider, {\n    value: context\n  }, children);\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport View from '../../../exports/View';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport { VirtualizedListCellContextProvider } from './VirtualizedListContext.js';\nimport invariant from 'fbjs/lib/invariant';\nimport * as React from 'react';\nexport default class CellRenderer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: this.props.item\n      }\n    };\n    this._separators = {\n      highlight: () => {\n        var _this$props = this.props,\n          cellKey = _this$props.cellKey,\n          prevCellKey = _this$props.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: () => {\n        var _this$props2 = this.props,\n          cellKey = _this$props2.cellKey,\n          prevCellKey = _this$props2.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: (select, newProps) => {\n        var _this$props3 = this.props,\n          cellKey = _this$props3.cellKey,\n          prevCellKey = _this$props3.prevCellKey;\n        this.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n    this._onLayout = nativeEvent => {\n      this.props.onCellLayout && this.props.onCellLayout(nativeEvent, this.props.cellKey, this.props.index);\n    };\n  }\n  static getDerivedStateFromProps(props, prevState) {\n    return {\n      separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n        leadingItem: props.item\n      })\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  // $FlowFixMe[missing-local-annot]\n\n  updateSeparatorProps(newProps) {\n    this.setState(state => ({\n      separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n    }));\n  }\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n    }\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return /*#__PURE__*/React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n    invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n  }\n  render() {\n    var _this$props4 = this.props,\n      CellRendererComponent = _this$props4.CellRendererComponent,\n      ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n      ListItemComponent = _this$props4.ListItemComponent,\n      cellKey = _this$props4.cellKey,\n      horizontal = _this$props4.horizontal,\n      item = _this$props4.item,\n      index = _this$props4.index,\n      inversionStyle = _this$props4.inversionStyle,\n      onCellFocusCapture = _this$props4.onCellFocusCapture,\n      onCellLayout = _this$props4.onCellLayout,\n      renderItem = _this$props4.renderItem;\n    var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    var itemSeparator = /*#__PURE__*/React.isValidElement(ItemSeparatorComponent) ?\n    // $FlowFixMe[incompatible-type]\n    ItemSeparatorComponent :\n    // $FlowFixMe[incompatible-type]\n    ItemSeparatorComponent && /*#__PURE__*/React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n    var result = !CellRendererComponent ? /*#__PURE__*/React.createElement(View, _extends({\n      style: cellStyle,\n      onFocusCapture: onCellFocusCapture\n    }, onCellLayout && {\n      onLayout: this._onLayout\n    }), element, itemSeparator) : /*#__PURE__*/React.createElement(CellRendererComponent, _extends({\n      cellKey: cellKey,\n      index: index,\n      item: item,\n      style: cellStyle,\n      onFocusCapture: onCellFocusCapture\n    }, onCellLayout && {\n      onLayout: this._onLayout\n    }), element, itemSeparator);\n    return /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n      cellKey: this.props.cellKey\n    }, result);\n  }\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  }\n});","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\n'use strict';\n\n/**\n * Used to find the indices of the frames that overlap the given offsets. Useful for finding the\n * items that bound different windows of content, such as the visible area or the buffered overscan\n * area.\n */\nexport function elementsThatOverlapOffsets(offsets, props, getFrameMetrics, zoomScale) {\n  if (zoomScale === void 0) {\n    zoomScale = 1;\n  }\n  var itemCount = props.getItemCount(props.data);\n  var result = [];\n  for (var offsetIndex = 0; offsetIndex < offsets.length; offsetIndex++) {\n    var currentOffset = offsets[offsetIndex];\n    var left = 0;\n    var right = itemCount - 1;\n    while (left <= right) {\n      // eslint-disable-next-line no-bitwise\n      var mid = left + (right - left >>> 1);\n      var frame = getFrameMetrics(mid, props);\n      var scaledOffsetStart = frame.offset * zoomScale;\n      var scaledOffsetEnd = (frame.offset + frame.length) * zoomScale;\n\n      // We want the first frame that contains the offset, with inclusive bounds. Thus, for the\n      // first frame the scaledOffsetStart is inclusive, while for other frames it is exclusive.\n      if (mid === 0 && currentOffset < scaledOffsetStart || mid !== 0 && currentOffset <= scaledOffsetStart) {\n        right = mid - 1;\n      } else if (currentOffset > scaledOffsetEnd) {\n        left = mid + 1;\n      } else {\n        result[offsetIndex] = mid;\n        break;\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Computes the number of elements in the `next` range that are new compared to the `prev` range.\n * Handy for calculating how many new items will be rendered when the render window changes so we\n * can restrict the number of new items render at once so that content can appear on the screen\n * faster.\n */\nexport function newRangeCount(prev, next) {\n  return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));\n}\n\n/**\n * Custom logic for determining which items should be rendered given the current frame and scroll\n * metrics, as well as the previous render state. The algorithm may evolve over time, but generally\n * prioritizes the visible area first, then expands that with overscan regions ahead and behind,\n * biased in the direction of scroll.\n */\nexport function computeWindowedRenderLimits(props, maxToRenderPerBatch, windowSize, prev, getFrameMetricsApprox, scrollMetrics) {\n  var itemCount = props.getItemCount(props.data);\n  if (itemCount === 0) {\n    return {\n      first: 0,\n      last: -1\n    };\n  }\n  var offset = scrollMetrics.offset,\n    velocity = scrollMetrics.velocity,\n    visibleLength = scrollMetrics.visibleLength,\n    _scrollMetrics$zoomSc = scrollMetrics.zoomScale,\n    zoomScale = _scrollMetrics$zoomSc === void 0 ? 1 : _scrollMetrics$zoomSc;\n\n  // Start with visible area, then compute maximum overscan region by expanding from there, biased\n  // in the direction of scroll. Total overscan area is capped, which should cap memory consumption\n  // too.\n  var visibleBegin = Math.max(0, offset);\n  var visibleEnd = visibleBegin + visibleLength;\n  var overscanLength = (windowSize - 1) * visibleLength;\n\n  // Considering velocity seems to introduce more churn than it's worth.\n  var leadFactor = 0.5; // Math.max(0, Math.min(1, velocity / 25 + 0.5));\n\n  var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';\n  var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);\n  var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);\n  var lastItemOffset = getFrameMetricsApprox(itemCount - 1, props).offset * zoomScale;\n  if (lastItemOffset < overscanBegin) {\n    // Entire list is before our overscan window\n    return {\n      first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),\n      last: itemCount - 1\n    };\n  }\n\n  // Find the indices that correspond to the items at the render boundaries we're targeting.\n  var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props, getFrameMetricsApprox, zoomScale),\n    overscanFirst = _elementsThatOverlapO[0],\n    first = _elementsThatOverlapO[1],\n    last = _elementsThatOverlapO[2],\n    overscanLast = _elementsThatOverlapO[3];\n  overscanFirst = overscanFirst == null ? 0 : overscanFirst;\n  first = first == null ? Math.max(0, overscanFirst) : first;\n  overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;\n  last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;\n  var visible = {\n    first,\n    last\n  };\n\n  // We want to limit the number of new cells we're rendering per batch so that we can fill the\n  // content on the screen quickly. If we rendered the entire overscan window at once, the user\n  // could be staring at white space for a long time waiting for a bunch of offscreen content to\n  // render.\n  var newCellCount = newRangeCount(prev, visible);\n  while (true) {\n    if (first <= overscanFirst && last >= overscanLast) {\n      // If we fill the entire overscan range, we're done.\n      break;\n    }\n    var maxNewCells = newCellCount >= maxToRenderPerBatch;\n    var firstWillAddMore = first <= prev.first || first > prev.last;\n    var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);\n    var lastWillAddMore = last >= prev.last || last < prev.first;\n    var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);\n    if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {\n      // We only want to stop if we've hit maxNewCells AND we cannot increment first or last\n      // without rendering new items. This let's us preserve as many already rendered items as\n      // possible, reducing render churn and keeping the rendered overscan range as large as\n      // possible.\n      break;\n    }\n    if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {\n      if (firstWillAddMore) {\n        newCellCount++;\n      }\n      first--;\n    }\n    if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {\n      if (lastWillAddMore) {\n        newCellCount++;\n      }\n      last++;\n    }\n  }\n  if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {\n    throw new Error('Bad window calculation ' + JSON.stringify({\n      first,\n      last,\n      itemCount,\n      overscanFirst,\n      overscanLast,\n      visible\n    }));\n  }\n  return {\n    first,\n    last\n  };\n}\nexport function keyExtractor(item, index) {\n  if (typeof item === 'object' && (item == null ? void 0 : item.key) != null) {\n    return item.key;\n  }\n  if (typeof item === 'object' && (item == null ? void 0 : item.id) != null) {\n    return item.id;\n  }\n  return String(index);\n}","'use strict';\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n  var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);\n  error.framesToPop = 1; // Skip nullthrows's own stack frame.\n  throw error;\n}\n\nmodule.exports = nullthrows;\nmodule.exports.default = nullthrows;\n\nObject.defineProperty(module.exports, '__esModule', {value: true});\n","import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport RefreshControl from '../../../exports/RefreshControl';\nimport ScrollView from '../../../exports/ScrollView';\nimport View from '../../../exports/View';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport findNodeHandle from '../../../exports/findNodeHandle';\nimport Batchinator from '../Batchinator';\nimport clamp from '../Utilities/clamp';\nimport infoLog from '../infoLog';\nimport { CellRenderMask } from './CellRenderMask';\nimport ChildListCollection from './ChildListCollection';\nimport FillRateHelper from '../FillRateHelper';\nimport StateSafePureComponent from './StateSafePureComponent';\nimport ViewabilityHelper from '../ViewabilityHelper';\nimport CellRenderer from './VirtualizedListCellRenderer';\nimport { VirtualizedListCellContextProvider, VirtualizedListContext, VirtualizedListContextProvider } from './VirtualizedListContext.js';\nimport { computeWindowedRenderLimits, keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\nimport invariant from 'fbjs/lib/invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\nvar __DEV__ = process.env.NODE_ENV !== 'production';\nvar ON_EDGE_REACHED_EPSILON = 0.001;\nvar _usedIndexForKey = false;\nvar _keylessItemComponentName = '';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal) {\n  return horizontal !== null && horizontal !== void 0 ? horizontal : false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRender)\nfunction initialNumToRenderOrDefault(initialNumToRender) {\n  return initialNumToRender !== null && initialNumToRender !== void 0 ? initialNumToRender : 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch) {\n  return maxToRenderPerBatch !== null && maxToRenderPerBatch !== void 0 ? maxToRenderPerBatch : 10;\n}\n\n// onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold)\nfunction onStartReachedThresholdOrDefault(onStartReachedThreshold) {\n  return onStartReachedThreshold !== null && onStartReachedThreshold !== void 0 ? onStartReachedThreshold : 2;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold) {\n  return onEndReachedThreshold !== null && onEndReachedThreshold !== void 0 ? onEndReachedThreshold : 2;\n}\n\n// getScrollingThreshold(visibleLength, onEndReachedThreshold)\nfunction getScrollingThreshold(threshold, visibleLength) {\n  return threshold * visibleLength / 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle) {\n  return scrollEventThrottle !== null && scrollEventThrottle !== void 0 ? scrollEventThrottle : 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize) {\n  return windowSize !== null && windowSize !== void 0 ? windowSize : 21;\n}\nfunction findLastWhere(arr, predicate) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) {\n      return arr[i];\n    }\n  }\n  return null;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends StateSafePureComponent {\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params) {\n    var animated = params ? params.animated : true;\n    var veryLast = this.props.getItemCount(this.props.data) - 1;\n    if (veryLast < 0) {\n      return;\n    }\n    var frame = this.__getFrameMetricsApprox(veryLast, this.props);\n    var offset = Math.max(0, frame.offset + frame.length + this._footerLength - this._scrollMetrics.visibleLength);\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params) {\n    var _this$props = this.props,\n      data = _this$props.data,\n      horizontal = _this$props.horizontal,\n      getItemCount = _this$props.getItemCount,\n      getItemLayout = _this$props.getItemLayout,\n      onScrollToIndexFailed = _this$props.onScrollToIndexFailed;\n    var animated = params.animated,\n      index = params.index,\n      viewOffset = params.viewOffset,\n      viewPosition = params.viewPosition;\n    invariant(index >= 0, \"scrollToIndex out of range: requested index \" + index + \" but minimum is 0\");\n    invariant(getItemCount(data) >= 1, \"scrollToIndex out of range: item length \" + getItemCount(data) + \" but minimum is 1\");\n    invariant(index < getItemCount(data), \"scrollToIndex out of range: requested index \" + index + \" is out of 0 to \" + (getItemCount(data) - 1));\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(!!onScrollToIndexFailed, 'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' + 'otherwise there is no way to know the location of offscreen indices or handle failures.');\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index\n      });\n      return;\n    }\n    var frame = this.__getFrameMetricsApprox(Math.floor(index), this.props);\n    var offset = Math.max(0, this._getOffsetApprox(index, this.props) - (viewPosition || 0) * (this._scrollMetrics.visibleLength - frame.length)) - (viewOffset || 0);\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontal ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params) {\n    var item = params.item;\n    var _this$props2 = this.props,\n      data = _this$props2.data,\n      getItem = _this$props2.getItem,\n      getItemCount = _this$props2.getItemCount;\n    var itemCount = getItemCount(data);\n    for (var _index = 0; _index < itemCount; _index++) {\n      if (getItem(data, _index) === item) {\n        this.scrollToIndex(_objectSpread(_objectSpread({}, params), {}, {\n          index: _index\n        }));\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params) {\n    var animated = params.animated,\n      offset = params.offset;\n    if (this._scrollRef == null) {\n      return;\n    }\n    if (this._scrollRef.scrollTo == null) {\n      console.warn('No scrollTo method provided. This may be because you have two nested ' + 'VirtualizedLists with the same orientation, or because you are ' + 'using a custom component that does not implement scrollTo.');\n      return;\n    }\n    this._scrollRef.scrollTo(horizontalOrDefault(this.props.horizontal) ? {\n      x: offset,\n      animated\n    } : {\n      y: offset,\n      animated\n    });\n  }\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  }\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return this._scrollRef;\n    }\n  }\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n  _getCellKey() {\n    var _this$context;\n    return ((_this$context = this.context) == null ? void 0 : _this$context.cellKey) || 'rootList';\n  }\n\n  // $FlowFixMe[missing-local-annot]\n\n  hasMore() {\n    return this._hasMore;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n\n  constructor(_props) {\n    var _this$props$updateCel;\n    super(_props);\n    this._getScrollMetrics = () => {\n      return this._scrollMetrics;\n    };\n    this._getOutermostParentListRef = () => {\n      if (this._isNestedWithSameOrientation()) {\n        return this.context.getOutermostParentListRef();\n      } else {\n        return this;\n      }\n    };\n    this._registerAsNestedChild = childList => {\n      this._nestedChildLists.add(childList.ref, childList.cellKey);\n      if (this._hasInteracted) {\n        childList.ref.recordInteraction();\n      }\n    };\n    this._unregisterAsNestedChild = childList => {\n      this._nestedChildLists.remove(childList.ref);\n    };\n    this._onUpdateSeparators = (keys, newProps) => {\n      keys.forEach(key => {\n        var ref = key != null && this._cellRefs[key];\n        ref && ref.updateSeparatorProps(newProps);\n      });\n    };\n    this._getSpacerKey = isVertical => isVertical ? 'height' : 'width';\n    this._averageCellLength = 0;\n    this._cellRefs = {};\n    this._frames = {};\n    this._footerLength = 0;\n    this._hasTriggeredInitialScrollToIndex = false;\n    this._hasInteracted = false;\n    this._hasMore = false;\n    this._hasWarned = {};\n    this._headerLength = 0;\n    this._hiPriInProgress = false;\n    this._highestMeasuredFrameIndex = 0;\n    this._indicesToKeys = new Map();\n    this._lastFocusedCellKey = null;\n    this._nestedChildLists = new ChildListCollection();\n    this._offsetFromParentVirtualizedList = 0;\n    this._prevParentOffset = 0;\n    this._scrollMetrics = {\n      contentLength: 0,\n      dOffset: 0,\n      dt: 10,\n      offset: 0,\n      timestamp: 0,\n      velocity: 0,\n      visibleLength: 0,\n      zoomScale: 1\n    };\n    this._scrollRef = null;\n    this._sentStartForContentLength = 0;\n    this._sentEndForContentLength = 0;\n    this._totalCellLength = 0;\n    this._totalCellsMeasured = 0;\n    this._viewabilityTuples = [];\n    this._captureScrollRef = ref => {\n      this._scrollRef = ref;\n    };\n    this._defaultRenderScrollComponent = props => {\n      var onRefresh = props.onRefresh;\n      if (this._isNestedWithSameOrientation()) {\n        // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n        return /*#__PURE__*/React.createElement(View, props);\n      } else if (onRefresh) {\n        var _props$refreshing;\n        invariant(typeof props.refreshing === 'boolean', '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' + JSON.stringify((_props$refreshing = props.refreshing) !== null && _props$refreshing !== void 0 ? _props$refreshing : 'undefined') + '`');\n        return (\n          /*#__PURE__*/\n          // $FlowFixMe[prop-missing] Invalid prop usage\n          // $FlowFixMe[incompatible-use]\n          React.createElement(ScrollView, _extends({}, props, {\n            refreshControl: props.refreshControl == null ? /*#__PURE__*/React.createElement(RefreshControl\n            // $FlowFixMe[incompatible-type]\n            , {\n              refreshing: props.refreshing,\n              onRefresh: onRefresh,\n              progressViewOffset: props.progressViewOffset\n            }) : props.refreshControl\n          }))\n        );\n      } else {\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        // $FlowFixMe[incompatible-use]\n        return /*#__PURE__*/React.createElement(ScrollView, props);\n      }\n    };\n    this._onCellLayout = (e, cellKey, index) => {\n      var layout = e.nativeEvent.layout;\n      var next = {\n        offset: this._selectOffset(layout),\n        length: this._selectLength(layout),\n        index,\n        inLayout: true\n      };\n      var curr = this._frames[cellKey];\n      if (!curr || next.offset !== curr.offset || next.length !== curr.length || index !== curr.index) {\n        this._totalCellLength += next.length - (curr ? curr.length : 0);\n        this._totalCellsMeasured += curr ? 0 : 1;\n        this._averageCellLength = this._totalCellLength / this._totalCellsMeasured;\n        this._frames[cellKey] = next;\n        this._highestMeasuredFrameIndex = Math.max(this._highestMeasuredFrameIndex, index);\n        this._scheduleCellsToRenderUpdate();\n      } else {\n        this._frames[cellKey].inLayout = true;\n      }\n      this._triggerRemeasureForChildListsInCell(cellKey);\n      this._computeBlankness();\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    };\n    this._onCellUnmount = cellKey => {\n      delete this._cellRefs[cellKey];\n      var curr = this._frames[cellKey];\n      if (curr) {\n        this._frames[cellKey] = _objectSpread(_objectSpread({}, curr), {}, {\n          inLayout: false\n        });\n      }\n    };\n    this._onLayout = e => {\n      if (this._isNestedWithSameOrientation()) {\n        // Need to adjust our scroll metrics to be relative to our containing\n        // VirtualizedList before we can make claims about list item viewability\n        this.measureLayoutRelativeToContainingList();\n      } else {\n        this._scrollMetrics.visibleLength = this._selectLength(e.nativeEvent.layout);\n      }\n      this.props.onLayout && this.props.onLayout(e);\n      this._scheduleCellsToRenderUpdate();\n      this._maybeCallOnEdgeReached();\n    };\n    this._onLayoutEmpty = e => {\n      this.props.onLayout && this.props.onLayout(e);\n    };\n    this._onLayoutFooter = e => {\n      this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n      this._footerLength = this._selectLength(e.nativeEvent.layout);\n    };\n    this._onLayoutHeader = e => {\n      this._headerLength = this._selectLength(e.nativeEvent.layout);\n    };\n    this._onContentSizeChange = (width, height) => {\n      if (width > 0 && height > 0 && this.props.initialScrollIndex != null && this.props.initialScrollIndex > 0 && !this._hasTriggeredInitialScrollToIndex) {\n        if (this.props.contentOffset == null) {\n          if (this.props.initialScrollIndex < this.props.getItemCount(this.props.data)) {\n            this.scrollToIndex({\n              animated: false,\n              index: nullthrows(this.props.initialScrollIndex)\n            });\n          } else {\n            this.scrollToEnd({\n              animated: false\n            });\n          }\n        }\n        this._hasTriggeredInitialScrollToIndex = true;\n      }\n      if (this.props.onContentSizeChange) {\n        this.props.onContentSizeChange(width, height);\n      }\n      this._scrollMetrics.contentLength = this._selectLength({\n        height,\n        width\n      });\n      this._scheduleCellsToRenderUpdate();\n      this._maybeCallOnEdgeReached();\n    };\n    this._convertParentScrollMetrics = metrics => {\n      // Offset of the top of the nested list relative to the top of its parent's viewport\n      var offset = metrics.offset - this._offsetFromParentVirtualizedList;\n      // Child's visible length is the same as its parent's\n      var visibleLength = metrics.visibleLength;\n      var dOffset = offset - this._scrollMetrics.offset;\n      var contentLength = this._scrollMetrics.contentLength;\n      return {\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset\n      };\n    };\n    this._onScroll = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onScroll(e);\n      });\n      if (this.props.onScroll) {\n        this.props.onScroll(e);\n      }\n      var timestamp = e.timeStamp;\n      var visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n      var contentLength = this._selectLength(e.nativeEvent.contentSize);\n      var offset = this._selectOffset(e.nativeEvent.contentOffset);\n      var dOffset = offset - this._scrollMetrics.offset;\n      if (this._isNestedWithSameOrientation()) {\n        if (this._scrollMetrics.contentLength === 0) {\n          // Ignore scroll events until onLayout has been called and we\n          // know our offset from our offset from our parent\n          return;\n        }\n        var _this$_convertParentS = this._convertParentScrollMetrics({\n          visibleLength,\n          offset\n        });\n        visibleLength = _this$_convertParentS.visibleLength;\n        contentLength = _this$_convertParentS.contentLength;\n        offset = _this$_convertParentS.offset;\n        dOffset = _this$_convertParentS.dOffset;\n      }\n      var dt = this._scrollMetrics.timestamp ? Math.max(1, timestamp - this._scrollMetrics.timestamp) : 1;\n      var velocity = dOffset / dt;\n      if (dt > 500 && this._scrollMetrics.dt > 500 && contentLength > 5 * visibleLength && !this._hasWarned.perf) {\n        infoLog('VirtualizedList: You have a large list that is slow to update - make sure your ' + 'renderItem function renders components that follow React performance best practices ' + 'like PureComponent, shouldComponentUpdate, etc.', {\n          dt,\n          prevDt: this._scrollMetrics.dt,\n          contentLength\n        });\n        this._hasWarned.perf = true;\n      }\n\n      // For invalid negative values (w/ RTL), set this to 1.\n      var zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n      this._scrollMetrics = {\n        contentLength,\n        dt,\n        dOffset,\n        offset,\n        timestamp,\n        velocity,\n        visibleLength,\n        zoomScale\n      };\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n      if (!this.props) {\n        return;\n      }\n      this._maybeCallOnEdgeReached();\n      if (velocity !== 0) {\n        this._fillRateHelper.activate();\n      }\n      this._computeBlankness();\n      this._scheduleCellsToRenderUpdate();\n    };\n    this._onScrollBeginDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onScrollBeginDrag(e);\n      });\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.recordInteraction();\n      });\n      this._hasInteracted = true;\n      this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n    };\n    this._onScrollEndDrag = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onScrollEndDrag(e);\n      });\n      var velocity = e.nativeEvent.velocity;\n      if (velocity) {\n        this._scrollMetrics.velocity = this._selectOffset(velocity);\n      }\n      this._computeBlankness();\n      this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n    };\n    this._onMomentumScrollBegin = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onMomentumScrollBegin(e);\n      });\n      this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n    };\n    this._onMomentumScrollEnd = e => {\n      this._nestedChildLists.forEach(childList => {\n        childList._onMomentumScrollEnd(e);\n      });\n      this._scrollMetrics.velocity = 0;\n      this._computeBlankness();\n      this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n    };\n    this._updateCellsToRender = () => {\n      this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n      this.setState((state, props) => {\n        var cellsAroundViewport = this._adjustCellsAroundViewport(props, state.cellsAroundViewport);\n        var renderMask = VirtualizedList._createRenderMask(props, cellsAroundViewport, this._getNonViewportRenderRegions(props));\n        if (cellsAroundViewport.first === state.cellsAroundViewport.first && cellsAroundViewport.last === state.cellsAroundViewport.last && renderMask.equals(state.renderMask)) {\n          return null;\n        }\n        return {\n          cellsAroundViewport,\n          renderMask\n        };\n      });\n    };\n    this._createViewToken = (index, isViewable, props\n    // $FlowFixMe[missing-local-annot]\n    ) => {\n      var data = props.data,\n        getItem = props.getItem;\n      var item = getItem(data, index);\n      return {\n        index,\n        item,\n        key: this._keyExtractor(item, index, props),\n        isViewable\n      };\n    };\n    this._getOffsetApprox = (index, props) => {\n      if (Number.isInteger(index)) {\n        return this.__getFrameMetricsApprox(index, props).offset;\n      } else {\n        var frameMetrics = this.__getFrameMetricsApprox(Math.floor(index), props);\n        var remainder = index - Math.floor(index);\n        return frameMetrics.offset + remainder * frameMetrics.length;\n      }\n    };\n    this.__getFrameMetricsApprox = (index, props) => {\n      var frame = this._getFrameMetrics(index, props);\n      if (frame && frame.index === index) {\n        // check for invalid frames due to row re-ordering\n        return frame;\n      } else {\n        var data = props.data,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n        invariant(!getItemLayout, 'Should not have to estimate frames when a measurement metrics function is provided');\n        return {\n          length: this._averageCellLength,\n          offset: this._averageCellLength * index\n        };\n      }\n    };\n    this._getFrameMetrics = (index, props) => {\n      var data = props.data,\n        getItem = props.getItem,\n        getItemCount = props.getItemCount,\n        getItemLayout = props.getItemLayout;\n      invariant(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n      var item = getItem(data, index);\n      var frame = this._frames[this._keyExtractor(item, index, props)];\n      if (!frame || frame.index !== index) {\n        if (getItemLayout) {\n          /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n           * suppresses an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          return getItemLayout(data, index);\n        }\n      }\n      return frame;\n    };\n    this._getNonViewportRenderRegions = props => {\n      // Keep a viewport's worth of content around the last focused cell to allow\n      // random navigation around it without any blanking. E.g. tabbing from one\n      // focused item out of viewport to another.\n      if (!(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])) {\n        return [];\n      }\n      var lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\n      var focusedCellIndex = lastFocusedCellRenderer.props.index;\n      var itemCount = props.getItemCount(props.data);\n\n      // The last cell we rendered may be at a new index. Bail if we don't know\n      // where it is.\n      if (focusedCellIndex >= itemCount || this._keyExtractor(props.getItem(props.data, focusedCellIndex), focusedCellIndex, props) !== this._lastFocusedCellKey) {\n        return [];\n      }\n      var first = focusedCellIndex;\n      var heightOfCellsBeforeFocused = 0;\n      for (var i = first - 1; i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength; i--) {\n        first--;\n        heightOfCellsBeforeFocused += this.__getFrameMetricsApprox(i, props).length;\n      }\n      var last = focusedCellIndex;\n      var heightOfCellsAfterFocused = 0;\n      for (var _i = last + 1; _i < itemCount && heightOfCellsAfterFocused < this._scrollMetrics.visibleLength; _i++) {\n        last++;\n        heightOfCellsAfterFocused += this.__getFrameMetricsApprox(_i, props).length;\n      }\n      return [{\n        first,\n        last\n      }];\n    };\n    this._checkProps(_props);\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(this._updateCellsToRender, (_this$props$updateCel = this.props.updateCellsBatchingPeriod) !== null && _this$props$updateCel !== void 0 ? _this$props$updateCel : 50);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n        onViewableItemsChanged: pair.onViewableItemsChanged\n      }));\n    } else {\n      var _this$props3 = this.props,\n        onViewableItemsChanged = _this$props3.onViewableItemsChanged,\n        viewabilityConfig = _this$props3.viewabilityConfig;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged\n        });\n      }\n    }\n    var initialRenderRegion = VirtualizedList._initialRenderRegion(_props);\n    this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(_props, initialRenderRegion)\n    };\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    // For issue https://github.com/necolas/react-native-web/issues/995\n    this.invertedWheelEventHandler = ev => {\n      var scrollOffset = this.props.horizontal ? ev.target.scrollLeft : ev.target.scrollTop;\n      var scrollLength = this.props.horizontal ? ev.target.scrollWidth : ev.target.scrollHeight;\n      var clientLength = this.props.horizontal ? ev.target.clientWidth : ev.target.clientHeight;\n      var isEventTargetScrollable = scrollLength > clientLength;\n      var delta = this.props.horizontal ? ev.deltaX || ev.wheelDeltaX : ev.deltaY || ev.wheelDeltaY;\n      var leftoverDelta = delta;\n      if (isEventTargetScrollable) {\n        leftoverDelta = delta < 0 ? Math.min(delta + scrollOffset, 0) : Math.max(delta - (scrollLength - clientLength - scrollOffset), 0);\n      }\n      var targetDelta = delta - leftoverDelta;\n      if (this.props.inverted && this._scrollRef && this._scrollRef.getScrollableNode) {\n        var node = this._scrollRef.getScrollableNode();\n        if (this.props.horizontal) {\n          ev.target.scrollLeft += targetDelta;\n          var nextScrollLeft = node.scrollLeft - leftoverDelta;\n          node.scrollLeft = !this.props.getItemLayout ? Math.min(nextScrollLeft, this._totalCellLength) : nextScrollLeft;\n        } else {\n          ev.target.scrollTop += targetDelta;\n          var nextScrollTop = node.scrollTop - leftoverDelta;\n          node.scrollTop = !this.props.getItemLayout ? Math.min(nextScrollTop, this._totalCellLength) : nextScrollTop;\n        }\n        ev.preventDefault();\n      }\n    };\n  }\n  _checkProps(props) {\n    var onScroll = props.onScroll,\n      windowSize = props.windowSize,\n      getItemCount = props.getItemCount,\n      data = props.data,\n      initialScrollIndex = props.initialScrollIndex;\n    invariant(\n    // $FlowFixMe[prop-missing]\n    !onScroll || !onScroll.__isNative, 'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' + 'to support native onScroll events with useNativeDriver');\n    invariant(windowSizeOrDefault(windowSize) > 0, 'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.');\n    invariant(getItemCount, 'VirtualizedList: The \"getItemCount\" prop must be provided');\n    var itemCount = getItemCount(data);\n    if (initialScrollIndex != null && !this._hasTriggeredInitialScrollToIndex && (initialScrollIndex < 0 || itemCount > 0 && initialScrollIndex >= itemCount) && !this._hasWarned.initialScrollIndex) {\n      console.warn(\"initialScrollIndex \\\"\" + initialScrollIndex + \"\\\" is not valid (list has \" + itemCount + \" items)\");\n      this._hasWarned.initialScrollIndex = true;\n    }\n    if (__DEV__ && !this._hasWarned.flexWrap) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      var flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn('`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' + 'Consider using `numColumns` with `FlatList` instead.');\n        this._hasWarned.flexWrap = true;\n      }\n    }\n  }\n  static _createRenderMask(props, cellsAroundViewport, additionalRegions) {\n    var itemCount = props.getItemCount(props.data);\n    invariant(cellsAroundViewport.first >= 0 && cellsAroundViewport.last >= cellsAroundViewport.first - 1 && cellsAroundViewport.last < itemCount, \"Invalid cells around viewport \\\"[\" + cellsAroundViewport.first + \", \" + cellsAroundViewport.last + \"]\\\" was passed to VirtualizedList._createRenderMask\");\n    var renderMask = new CellRenderMask(itemCount);\n    if (itemCount > 0) {\n      var allRegions = [cellsAroundViewport, ...(additionalRegions !== null && additionalRegions !== void 0 ? additionalRegions : [])];\n      for (var _i2 = 0, _allRegions = allRegions; _i2 < _allRegions.length; _i2++) {\n        var region = _allRegions[_i2];\n        renderMask.addCells(region);\n      }\n\n      // The initially rendered cells are retained as part of the\n      // \"scroll-to-top\" optimization\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n        var initialRegion = VirtualizedList._initialRenderRegion(props);\n        renderMask.addCells(initialRegion);\n      }\n\n      // The layout coordinates of sticker headers may be off-screen while the\n      // actual header is on-screen. Keep the most recent before the viewport\n      // rendered, even if its layout coordinates are not in viewport.\n      var stickyIndicesSet = new Set(props.stickyHeaderIndices);\n      VirtualizedList._ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellsAroundViewport.first);\n    }\n    return renderMask;\n  }\n  static _initialRenderRegion(props) {\n    var _props$initialScrollI;\n    var itemCount = props.getItemCount(props.data);\n    var firstCellIndex = Math.max(0, Math.min(itemCount - 1, Math.floor((_props$initialScrollI = props.initialScrollIndex) !== null && _props$initialScrollI !== void 0 ? _props$initialScrollI : 0)));\n    var lastCellIndex = Math.min(itemCount, firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender)) - 1;\n    return {\n      first: firstCellIndex,\n      last: lastCellIndex\n    };\n  }\n  static _ensureClosestStickyHeader(props, stickyIndicesSet, renderMask, cellIdx) {\n    var stickyOffset = props.ListHeaderComponent ? 1 : 0;\n    for (var itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n        renderMask.addCells({\n          first: itemIdx,\n          last: itemIdx\n        });\n        break;\n      }\n    }\n  }\n  _adjustCellsAroundViewport(props, cellsAroundViewport) {\n    var data = props.data,\n      getItemCount = props.getItemCount;\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(props.onEndReachedThreshold);\n    var _this$_scrollMetrics = this._scrollMetrics,\n      contentLength = _this$_scrollMetrics.contentLength,\n      offset = _this$_scrollMetrics.offset,\n      visibleLength = _this$_scrollMetrics.visibleLength;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Wait until the scroll view metrics have been set up. And until then,\n    // we will trust the initialNumToRender suggestion\n    if (visibleLength <= 0 || contentLength <= 0) {\n      return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n    }\n    var newCellsAroundViewport;\n    if (props.disableVirtualization) {\n      var renderAhead = distanceFromEnd < onEndReachedThreshold * visibleLength ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch) : 0;\n      newCellsAroundViewport = {\n        first: 0,\n        last: Math.min(cellsAroundViewport.last + renderAhead, getItemCount(data) - 1)\n      };\n    } else {\n      // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n      // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n      // So let's wait until we've scrolled the view to the right place. And until then,\n      // we will trust the initialScrollIndex suggestion.\n\n      // Thus, we want to recalculate the windowed render limits if any of the following hold:\n      // - initialScrollIndex is undefined or is 0\n      // - initialScrollIndex > 0 AND scrolling is complete\n      // - initialScrollIndex > 0 AND the end of the list is visible (this handles the case\n      //   where the list is shorter than the visible area)\n      if (props.initialScrollIndex && !this._scrollMetrics.offset && Math.abs(distanceFromEnd) >= Number.EPSILON) {\n        return cellsAroundViewport.last >= getItemCount(data) ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props) : cellsAroundViewport;\n      }\n      newCellsAroundViewport = computeWindowedRenderLimits(props, maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch), windowSizeOrDefault(props.windowSize), cellsAroundViewport, this.__getFrameMetricsApprox, this._scrollMetrics);\n      invariant(newCellsAroundViewport.last < getItemCount(data), 'computeWindowedRenderLimits() should return range in-bounds');\n    }\n    if (this._nestedChildLists.size() > 0) {\n      // If some cell in the new state has a child list in it, we should only render\n      // up through that item, so that we give that list a chance to render.\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\n      // their items.\n\n      // Will this prevent rendering if the nested list doesn't realize the end?\n      var childIdx = this._findFirstChildWithMore(newCellsAroundViewport.first, newCellsAroundViewport.last);\n      newCellsAroundViewport.last = childIdx !== null && childIdx !== void 0 ? childIdx : newCellsAroundViewport.last;\n    }\n    return newCellsAroundViewport;\n  }\n  _findFirstChildWithMore(first, last) {\n    for (var ii = first; ii <= last; ii++) {\n      var cellKeyForIndex = this._indicesToKeys.get(ii);\n      if (cellKeyForIndex != null && this._nestedChildLists.anyInCell(cellKeyForIndex, childList => childList.hasMore())) {\n        return ii;\n      }\n    }\n    return null;\n  }\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        ref: this,\n        cellKey: this.context.cellKey\n      });\n    }\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    this.setupWebWheelHandler();\n  }\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        ref: this\n      });\n    }\n    this._updateCellsToRenderBatcher.dispose({\n      abort: true\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n\n    // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n    this.teardownWebWheelHandler();\n  }\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n  setupWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().addEventListener('wheel', this.invertedWheelEventHandler);\n    } else {\n      setTimeout(() => this.setupWebWheelHandler(), 50);\n      return;\n    }\n  }\n\n  // REACT-NATIVE-WEB patch to preserve during future RN merges: Support inverted wheel scroller.\n  teardownWebWheelHandler() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      this._scrollRef.getScrollableNode().removeEventListener('wheel', this.invertedWheelEventHandler);\n    }\n  }\n  static getDerivedStateFromProps(newProps, prevState) {\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    var itemCount = newProps.getItemCount(newProps.data);\n    if (itemCount === prevState.renderMask.numCells()) {\n      return prevState;\n    }\n    var constrainedCells = VirtualizedList._constrainToItemCount(prevState.cellsAroundViewport, newProps);\n    return {\n      cellsAroundViewport: constrainedCells,\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells)\n    };\n  }\n  _pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, first, last, inversionStyle) {\n    var _this = this;\n    var _this$props4 = this.props,\n      CellRendererComponent = _this$props4.CellRendererComponent,\n      ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n      ListHeaderComponent = _this$props4.ListHeaderComponent,\n      ListItemComponent = _this$props4.ListItemComponent,\n      data = _this$props4.data,\n      debug = _this$props4.debug,\n      getItem = _this$props4.getItem,\n      getItemCount = _this$props4.getItemCount,\n      getItemLayout = _this$props4.getItemLayout,\n      horizontal = _this$props4.horizontal,\n      renderItem = _this$props4.renderItem;\n    var stickyOffset = ListHeaderComponent ? 1 : 0;\n    var end = getItemCount(data) - 1;\n    var prevCellKey;\n    last = Math.min(end, last);\n    var _loop = function _loop() {\n      var item = getItem(data, ii);\n      var key = _this._keyExtractor(item, ii, _this.props);\n      _this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      var shouldListenForLayout = getItemLayout == null || debug || _this._fillRateHelper.enabled();\n      cells.push( /*#__PURE__*/React.createElement(CellRenderer, _extends({\n        CellRendererComponent: CellRendererComponent,\n        ItemSeparatorComponent: ii < end ? ItemSeparatorComponent : undefined,\n        ListItemComponent: ListItemComponent,\n        cellKey: key,\n        horizontal: horizontal,\n        index: ii,\n        inversionStyle: inversionStyle,\n        item: item,\n        key: key,\n        prevCellKey: prevCellKey,\n        onUpdateSeparators: _this._onUpdateSeparators,\n        onCellFocusCapture: e => _this._onCellFocusCapture(key),\n        onUnmount: _this._onCellUnmount,\n        ref: _ref => {\n          _this._cellRefs[key] = _ref;\n        },\n        renderItem: renderItem\n      }, shouldListenForLayout && {\n        onCellLayout: _this._onCellLayout\n      })));\n      prevCellKey = key;\n    };\n    for (var ii = first; ii <= last; ii++) {\n      _loop();\n    }\n  }\n  static _constrainToItemCount(cells, props) {\n    var itemCount = props.getItemCount(props.data);\n    var last = Math.min(itemCount - 1, cells.last);\n    var maxToRenderPerBatch = maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch);\n    return {\n      first: clamp(0, itemCount - 1 - maxToRenderPerBatch, cells.first),\n      last\n    };\n  }\n  _isNestedWithSameOrientation() {\n    var nestedContext = this.context;\n    return !!(nestedContext && !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal));\n  }\n  _keyExtractor(item, index, props\n  // $FlowFixMe[missing-local-annot]\n  ) {\n    if (props.keyExtractor != null) {\n      return props.keyExtractor(item, index);\n    }\n    var key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n  render() {\n    this._checkProps(this.props);\n    var _this$props5 = this.props,\n      ListEmptyComponent = _this$props5.ListEmptyComponent,\n      ListFooterComponent = _this$props5.ListFooterComponent,\n      ListHeaderComponent = _this$props5.ListHeaderComponent;\n    var _this$props6 = this.props,\n      data = _this$props6.data,\n      horizontal = _this$props6.horizontal;\n    var inversionStyle = this.props.inverted ? horizontalOrDefault(this.props.horizontal) ? styles.horizontallyInverted : styles.verticallyInverted : null;\n    var cells = [];\n    var stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    var stickyHeaderIndices = [];\n\n    // 1. Add cell for ListHeaderComponent\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      var _element = /*#__PURE__*/React.isValidElement(ListHeaderComponent) ? ListHeaderComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListHeaderComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-header',\n        key: \"$header\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutHeader,\n        style: [inversionStyle, this.props.ListHeaderComponentStyle]\n      },\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element)));\n    }\n\n    // 2a. Add a cell for ListEmptyComponent if applicable\n    var itemCount = this.props.getItemCount(data);\n    if (itemCount === 0 && ListEmptyComponent) {\n      var _element2 = /*#__PURE__*/React.isValidElement(ListEmptyComponent) ? ListEmptyComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListEmptyComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getCellKey() + '-empty',\n        key: \"$empty\"\n      }, /*#__PURE__*/React.cloneElement(_element2, {\n        onLayout: event => {\n          this._onLayoutEmpty(event);\n          if (_element2.props.onLayout) {\n            _element2.props.onLayout(event);\n          }\n        },\n        style: [inversionStyle, _element2.props.style]\n      })));\n    }\n\n    // 2b. Add cells and spacers for each item\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      var spacerKey = this._getSpacerKey(!horizontal);\n      var renderRegions = this.state.renderMask.enumerateRegions();\n      var lastSpacer = findLastWhere(renderRegions, r => r.isSpacer);\n      for (var _iterator = _createForOfIteratorHelperLoose(renderRegions), _step; !(_step = _iterator()).done;) {\n        var section = _step.value;\n        if (section.isSpacer) {\n          // Legacy behavior is to avoid spacers when virtualization is\n          // disabled (including head spacers on initial render).\n          if (this.props.disableVirtualization) {\n            continue;\n          }\n\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\n          // likely jump around as it renders in above the viewport.\n          var isLastSpacer = section === lastSpacer;\n          var constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n          var last = constrainToMeasured ? clamp(section.first - 1, section.last, this._highestMeasuredFrameIndex) : section.last;\n          var firstMetrics = this.__getFrameMetricsApprox(section.first, this.props);\n          var lastMetrics = this.__getFrameMetricsApprox(last, this.props);\n          var spacerSize = lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n          cells.push( /*#__PURE__*/React.createElement(View, {\n            key: \"$spacer-\" + section.first,\n            style: {\n              [spacerKey]: spacerSize\n            }\n          }));\n        } else {\n          this._pushCells(cells, stickyHeaderIndices, stickyIndicesFromProps, section.first, section.last, inversionStyle);\n        }\n      }\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn('VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' + 'item or provide a custom keyExtractor.', _keylessItemComponentName);\n        this._hasWarned.keys = true;\n      }\n    }\n\n    // 3. Add cell for ListFooterComponent\n    if (ListFooterComponent) {\n      var _element3 = /*#__PURE__*/React.isValidElement(ListFooterComponent) ? ListFooterComponent :\n      /*#__PURE__*/\n      // $FlowFixMe[not-a-component]\n      // $FlowFixMe[incompatible-type-arg]\n      React.createElement(ListFooterComponent, null);\n      cells.push( /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this._getFooterCellKey(),\n        key: \"$footer\"\n      }, /*#__PURE__*/React.createElement(View, {\n        onLayout: this._onLayoutFooter,\n        style: [inversionStyle, this.props.ListFooterComponentStyle]\n      },\n      // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n      _element3)));\n    }\n\n    // 4. Render the ScrollView\n    var scrollProps = _objectSpread(_objectSpread({}, this.props), {}, {\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(this.props.scrollEventThrottle),\n      // TODO: Android support\n      invertStickyHeaders: this.props.invertStickyHeaders !== undefined ? this.props.invertStickyHeaders : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle ? [inversionStyle, this.props.style] : this.props.style\n    });\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n    var innerRet = /*#__PURE__*/React.createElement(VirtualizedListContextProvider, {\n      value: {\n        cellKey: null,\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: horizontalOrDefault(this.props.horizontal),\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild\n      }\n    }, /*#__PURE__*/React.cloneElement((this.props.renderScrollComponent || this._defaultRenderScrollComponent)(scrollProps), {\n      ref: this._captureScrollRef\n    }, cells));\n    var ret = innerRet;\n    /* https://github.com/necolas/react-native-web/issues/2239: Re-enable when ScrollView.Context.Consumer is available.\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null &&\n              this.props.scrollEnabled !== false\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }*/\n    if (this.props.debug) {\n      return /*#__PURE__*/React.createElement(View, {\n        style: styles.debug\n      }, ret, this._renderDebugOverlay());\n    } else {\n      return ret;\n    }\n  }\n  componentDidUpdate(prevProps) {\n    var _this$props7 = this.props,\n      data = _this$props7.data,\n      extraData = _this$props7.extraData;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    var hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(this.props, this.state.cellsAroundViewport, this._scrollMetrics);\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n\n  _onCellFocusCapture(cellKey) {\n    this._lastFocusedCellKey = cellKey;\n    this._updateCellsToRender();\n  }\n  _triggerRemeasureForChildListsInCell(cellKey) {\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\n      childList.measureLayoutRelativeToContainingList();\n    });\n  }\n  measureLayoutRelativeToContainingList() {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(this.context.getOutermostParentListRef().getScrollRef(), (x, y, width, height) => {\n        this._offsetFromParentVirtualizedList = this._selectOffset({\n          x,\n          y\n        });\n        this._scrollMetrics.contentLength = this._selectLength({\n          width,\n          height\n        });\n        var scrollMetrics = this._convertParentScrollMetrics(this.context.getScrollMetrics());\n        var metricsChanged = this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength || this._scrollMetrics.offset !== scrollMetrics.offset;\n        if (metricsChanged) {\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n\n          // If metrics of the scrollView changed, then we triggered remeasure for child list\n          // to ensure VirtualizedList has the right information.\n          this._nestedChildLists.forEach(childList => {\n            childList.measureLayoutRelativeToContainingList();\n          });\n        }\n      }, error => {\n        console.warn(\"VirtualizedList: Encountered an error while measuring a list's\" + ' offset from its containing VirtualizedList.');\n      });\n    } catch (error) {\n      console.warn('measureLayoutRelativeToContainingList threw an error', error.stack);\n    }\n  }\n  _getFooterCellKey() {\n    return this._getCellKey() + '-footer';\n  }\n  // $FlowFixMe[missing-local-annot]\n  _renderDebugOverlay() {\n    var normalize = this._scrollMetrics.visibleLength / (this._scrollMetrics.contentLength || 1);\n    var framesInLayout = [];\n    var itemCount = this.props.getItemCount(this.props.data);\n    for (var ii = 0; ii < itemCount; ii++) {\n      var frame = this.__getFrameMetricsApprox(ii, this.props);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    var windowTop = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.first, this.props).offset;\n    var frameLast = this.__getFrameMetricsApprox(this.state.cellsAroundViewport.last, this.props);\n    var windowLen = frameLast.offset + frameLast.length - windowTop;\n    var visTop = this._scrollMetrics.offset;\n    var visLen = this._scrollMetrics.visibleLength;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlay]\n    }, framesInLayout.map((f, ii) => /*#__PURE__*/React.createElement(View, {\n      key: 'f' + ii,\n      style: [styles.debugOverlayBase, styles.debugOverlayFrame, {\n        top: f.offset * normalize,\n        height: f.length * normalize\n      }]\n    })), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameLast, {\n        top: windowTop * normalize,\n        height: windowLen * normalize\n      }]\n    }), /*#__PURE__*/React.createElement(View, {\n      style: [styles.debugOverlayBase, styles.debugOverlayFrameVis, {\n        top: visTop * normalize,\n        height: visLen * normalize\n      }]\n    }));\n  }\n  _selectLength(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.height : metrics.width;\n  }\n  _selectOffset(metrics) {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n  _maybeCallOnEdgeReached() {\n    var _this$props8 = this.props,\n      data = _this$props8.data,\n      getItemCount = _this$props8.getItemCount,\n      onStartReached = _this$props8.onStartReached,\n      onStartReachedThreshold = _this$props8.onStartReachedThreshold,\n      onEndReached = _this$props8.onEndReached,\n      onEndReachedThreshold = _this$props8.onEndReachedThreshold,\n      initialScrollIndex = _this$props8.initialScrollIndex;\n    var _this$_scrollMetrics2 = this._scrollMetrics,\n      contentLength = _this$_scrollMetrics2.contentLength,\n      visibleLength = _this$_scrollMetrics2.visibleLength,\n      offset = _this$_scrollMetrics2.offset;\n    var distanceFromStart = offset;\n    var distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distance values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the edge of the list with a distance approximating 0 but not quite there.\n    if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n      distanceFromStart = 0;\n    }\n    if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2px\n    // when oERT is not present (different from 2 viewports used elsewhere)\n    var DEFAULT_THRESHOLD_PX = 2;\n    var startThreshold = onStartReachedThreshold != null ? onStartReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n    var endThreshold = onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : DEFAULT_THRESHOLD_PX;\n    var isWithinStartThreshold = distanceFromStart <= startThreshold;\n    var isWithinEndThreshold = distanceFromEnd <= endThreshold;\n\n    // First check if the user just scrolled within the end threshold\n    // and call onEndReached only once for a given content length,\n    // and only if onStartReached is not being executed\n    if (onEndReached && this.state.cellsAroundViewport.last === getItemCount(data) - 1 && isWithinEndThreshold && this._scrollMetrics.contentLength !== this._sentEndForContentLength) {\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({\n        distanceFromEnd\n      });\n    }\n\n    // Next check if the user just scrolled within the start threshold\n    // and call onStartReached only once for a given content length,\n    // and only if onEndReached is not being executed\n    else if (onStartReached != null && this.state.cellsAroundViewport.first === 0 && isWithinStartThreshold && this._scrollMetrics.contentLength !== this._sentStartForContentLength) {\n      // On initial mount when using initialScrollIndex the offset will be 0 initially\n      // and will trigger an unexpected onStartReached. To avoid this we can use\n      // timestamp to differentiate between the initial scroll metrics and when we actually\n      // received the first scroll event.\n      if (!initialScrollIndex || this._scrollMetrics.timestamp !== 0) {\n        this._sentStartForContentLength = this._scrollMetrics.contentLength;\n        onStartReached({\n          distanceFromStart\n        });\n      }\n    }\n\n    // If the user scrolls away from the start or end and back again,\n    // cause onStartReached or onEndReached to be triggered again\n    else {\n      this._sentStartForContentLength = isWithinStartThreshold ? this._sentStartForContentLength : 0;\n      this._sentEndForContentLength = isWithinEndThreshold ? this._sentEndForContentLength : 0;\n    }\n  }\n  _scheduleCellsToRenderUpdate() {\n    var _this$state$cellsArou = this.state.cellsAroundViewport,\n      first = _this$state$cellsArou.first,\n      last = _this$state$cellsArou.last;\n    var _this$_scrollMetrics3 = this._scrollMetrics,\n      offset = _this$_scrollMetrics3.offset,\n      visibleLength = _this$_scrollMetrics3.visibleLength,\n      velocity = _this$_scrollMetrics3.velocity;\n    var itemCount = this.props.getItemCount(this.props.data);\n    var hiPri = false;\n    var onStartReachedThreshold = onStartReachedThresholdOrDefault(this.props.onStartReachedThreshold);\n    var onEndReachedThreshold = onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold);\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      var distTop = offset - this.__getFrameMetricsApprox(first, this.props).offset;\n      hiPri = distTop < 0 || velocity < -2 && distTop < getScrollingThreshold(onStartReachedThreshold, visibleLength);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (!hiPri && last >= 0 && last < itemCount - 1) {\n      var distBottom = this.__getFrameMetricsApprox(last, this.props).offset - (offset + visibleLength);\n      hiPri = distBottom < 0 || velocity > 2 && distBottom < getScrollingThreshold(onEndReachedThreshold, visibleLength);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (hiPri && (this._averageCellLength || this.props.getItemLayout) && !this._hiPriInProgress) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({\n        abort: true\n      });\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n  _updateViewableItems(props, cellsAroundViewport) {\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(props, this._scrollMetrics.offset, this._scrollMetrics.visibleLength, this._getFrameMetrics, this._createViewToken, tuple.onViewableItemsChanged, cellsAroundViewport);\n    });\n  }\n}\nVirtualizedList.contextType = VirtualizedListContext;\nvar styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: 'scaleY(-1)'\n  },\n  horizontallyInverted: {\n    transform: 'scaleX(-1)'\n  },\n  debug: {\n    flex: 1\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange'\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2\n  }\n});\nexport default VirtualizedList;","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var cache = null;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {\n            return cache.lastResult;\n        }\n        var lastResult = resultFn.apply(this, newArgs);\n        cache = {\n            lastResult: lastResult,\n            lastArgs: newArgs,\n            lastThis: this,\n        };\n        return lastResult;\n    }\n    memoized.clear = function clear() {\n        cache = null;\n    };\n    return memoized;\n}\n\nexport { memoizeOne as default };\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nvar _excluded = [\"numColumns\", \"columnWrapperStyle\", \"removeClippedSubviews\", \"strictMode\"];\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport View from '../../../exports/View';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport deepDiffer from '../deepDiffer';\nimport Platform from '../../../exports/Platform';\nimport invariant from 'fbjs/lib/invariant';\nimport * as React from 'react';\nimport VirtualizedList from '../VirtualizedList';\nimport { keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\nimport memoizeOne from 'memoize-one';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// removeClippedSubviewsOrDefault(this.props.removeClippedSubviews)\nfunction removeClippedSubviewsOrDefault(removeClippedSubviews) {\n  return removeClippedSubviews !== null && removeClippedSubviews !== void 0 ? removeClippedSubviews : Platform.OS === 'android';\n}\n\n// numColumnsOrDefault(this.props.numColumns)\nfunction numColumnsOrDefault(numColumns) {\n  return numColumns !== null && numColumns !== void 0 ? numColumns : 1;\n}\nfunction isArrayLike(data) {\n  // $FlowExpectedError[incompatible-use]\n  return typeof Object(data).length === 'number';\n}\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\nclass FlatList extends React.PureComponent {\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  scrollToEnd(params) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToIndex(params) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToItem(params) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n  scrollToOffset(params) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  getScrollResponder() {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  }\n\n  /**\n   * Provides a reference to the underlying host component\n   */\n  getNativeScrollRef() {\n    if (this._listRef) {\n      /* $FlowFixMe[incompatible-return] Suppresses errors found when fixing\n       * TextInput typing */\n      return this._listRef.getScrollRef();\n    }\n  }\n  getScrollableNode() {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  }\n  constructor(_props) {\n    super(_props);\n    this._virtualizedListPairs = [];\n    this._captureRef = ref => {\n      this._listRef = ref;\n    };\n    this._getItem = (data, index) => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (numColumns > 1) {\n        var ret = [];\n        for (var kk = 0; kk < numColumns; kk++) {\n          var itemIndex = index * numColumns + kk;\n          if (itemIndex < data.length) {\n            var _item = data[itemIndex];\n            ret.push(_item);\n          }\n        }\n        return ret;\n      } else {\n        return data[index];\n      }\n    };\n    this._getItemCount = data => {\n      // Legacy behavior of FlatList was to forward \"undefined\" length if invalid\n      // data like a non-arraylike object is passed. VirtualizedList would then\n      // coerce this, and the math would work out to no-op. For compatibility, if\n      // invalid data is passed, we tell VirtualizedList there are zero items\n      // available to prevent it from trying to read from the invalid data\n      // (without propagating invalidly typed data).\n      if (data != null && isArrayLike(data)) {\n        var numColumns = numColumnsOrDefault(this.props.numColumns);\n        return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;\n      } else {\n        return 0;\n      }\n    };\n    this._keyExtractor = (items, index) => {\n      var _this$props$keyExtrac;\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var keyExtractor = (_this$props$keyExtrac = this.props.keyExtractor) !== null && _this$props$keyExtrac !== void 0 ? _this$props$keyExtrac : defaultKeyExtractor;\n      if (numColumns > 1) {\n        invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);\n        return items.map((item, kk) => keyExtractor(item, index * numColumns + kk)).join(':');\n      }\n\n      // $FlowFixMe[incompatible-call] Can't call keyExtractor with an array\n      return keyExtractor(items, index);\n    };\n    this._renderer = (ListItemComponent, renderItem, columnWrapperStyle, numColumns, extraData\n    // $FlowFixMe[missing-local-annot]\n    ) => {\n      var cols = numColumnsOrDefault(numColumns);\n      var render = props => {\n        if (ListItemComponent) {\n          // $FlowFixMe[not-a-component] Component isn't valid\n          // $FlowFixMe[incompatible-type-arg] Component isn't valid\n          // $FlowFixMe[incompatible-return] Component isn't valid\n          return /*#__PURE__*/React.createElement(ListItemComponent, props);\n        } else if (renderItem) {\n          // $FlowFixMe[incompatible-call]\n          return renderItem(props);\n        } else {\n          return null;\n        }\n      };\n      var renderProp = info => {\n        if (cols > 1) {\n          var _item2 = info.item,\n            _index = info.index;\n          invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');\n          return /*#__PURE__*/React.createElement(View, {\n            style: StyleSheet.compose(styles.row, columnWrapperStyle)\n          }, _item2.map((it, kk) => {\n            var element = render({\n              // $FlowFixMe[incompatible-call]\n              item: it,\n              index: _index * cols + kk,\n              separators: info.separators\n            });\n            return element != null ? /*#__PURE__*/React.createElement(React.Fragment, {\n              key: kk\n            }, element) : null;\n          }));\n        } else {\n          return render(info);\n        }\n      };\n      return ListItemComponent ? {\n        ListItemComponent: renderProp\n      } : {\n        renderItem: renderProp\n      };\n    };\n    this._memoizedRenderer = memoizeOne(this._renderer);\n    this._checkProps(this.props);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._virtualizedListPairs = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityConfig: pair.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(pair.onViewableItemsChanged)\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._virtualizedListPairs.push({\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        viewabilityConfig: this.props.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(this.props.onViewableItemsChanged)\n      });\n    }\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  componentDidUpdate(prevProps) {\n    invariant(prevProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');\n    invariant(prevProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');\n    invariant(!deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig), 'Changing viewabilityConfig on the fly is not supported');\n    invariant(prevProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');\n    this._checkProps(this.props);\n  }\n  // $FlowFixMe[missing-local-annot]\n  _checkProps(props) {\n    var getItem = props.getItem,\n      getItemCount = props.getItemCount,\n      horizontal = props.horizontal,\n      columnWrapperStyle = props.columnWrapperStyle,\n      onViewableItemsChanged = props.onViewableItemsChanged,\n      viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');\n    }\n    invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');\n  }\n  _pushMultiColumnViewable(arr, v) {\n    var _this$props$keyExtrac2;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    var keyExtractor = (_this$props$keyExtrac2 = this.props.keyExtractor) !== null && _this$props$keyExtrac2 !== void 0 ? _this$props$keyExtrac2 : defaultKeyExtractor;\n    v.item.forEach((item, ii) => {\n      invariant(v.index != null, 'Missing index!');\n      var index = v.index * numColumns + ii;\n      arr.push(_objectSpread(_objectSpread({}, v), {}, {\n        item,\n        key: keyExtractor(item, index),\n        index\n      }));\n    });\n  }\n  _createOnViewableItemsChanged(onViewableItemsChanged\n  // $FlowFixMe[missing-local-annot]\n  ) {\n    return info => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          var changed = [];\n          var viewableItems = [];\n          info.viewableItems.forEach(v => this._pushMultiColumnViewable(viewableItems, v));\n          info.changed.forEach(v => this._pushMultiColumnViewable(changed, v));\n          onViewableItemsChanged({\n            viewableItems,\n            changed\n          });\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  }\n  render() {\n    var _this$props = this.props,\n      numColumns = _this$props.numColumns,\n      columnWrapperStyle = _this$props.columnWrapperStyle,\n      _removeClippedSubviews = _this$props.removeClippedSubviews,\n      _this$props$strictMod = _this$props.strictMode,\n      strictMode = _this$props$strictMod === void 0 ? false : _this$props$strictMod,\n      restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    var renderer = strictMode ? this._memoizedRenderer : this._renderer;\n    return (\n      /*#__PURE__*/\n      // $FlowFixMe[incompatible-exact] - `restProps` (`Props`) is inexact.\n      React.createElement(VirtualizedList, _extends({}, restProps, {\n        getItem: this._getItem,\n        getItemCount: this._getItemCount,\n        keyExtractor: this._keyExtractor,\n        ref: this._captureRef,\n        viewabilityConfigCallbackPairs: this._virtualizedListPairs,\n        removeClippedSubviews: removeClippedSubviewsOrDefault(_removeClippedSubviews)\n      }, renderer(this.props.ListItemComponent, this.props.renderItem, columnWrapperStyle, numColumns, this.props.extraData)))\n    );\n  }\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  }\n});\nexport default FlatList;"],"names":["deepDiffer","one","two","maxDepth","len","ii","key","twoKey","deepDiffer$1","_arrayLikeToArray","arr","i","arr2","_unsupportedIterableToArray","o","minLen","arrayLikeToArray","n","_createForOfIteratorHelperLoose","allowArrayLike","it","unsupportedIterableToArray","_excluded","RefreshControl","props","rest","_objectWithoutPropertiesLoose","React","View","TaskQueue","_ref","onMoreTasks","task","tasks","tasksToCancel","queue","_objectSpread","idx","invariant","e","stackIdx","length","stackItem","ex","TaskQueue$1","EventEmitter","eventType","listener","context","registrations","allocate","registration","_len","args","_key","_i","_arr","registry","_requestIdleCallback","cb","options","start","isSupported","canUseDOM","requestIdleCallback","requestIdleCallback$1","_emitter","InteractionManager","promise","resolve","_scheduleUpdate","_taskQueue","handle","_inc","_addInteractionSet","_deleteInteractionSet","deadline","_deadline","_interactionSet","_nextUpdateHandle","_processUpdate","interactionCount","nextInteractionCount","begin","InteractionManager$1","Batchinator","callback","delayMS","timeoutHandle","Batchinator$1","clamp","min","value","max","clamp_1","infoLog","CellRenderMask","numCells","cells","_this$_findRegion","firstIntersect","firstIntersectIdx","_this$_findRegion2","lastIntersect","lastIntersectIdx","newLeadRegion","newTailRegion","newMainRegion","replacementRegions","numRegionsToDelete","other","region","cellIdx","firstIdx","lastIdx","middleIdx","middleRegion","ChildListCollection","list","cellKey","_this$_cellKeyToChild","cellLists","fn","_iterator","_step","listSet","_iterator2","_step2","_this$_cellKeyToChild2","_iterator3","_step3","_this$_cellKeyToChild3","_iterator4","_step4","Info","_listeners","_minSampleCount","_sampleRate","FillRateHelper","sampleRate","minSampleCount","getFrameMetrics","total_time_spent","info","cellsAroundViewport","scrollMetrics","dOffset","offset","velocity","visibleLength","scrollSpeed","now","blankTop","first","firstFrame","blankBottom","last","lastFrame","bottomEdge","pixels_blank","blankness","FillRateHelper$1","StateSafePureComponent","React.PureComponent","partialState","state","ret","err","that","newProps","newState","ViewabilityHelper","config","scrollOffset","viewportHeight","renderRange","itemCount","_this$_config","itemVisiblePercentThreshold","viewAreaCoveragePercentThreshold","viewAreaMode","viewablePercentThreshold","viewableIndices","firstVisible","metrics","top","bottom","_isViewable","createViewToken","onViewableItemsChanged","v","viewableIndicesToCheck","prevItems","nextItems","viewable","changed","_step$value","_step2$value","_viewable","itemLength","_isEntirelyVisible","pixels","_getPixelsVisible","percent","visibleHeight","ViewabilityHelper$1","VirtualizedListContext","React.createContext","VirtualizedListContextProvider","_ref2","children","useMemo","React.createElement","VirtualizedListCellContextProvider","_ref3","currContext","useContext","CellRenderer","React.Component","_this$props","prevCellKey","_this$props2","select","_this$props3","nativeEvent","prevState","renderItem","ListItemComponent","item","index","_this$props4","CellRendererComponent","ItemSeparatorComponent","horizontal","inversionStyle","onCellFocusCapture","onCellLayout","element","itemSeparator","React.isValidElement","cellStyle","styles","result","_extends","StyleSheet","elementsThatOverlapOffsets","offsets","zoomScale","offsetIndex","currentOffset","left","right","mid","frame","scaledOffsetStart","scaledOffsetEnd","newRangeCount","prev","next","computeWindowedRenderLimits","maxToRenderPerBatch","windowSize","getFrameMetricsApprox","_scrollMetrics$zoomSc","visibleBegin","visibleEnd","overscanLength","leadFactor","fillPreference","overscanBegin","overscanEnd","lastItemOffset","_elementsThatOverlapO","overscanFirst","overscanLast","visible","newCellCount","maxNewCells","firstWillAddMore","firstShouldIncrement","lastWillAddMore","lastShouldIncrement","keyExtractor","nullthrows","x","message","error","nullthrowsModule","nullthrows_1","ON_EDGE_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","onStartReachedThresholdOrDefault","onStartReachedThreshold","onEndReachedThresholdOrDefault","onEndReachedThreshold","getScrollingThreshold","threshold","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","findLastWhere","predicate","VirtualizedList","params","animated","veryLast","data","getItemCount","getItemLayout","onScrollToIndexFailed","viewOffset","viewPosition","getItem","_index","childList","t","_this$context","_props","_this$props$updateCel","keys","ref","isVertical","onRefresh","_props$refreshing","ScrollView","layout","curr","width","height","contentLength","timestamp","_this$_convertParentS","dt","tuple","renderMask","isViewable","frameMetrics","remainder","lastFocusedCellRenderer","focusedCellIndex","heightOfCellsBeforeFocused","heightOfCellsAfterFocused","pair","viewabilityConfig","initialRenderRegion","ev","scrollLength","clientLength","isEventTargetScrollable","delta","leftoverDelta","targetDelta","node","nextScrollLeft","nextScrollTop","onScroll","initialScrollIndex","additionalRegions","allRegions","_i2","_allRegions","initialRegion","stickyIndicesSet","_props$initialScrollI","firstCellIndex","lastCellIndex","stickyOffset","itemIdx","_this$_scrollMetrics","distanceFromEnd","newCellsAroundViewport","renderAhead","childIdx","cellKeyForIndex","constrainedCells","stickyHeaderIndices","stickyIndicesFromProps","_this","ListHeaderComponent","debug","end","_loop","shouldListenForLayout","nestedContext","defaultKeyExtractor","_this$props5","ListEmptyComponent","ListFooterComponent","_this$props6","_element","_element2","React.cloneElement","event","spacerKey","renderRegions","lastSpacer","r","section","isLastSpacer","constrainToMeasured","firstMetrics","lastMetrics","spacerSize","_element3","scrollProps","innerRet","prevProps","_this$props7","extraData","hiPriInProgress","y","metricsChanged","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","f","_this$props8","onStartReached","onEndReached","_this$_scrollMetrics2","distanceFromStart","DEFAULT_THRESHOLD_PX","startThreshold","endThreshold","isWithinStartThreshold","isWithinEndThreshold","_this$state$cellsArou","_this$_scrollMetrics3","hiPri","distTop","distBottom","VirtualizedList$1","safeIsNaN","isEqual","second","areInputsEqual","newInputs","lastInputs","memoizeOne","resultFn","cache","memoized","newArgs","lastResult","removeClippedSubviewsOrDefault","removeClippedSubviews","Platform","numColumnsOrDefault","numColumns","isArrayLike","FlatList","kk","itemIndex","_item","items","_this$props$keyExtrac","columnWrapperStyle","cols","render","renderProp","_item2","React.Fragment","viewabilityConfigCallbackPairs","_this$props$keyExtrac2","viewableItems","_removeClippedSubviews","_this$props$strictMod","strictMode","restProps","renderer","FlatList$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]}