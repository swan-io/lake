{"version":3,"file":"TabView-SRJpm0jP.js","sources":["../../../packages/lake/src/components/TabView.tsx"],"sourcesContent":["import { useLocation } from \"@swan-io/chicane\";\nimport {\n  Fragment,\n  ReactNode,\n  Ref,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  LayoutChangeEvent,\n  NativeSyntheticEvent,\n  PressableStateCallbackType,\n  StyleSheet,\n  Text,\n  TextProps,\n  View,\n  WebRole,\n} from \"react-native\";\nimport { P, match } from \"ts-pattern\";\nimport {\n  animations,\n  backgroundColor,\n  colors,\n  negativeSpacings,\n  radii,\n  shadows,\n  spacings,\n  texts,\n} from \"../constants/design\";\nimport { useHover } from \"../hooks/useHover\";\nimport { useMergeRefs } from \"../hooks/useMergeRefs\";\nimport { noop } from \"../utils/function\";\nimport { isNotNullish, isNullish } from \"../utils/nullish\";\nimport { Box } from \"./Box\";\nimport { FocusTrap } from \"./FocusTrap\";\nimport { Icon, IconName } from \"./Icon\";\nimport { LakeText } from \"./LakeText\";\nimport { Link } from \"./Link\";\nimport { PressableText, PressableTextProps } from \"./Pressable\";\nimport { Space, SpacingValue } from \"./Space\";\nimport { TransitionView } from \"./TransitionView\";\n\nconst TABS_HEIGHT = 40;\nexport const tabsViewHeight = TABS_HEIGHT + 1;\n\ntype Tab = ({ id: string } | { url: string }) & {\n  count?: number;\n  icon?: IconName;\n  label: string;\n  withSeparator?: boolean;\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderBottomWidth: 1,\n    borderBottomColor: colors.gray[100],\n    zIndex: 10,\n  },\n  link: {\n    ...texts.medium,\n    position: \"relative\",\n    color: colors.gray[700],\n    height: TABS_HEIGHT,\n    whiteSpace: \"nowrap\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  activeLink: {\n    color: colors.current[500],\n    boxShadow: `inset 0 -2px ${colors.gray[700]}`,\n  },\n  hoveredLink: {\n    boxShadow: `inset 0 -2px ${colors.gray[700]}`,\n  },\n  underline: {\n    position: \"absolute\",\n    bottom: 0,\n    height: 2,\n    width: 1,\n    backgroundColor: colors.current[500],\n  },\n  animatedUnderline: {\n    transformOrigin: \"0 0\",\n    transition: \"200ms ease-in-out transform\",\n  },\n  placeholder: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    visibility: \"hidden\",\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    overflow: \"hidden\",\n    pointerEvents: \"none\",\n  },\n  count: {\n    ...texts.smallRegular,\n    color: colors.current[500],\n    backgroundColor: colors.current[50],\n    borderColor: colors.current[100],\n    borderWidth: 1,\n    borderRadius: radii[4],\n    paddingHorizontal: spacings[4],\n    minWidth: spacings[24],\n    display: \"inline-block\",\n    textAlign: \"center\",\n  },\n  dropdownHandleContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    alignSelf: \"stretch\",\n  },\n  dropdownPlacement: {\n    position: \"absolute\",\n    right: 0,\n    top: \"100%\",\n  },\n  dropdown: {\n    position: \"absolute\",\n    right: 0,\n    top: \"100%\",\n    backgroundColor: backgroundColor.accented,\n    borderRadius: radii[8],\n    boxShadow: shadows.modal,\n    paddingVertical: spacings[8],\n  },\n  dropdownLink: {\n    ...texts.regular,\n    paddingHorizontal: spacings[16],\n    paddingVertical: spacings[8],\n    whiteSpace: \"nowrap\",\n  },\n  dropdownLinkTextHovered: {\n    backgroundColor: colors.gray[50],\n  },\n  dropdownLinkTextActive: {\n    boxShadow: `inset 3px 0 ${colors.current.primary}`,\n    color: colors.current.primary,\n  },\n  separator: {\n    position: \"absolute\",\n    top: 0,\n    left: negativeSpacings[16],\n    bottom: 0,\n    width: 1,\n    backgroundColor: colors.gray[100],\n  },\n  sticky: {\n    backgroundColor: backgroundColor.default,\n    position: \"sticky\",\n    top: -1,\n  },\n});\n\ntype TabViewLinkProps = {\n  onChange: ((id: string) => void) | undefined;\n  tab: Tab;\n  children: ReactNode;\n  style: (state: PressableStateCallbackType & { active: boolean }) => TextProps[\"style\"];\n  role?: WebRole;\n  activeTabId: string | undefined;\n  onFocus?: PressableTextProps[\"onFocus\"];\n  onBlur?: PressableTextProps[\"onBlur\"];\n  onPress?: () => void;\n  ariaCurrentValue?: \"page\" | \"location\";\n};\n\nconst TabViewLink = forwardRef<Text, TabViewLinkProps>(\n  ({ children, style, tab, onChange, activeTabId, onBlur, onFocus, onPress }, ref) => {\n    return match(tab)\n      .with({ url: P.string }, ({ url }) => (\n        <Link ref={ref} to={url} style={style} onFocus={onFocus} onBlur={onBlur} onPress={onPress}>\n          {children}\n        </Link>\n      ))\n      .with({ id: P.string }, ({ id }) => {\n        const isActive = id === activeTabId;\n\n        return (\n          <PressableText\n            ref={ref}\n            style={state => style({ ...state, active: isActive })}\n            onPress={() => {\n              onChange?.(id);\n              onPress?.();\n            }}\n            onFocus={onFocus}\n            onBlur={onBlur}\n          >\n            {children}\n          </PressableText>\n        );\n      })\n      .exhaustive();\n  },\n);\n\nconst Dropdown = ({\n  tabs,\n  onHoverStart,\n  onHoverEnd,\n  onLinkFocus,\n  onLinkBlur,\n  onLinkPress,\n  activeTabId,\n  onChange,\n}: {\n  tabs: Tab[];\n  onHoverStart: () => void;\n  onHoverEnd: () => void;\n  onLinkFocus: () => void;\n  onLinkBlur: () => void;\n  onLinkPress: () => void;\n  activeTabId: string | undefined;\n  onChange: ((id: string) => void) | undefined;\n}) => {\n  const containerRef = useRef(null);\n\n  useHover(containerRef, {\n    onHoverStart,\n    onHoverEnd,\n  });\n\n  return (\n    <View role=\"menu\" style={styles.dropdown} ref={containerRef}>\n      {tabs.map(tab => {\n        const tabId = getTabId(tab);\n\n        return (\n          <TabViewLink\n            onChange={onChange}\n            key={tabId}\n            activeTabId={activeTabId}\n            tab={tab}\n            onFocus={onLinkFocus}\n            onBlur={onLinkBlur}\n            onPress={onLinkPress}\n            role=\"menuitem\"\n            ariaCurrentValue=\"location\"\n            style={({ active, hovered }) => [\n              styles.dropdownLink,\n              active && styles.dropdownLinkTextActive,\n              hovered && styles.dropdownLinkTextHovered,\n            ]}\n          >\n            {tab.label}\n          </TabViewLink>\n        );\n      })}\n    </View>\n  );\n};\n\ntype DropdownOpeningState = \"Open\" | \"OpenFromFocus\" | \"ForcedOpen\" | \"Closed\" | \"ForcedClosed\";\n\ntype DropdownAction = \"Open\" | \"FocusHandle\" | \"Close\" | \"ForceClose\" | \"ForceToggle\";\n\nconst SHOULD_AUTOFOCUS = new Set<DropdownOpeningState>([\"ForcedOpen\", \"OpenFromFocus\"]);\nconst SHOULD_OPEN = new Set<DropdownOpeningState>([\"Open\", \"ForcedOpen\", \"OpenFromFocus\"]);\nconst SHOULD_LOCK_FOCUS = new Set<DropdownOpeningState>([\"ForcedOpen\"]);\n\nconst DropdownItems = forwardRef<\n  View,\n  {\n    tabs: Tab[];\n    currentUrl: string;\n    otherLabel: string;\n    activeTabId: string | undefined;\n    onChange: ((id: string) => void) | undefined;\n  }\n>(({ tabs, otherLabel, currentUrl, activeTabId, onChange }, ref) => {\n  const [openingStatus, dispatch] = useReducer(\n    (state: DropdownOpeningState, action: DropdownAction): DropdownOpeningState => {\n      return match([action, state])\n        .returnType<DropdownOpeningState>()\n        .with(\n          [\"ForceToggle\", \"Closed\"],\n          [\"ForceToggle\", \"Open\"],\n          [\"ForceToggle\", \"ForcedClosed\"],\n          () => \"ForcedOpen\",\n        )\n        .with([\"ForceToggle\", \"OpenFromFocus\"], [\"ForceToggle\", \"ForcedOpen\"], () => \"ForcedClosed\")\n        .with([\"ForceClose\", P.any], () => \"ForcedClosed\")\n        .with([\"FocusHandle\", \"ForcedClosed\"], () => \"Closed\")\n        .with(\n          [\"Open\", \"ForcedOpen\"],\n          [\"FocusHandle\", \"ForcedOpen\"],\n          [\"Close\", \"ForcedOpen\"],\n          () => \"ForcedOpen\",\n        )\n        .with([\"Open\", P.any], () => \"Open\")\n        .with([\"FocusHandle\", P.any], () => \"OpenFromFocus\")\n        .with([\"Close\", P.any], () => \"Closed\")\n        .exhaustive();\n    },\n    \"Closed\",\n  );\n\n  const timeoutRef = useRef<number | undefined>(undefined);\n  const handleRef = useRef<View>(null);\n  const containerRef = useRef<View>(null);\n\n  const lastFocusTimeout = useRef<number | null>(null);\n  const {\n    onHandleFocus,\n    onLinkFocus,\n    onAnyBlur,\n    onHoverStart,\n    onHoverEnd,\n    onPress,\n    onPressOutside,\n    onEscapeKey,\n  } = useMemo(\n    () => ({\n      onHandleFocus: (event: NativeSyntheticEvent<React.FocusEvent>) => {\n        if (isNullish(containerRef.current)) {\n          return;\n        }\n        lastFocusTimeout.current = Date.now();\n        const container = containerRef.current as unknown as Element;\n        const focusEvent = event as unknown as FocusEvent;\n        // Don't reopen if leaving\n        if (!container.contains(focusEvent.relatedTarget as Node | null)) {\n          if (isNotNullish(timeoutRef.current)) {\n            clearTimeout(timeoutRef.current);\n          }\n          dispatch(\"FocusHandle\");\n        }\n      },\n      onLinkFocus: () => {\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        dispatch(\"Open\");\n      },\n      onAnyBlur: () => {\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        timeoutRef.current = window.setTimeout(() => {\n          dispatch(\"Close\");\n        }, 300);\n      },\n      onHoverStart: () => {\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        dispatch(\"Open\");\n      },\n\n      onHoverEnd: () => {\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        timeoutRef.current = window.setTimeout(() => {\n          dispatch(\"Close\");\n        }, 300);\n      },\n\n      onPress: () => {\n        if (lastFocusTimeout.current != null && Date.now() - lastFocusTimeout.current < 32) {\n          return;\n        }\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        dispatch(\"ForceToggle\");\n      },\n\n      onPressOutside: (event: MouseEvent | TouchEvent) => {\n        if (isNotNullish(handleRef.current)) {\n          const handle = handleRef.current as unknown as Element;\n          if (handle.contains(event.target as Node | null)) {\n            return;\n          }\n        }\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        // Only force closing in case the focus comes directly to the handle\n        // Then put it back to a regular closed state\n        dispatch(\"ForceClose\");\n        timeoutRef.current = window.setTimeout(() => {\n          dispatch(\"Close\");\n        }, 300);\n      },\n\n      onEscapeKey: () => {\n        if (isNotNullish(timeoutRef.current)) {\n          clearTimeout(timeoutRef.current);\n        }\n        dispatch(\"ForceClose\");\n        timeoutRef.current = window.setTimeout(() => {\n          dispatch(\"Close\");\n        }, 300);\n      },\n    }),\n    [],\n  );\n\n  useEffect(() => {\n    return () => {\n      if (isNotNullish(timeoutRef.current)) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  const shouldOpen = SHOULD_OPEN.has(openingStatus);\n  const shouldAutoFocus = SHOULD_AUTOFOCUS.has(openingStatus);\n  const shouldLockFocus = SHOULD_LOCK_FOCUS.has(openingStatus);\n\n  useHover(handleRef, {\n    onHoverStart,\n    onHoverEnd,\n  });\n\n  const mergedRef = useMergeRefs(containerRef, ref);\n\n  const activeTab = useMemo(\n    () => tabs.find(tab => isTabActive({ activeTabId, currentLocationURL: currentUrl, tab })),\n    [activeTabId, currentUrl, tabs],\n  );\n\n  return (\n    <View style={styles.dropdownHandleContainer} ref={mergedRef}>\n      <PressableText\n        ref={handleRef}\n        role=\"button\"\n        aria-expanded={shouldOpen}\n        aria-haspopup=\"true\"\n        onFocus={onHandleFocus}\n        onBlur={onAnyBlur}\n        onPress={onPress}\n        style={({ hovered }) => [\n          styles.link,\n          isNotNullish(activeTab) ? styles.activeLink : hovered ? styles.hoveredLink : null,\n        ]}\n      >\n        <Text>{otherLabel}</Text>\n        <Space width={8} />\n        <Text style={styles.count}>{tabs.length}</Text>\n        <Space width={4} />\n        <Icon name=\"chevron-down-filled\" size={12} />\n      </PressableText>\n\n      <TransitionView {...animations.fadeAndSlideInFromBottom} style={styles.dropdownPlacement}>\n        {shouldOpen ? (\n          <FocusTrap\n            autoFocus={shouldAutoFocus}\n            focusLock={shouldLockFocus}\n            returnFocus={shouldLockFocus}\n            onClickOutside={onPressOutside}\n            onEscapeKey={shouldLockFocus ? onEscapeKey : undefined}\n          >\n            <Dropdown\n              onChange={onChange}\n              activeTabId={activeTabId}\n              tabs={tabs}\n              onHoverStart={onHoverStart}\n              onHoverEnd={onHoverEnd}\n              onLinkFocus={onLinkFocus}\n              onLinkBlur={onAnyBlur}\n              onLinkPress={onEscapeKey}\n            />\n          </FocusTrap>\n        ) : null}\n      </TransitionView>\n    </View>\n  );\n});\n\ntype Props = {\n  activeTabId?: string;\n  onChange?: (id: string) => void;\n  tabs: Tab[];\n  otherLabel: string;\n  hideIfSingleItem?: boolean;\n  padding?: SpacingValue;\n  sticky?: boolean;\n};\n\ntype IsTabActiveParams = {\n  tab: Tab;\n  activeTabId: string | undefined;\n  currentLocationURL: string;\n};\nconst isTabActive = ({ tab, activeTabId, currentLocationURL }: IsTabActiveParams) =>\n  match(tab)\n    .with({ url: P.string }, ({ url }) => currentLocationURL.startsWith(url))\n    .with({ id: P.string }, ({ id }) => isNotNullish(activeTabId) && id === activeTabId)\n    .exhaustive();\n\nconst getTabId = (tab: Tab) =>\n  match(tab)\n    .with({ url: P.string }, ({ url }) => url)\n    .with({ id: P.string }, ({ id }) => id)\n    .exhaustive();\n\nexport const TabView = ({\n  tabs,\n  otherLabel,\n  hideIfSingleItem = true,\n  sticky = false,\n  padding,\n  activeTabId,\n  onChange,\n}: Props) => {\n  const containerRef = useRef<View | null>(null);\n  const placeholderRef = useRef<View | null>(null);\n  const otherPlaceholderRef = useRef<View | null>(null);\n\n  const linksRefs: Ref<Record<string, Text | null>> = useRef({});\n  const placeholderLinkRef: Ref<Record<string, Text | null>> = useRef({});\n  const [{ left, width }, setUnderlinePosition] = useState({ left: 0, width: 0 });\n  const [hasRendered, setHasRendered] = useState(false);\n  const [[kept, collapsed], setKeptCollapsed] = useState<[Tab[], Tab[]]>([[], []]);\n\n  const location = useLocation();\n  const { path } = location;\n  const currentLocationURL = location.toString();\n\n  useEffect(() => {\n    if (isNotNullish(linksRefs.current)) {\n      const values = Object.entries(linksRefs.current);\n      const container = containerRef.current;\n\n      for (const [tabId, node] of values) {\n        if (\n          (tabId === activeTabId || \"/\" + path.join(\"/\") === tabId) &&\n          isNotNullish(node) &&\n          isNotNullish(container)\n        ) {\n          node.measureLayout(\n            container as unknown as number,\n            (left, _, width) => {\n              const leftOffset = padding ?? 0;\n              setUnderlinePosition({ left: left - leftOffset, width });\n            },\n            noop,\n          );\n          return;\n        }\n      }\n    }\n\n    setUnderlinePosition({ left: 0, width: 0 });\n  }, [path, kept, collapsed, padding, activeTabId]);\n\n  useEffect(() => {\n    setHasRendered(width > 0);\n  }, [width]);\n\n  const reajustLayout = useCallback(\n    ({ width }: { container: Element; width: number }) => {\n      const items = tabs.map(tab => {\n        if (placeholderLinkRef.current) {\n          const tabId = getTabId(tab);\n          const ref = placeholderLinkRef.current[tabId];\n\n          if (isNotNullish(ref)) {\n            const element = ref as unknown as Element;\n            const width = element.getBoundingClientRect().width;\n\n            return { tab, width: width + 32 };\n          } else {\n            return { tab, width: 0 };\n          }\n        } else {\n          return { tab, width: 0 };\n        }\n      });\n\n      const kept: (Tab & { width: number })[] = [];\n      const collapsed: (Tab & { width: number })[] = [];\n\n      let cummulatedWidth = 0;\n\n      items.forEach(item => {\n        cummulatedWidth += item.width;\n\n        if (cummulatedWidth < width) {\n          kept.push({ ...item.tab, width: item.width });\n        } else {\n          if (isTabActive({ activeTabId, currentLocationURL, tab: item.tab })) {\n            while (\n              kept.length !== 0 &&\n              kept.reduce((acc, item) => acc + item.width, 0) + (item.width + 16) >= width\n            ) {\n              const last = kept.pop();\n\n              if (isNotNullish(last)) {\n                collapsed.unshift(last);\n                cummulatedWidth -= last.width;\n              }\n            }\n\n            kept.push({ ...item.tab, width: item.width });\n          } else {\n            collapsed.push({ ...item.tab, width: item.width });\n          }\n        }\n      });\n      const otherLabelRef = otherPlaceholderRef.current;\n      let otherLabelWidth = 100;\n      if (isNotNullish(otherLabelRef)) {\n        const otherLabel = otherLabelRef as unknown as Element;\n        otherLabelWidth = otherLabel.getBoundingClientRect().width;\n      }\n\n      const activeInKeptIndex = kept.findIndex(item =>\n        isTabActive({ activeTabId, currentLocationURL, tab: item }),\n      );\n\n      if (activeInKeptIndex !== -1) {\n        const activeInKept = kept[activeInKeptIndex];\n        const activeInKeptWidth = activeInKept?.width ?? 0;\n        const restInKept = [\n          ...kept.slice(0, activeInKeptIndex),\n          ...kept.slice(activeInKeptIndex + 1),\n        ];\n        while (\n          restInKept.length !== 0 &&\n          restInKept.reduce((acc, item) => acc + item.width, 0) +\n            activeInKeptWidth +\n            (collapsed.length >= 1 ? otherLabelWidth : 0) >=\n            width\n        ) {\n          const last = restInKept.pop();\n          if (isNotNullish(last)) {\n            collapsed.unshift(last);\n          }\n        }\n\n        const finalKept = [\n          ...restInKept.slice(0, activeInKeptIndex),\n          ...(activeInKept != null ? [activeInKept] : []),\n          ...restInKept.slice(activeInKeptIndex),\n        ];\n\n        setKeptCollapsed([finalKept, collapsed]);\n      } else {\n        setKeptCollapsed([kept, collapsed]);\n      }\n    },\n    [tabs, activeTabId, currentLocationURL],\n  );\n\n  const onLayout = useCallback(\n    ({\n      target,\n      nativeEvent: {\n        layout: { width },\n      },\n    }: LayoutChangeEvent) => {\n      reajustLayout({ container: target as unknown as Element, width });\n    },\n    [reajustLayout],\n  );\n\n  useLayoutEffect(() => {\n    const ref = placeholderRef.current;\n    if (ref) {\n      const element = ref as unknown as Element;\n      const width = element.getBoundingClientRect().width;\n      reajustLayout({ container: element, width });\n    }\n  }, [reajustLayout]);\n\n  if (tabs.length <= 1 && hideIfSingleItem) {\n    return null;\n  }\n\n  return (\n    <Box\n      alignItems=\"center\"\n      direction=\"row\"\n      role=\"tablist\"\n      ref={containerRef}\n      style={[styles.container, sticky && styles.sticky, { paddingHorizontal: padding }]}\n    >\n      <View style={styles.placeholder} aria-hidden={true} ref={placeholderRef} onLayout={onLayout}>\n        {tabs.map(tab => {\n          const { label, icon, count } = tab;\n          const tabId = getTabId(tab);\n\n          return (\n            <Fragment key={tabId}>\n              <TabViewLink\n                ref={ref => {\n                  if (placeholderLinkRef.current) {\n                    placeholderLinkRef.current[tabId] = ref;\n                  }\n                }}\n                activeTabId={activeTabId}\n                tab={tab}\n                onChange={onChange}\n                style={({ active, hovered }) => [\n                  styles.link,\n                  active ? styles.activeLink : hovered ? styles.hoveredLink : null,\n                ]}\n              >\n                {isNotNullish(icon) && (\n                  <>\n                    <Icon name={icon} size={16} color=\"currentColor\" />\n                    <Space width={8} />\n                  </>\n                )}\n\n                <Text>{label}</Text>\n\n                {count != null ? (\n                  <>\n                    <Space width={8} />\n                    <Text style={styles.count}>{count}</Text>\n                  </>\n                ) : null}\n              </TabViewLink>\n\n              <Space width={32} />\n            </Fragment>\n          );\n        })}\n\n        <LakeText ref={otherPlaceholderRef} style={styles.link}>\n          <Text>{otherLabel}</Text>\n          <Space width={8} />\n          <Text style={styles.count}>{tabs.length}</Text>\n          <Space width={4} />\n          <Icon name=\"chevron-down-filled\" size={12} />\n        </LakeText>\n      </View>\n\n      {kept.map(tab => {\n        const { label, icon, withSeparator, count } = tab;\n        const tabId = getTabId(tab);\n\n        return (\n          <Fragment key={tabId}>\n            <TabViewLink\n              ref={ref => {\n                if (linksRefs.current) {\n                  linksRefs.current[tabId] = ref;\n                }\n              }}\n              onChange={onChange}\n              activeTabId={activeTabId}\n              tab={tab}\n              role=\"tab\"\n              style={({ active, hovered }) => [\n                styles.link,\n                active ? styles.activeLink : hovered ? styles.hoveredLink : null,\n              ]}\n            >\n              {withSeparator === true && <View style={styles.separator} role=\"none\" />}\n\n              {isNotNullish(icon) && (\n                <>\n                  <Icon name={icon} size={16} color=\"currentColor\" />\n                  <Space width={8} />\n                </>\n              )}\n\n              <Text>{label}</Text>\n\n              {count != null ? (\n                <>\n                  <Space width={8} />\n                  <Text style={styles.count}>{count}</Text>\n                </>\n              ) : null}\n            </TabViewLink>\n\n            <Space width={32} />\n          </Fragment>\n        );\n      })}\n\n      {collapsed.length > 0 ? (\n        <DropdownItems\n          ref={ref => {\n            collapsed.forEach(item => {\n              if (linksRefs.current) {\n                const tabId = getTabId(item);\n                linksRefs.current[tabId] = ref;\n              }\n            });\n          }}\n          onChange={onChange}\n          tabs={collapsed}\n          currentUrl={currentLocationURL}\n          otherLabel={otherLabel}\n          activeTabId={activeTabId}\n        />\n      ) : null}\n\n      {hasRendered && (\n        <View\n          style={[\n            styles.underline,\n            styles.animatedUnderline,\n            { transform: `translateX(${left}px)`, width },\n          ]}\n        />\n      )}\n    </Box>\n  );\n};\n"],"names":["TABS_HEIGHT","styles","StyleSheet","colors","texts","radii","spacings","backgroundColor","shadows","negativeSpacings","TabViewLink","forwardRef","children","style","tab","onChange","activeTabId","onBlur","onFocus","onPress","ref","match","P","url","jsx","Link","id","isActive","PressableText","state","Dropdown","tabs","onHoverStart","onHoverEnd","onLinkFocus","onLinkBlur","onLinkPress","containerRef","useRef","useHover","View","tabId","getTabId","active","hovered","SHOULD_AUTOFOCUS","SHOULD_OPEN","SHOULD_LOCK_FOCUS","DropdownItems","otherLabel","currentUrl","openingStatus","dispatch","useReducer","action","timeoutRef","handleRef","lastFocusTimeout","onHandleFocus","onAnyBlur","onPressOutside","onEscapeKey","useMemo","event","isNullish","container","focusEvent","isNotNullish","useEffect","shouldOpen","shouldAutoFocus","shouldLockFocus","mergedRef","useMergeRefs","activeTab","isTabActive","jsxs","Text","Space","Icon","TransitionView","animations","FocusTrap","currentLocationURL","TabView","hideIfSingleItem","sticky","padding","placeholderRef","otherPlaceholderRef","linksRefs","placeholderLinkRef","left","width","setUnderlinePosition","useState","hasRendered","setHasRendered","kept","collapsed","setKeptCollapsed","location","useLocation","path","values","node","_","noop","reajustLayout","useCallback","items","cummulatedWidth","item","acc","last","otherLabelRef","otherLabelWidth","activeInKeptIndex","activeInKept","activeInKeptWidth","restInKept","finalKept","onLayout","target","useLayoutEffect","element","Box","label","icon","count","Fragment","LakeText","withSeparator"],"mappings":"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"}