{"version":3,"file":"SidebarNavigationTracker.stories-CBK6ciW0.js","sources":["../../../packages/lake/src/components/SidebarNavigationTracker.tsx","../../../packages/lake/__stories__/SidebarNavigationTracker.stories.tsx"],"sourcesContent":["import { createContext, useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { ScrollView, ScrollViewProps } from \"./ScrollView\";\n\nconst styles = StyleSheet.create({\n  track: {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    width: 3,\n  },\n  marker: {\n    pointerEvents: \"none\",\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    width: 3,\n  },\n  trackIndicator: {\n    width: 3,\n    height: 1,\n    position: \"absolute\",\n    right: 0,\n    transformOrigin: \"right top\",\n    transition: \"150ms ease-in-out\",\n    transitionProperty: \"transform, background-color\",\n  },\n});\n\ntype Track = { color: string; element: View };\n\nconst Context = createContext((_: Track) => {});\n\ntype Props = {\n  style?: ScrollViewProps[\"style\"];\n  contentContainerStyle?: ScrollViewProps[\"style\"];\n  children: ScrollViewProps[\"children\"];\n};\n\ntype Layout = { color: string; top: number; height: number };\n\n// using `offsetTop` and `offsetHeight` here to avoid calculations\n// being wrong when ancestor has as CSS transform applied\nconst getCoordinates = (element: HTMLElement, guide: HTMLElement) => {\n  const parentTop = guide.parentElement?.getBoundingClientRect().top ?? 0;\n  const elementRect = element.getBoundingClientRect();\n\n  return { top: elementRect.top - parentTop, height: elementRect.height };\n};\n\nexport const SidebarNavigationTracker = ({ style, contentContainerStyle, children }: Props) => {\n  const [track, setTrackRaw] = useState<Layout | null>(null);\n  const trackRef = useRef<View>(null);\n  const lastElementRef = useRef<View>(null);\n\n  const setTrack = useCallback(({ color, element }: Track) => {\n    if (trackRef.current != null) {\n      lastElementRef.current = element;\n      const { top, height } = getCoordinates(\n        element as unknown as HTMLElement,\n        trackRef.current as unknown as HTMLElement,\n      );\n      setTrackRaw({\n        color,\n        top,\n        height,\n      });\n    }\n  }, []);\n\n  const onLayout = useCallback(() => {\n    if (lastElementRef.current != null && track?.color != null) {\n      const { top, height } = getCoordinates(\n        lastElementRef.current as unknown as HTMLElement,\n        trackRef.current as unknown as HTMLElement,\n      );\n      setTrackRaw({\n        color: track?.color,\n        top,\n        height,\n      });\n    }\n  }, [track]);\n\n  return (\n    <Context.Provider value={setTrack}>\n      <ScrollView\n        scrollEventThrottle={30}\n        onLayout={onLayout}\n        style={style}\n        contentContainerStyle={contentContainerStyle}\n        role=\"banner\"\n      >\n        {children}\n\n        <View style={styles.track} ref={trackRef}>\n          {track != null ? (\n            <View\n              style={[\n                styles.trackIndicator,\n                {\n                  transform: `translateY(${track.top}px)`,\n                  height: track.height,\n                  backgroundColor: track.color,\n                },\n              ]}\n            />\n          ) : null}\n        </View>\n      </ScrollView>\n    </Context.Provider>\n  );\n};\n\ntype MarkerProps = {\n  color: string;\n};\n\nexport const SidebarNavigationTrackerActiveMarker = ({ color }: MarkerProps) => {\n  const setLayoutReference = useContext(Context);\n  const elementRef = useRef<View>(null);\n\n  const onLayout = useCallback(() => {\n    if (elementRef.current != null) {\n      setLayoutReference({ color, element: elementRef.current });\n    }\n  }, [setLayoutReference, color]);\n\n  useEffect(() => {\n    if (elementRef.current != null) {\n      setLayoutReference({ color, element: elementRef.current });\n    }\n  }, [setLayoutReference, color]);\n\n  return <View ref={elementRef} onLayout={onLayout} style={styles.marker} />;\n};\n","import { Meta } from \"@storybook/react\";\nimport { useState } from \"react\";\nimport { Pressable, StyleSheet } from \"react-native\";\nimport { Box } from \"../src/components/Box\";\nimport { LakeText } from \"../src/components/LakeText\";\nimport {\n  SidebarNavigationTracker,\n  SidebarNavigationTrackerActiveMarker,\n} from \"../src/components/SidebarNavigationTracker\";\nimport { colors } from \"../src/constants/design\";\nimport { StoryBlock } from \"./_StoriesComponents\";\n\nconst styles = StyleSheet.create({\n  container: {\n    maxWidth: 200,\n  },\n  row: {\n    height: 32,\n    width: \"100%\",\n  },\n  item: {\n    boxShadow: \"0 1px rgba(0, 0, 0, 0.1)\",\n  },\n});\n\nexport default {\n  title: \"Interactivity/SidebarNavigationTracker\",\n  component: SidebarNavigationTracker,\n} as Meta<typeof SidebarNavigationTracker>;\n\nconst generateInterval = (start: number, end: number) =>\n  new Array(end - start + 1).fill(0).map((_, index) => start + index);\n\nconst rows = generateInterval(1, 10).map(id => ({\n  id: id.toString(),\n  title: `Row ${id}`,\n}));\n\nexport const Default = () => {\n  const [activeRow, setActiveRow] = useState(\"\");\n\n  const selectRow = (id: string) => () => {\n    setActiveRow(id);\n  };\n\n  return (\n    <StoryBlock\n      title=\"SidebarNavigationTracker\"\n      description=\"You can click on a row to display the navigation tracker\"\n    >\n      <SidebarNavigationTracker contentContainerStyle={styles.container}>\n        {rows.map(row => (\n          <Pressable key={row.id} onPress={selectRow(row.id)} style={styles.item}>\n            <Box style={styles.row} direction=\"row\" alignItems=\"center\">\n              {activeRow === row.id && (\n                <SidebarNavigationTrackerActiveMarker color={colors.positive.primary} />\n              )}\n\n              <LakeText\n                color={activeRow === row.id ? colors.positive.primary : colors.gray.primary}\n                variant={activeRow === row.id ? \"semibold\" : \"regular\"}\n              >\n                {row.title}\n              </LakeText>\n            </Box>\n          </Pressable>\n        ))}\n      </SidebarNavigationTracker>\n    </StoryBlock>\n  );\n};\n"],"names":["styles","StyleSheet","Context","createContext","_","getCoordinates","element","guide","parentTop","elementRect","SidebarNavigationTracker","style","contentContainerStyle","children","track","setTrackRaw","useState","trackRef","useRef","lastElementRef","setTrack","useCallback","color","top","height","onLayout","jsx","jsxs","ScrollView","View","SidebarNavigationTrackerActiveMarker","setLayoutReference","useContext","elementRef","useEffect","create","container","maxWidth","row","width","item","boxShadow","SidebarNavigationTracker_stories","title","component","generateInterval","start","end","Array","fill","map","index","rows","id","toString","Default","activeRow","setActiveRow","selectRow","StoryBlock","Pressable","Box","colors","positive","primary","LakeText","gray"],"mappings":"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"}